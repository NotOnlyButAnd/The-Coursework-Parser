344
МОДЕЛИРОВАНИЕ И ВИЗУАЛИЗАЦИЯ РАЗЛИЧНЫХ СТРАТЕГИЙ SLAM С ПОМОЩЬЮ LIDAR В ПОМЕЩЕНИЯХ ДЛЯ МОБИЛЬНЫХ РОБОТОВ 
3 Реализованный метод 
3.2 Реализация 
3.2.2 LIDAR 
----------
Для моделирования работы LIDAR был реализован класс Lidar. Данный класс содержит поля описывающие центральную точку и точку, которая имеет нулевой градус и находится на достаточно большом расстоянии от центральной. В работе используется LIDAR, который не имеет ограничений по расстоянию, а также получает на вход модель окружающей среды в формате bmp. Для того чтобы просканировать область строится уравнение прямой между центральной точкой и точкой, находящейся на далеком расстоянии и имеющую нулевой градус относительно робота. В этом уравнение необходимо пройтись по каждой точке и сравнить цвет если он есть значит необходимо вычислить расстояние от полученной точки до центральной и добавить в список расстояний. Затем точку имеющую нулевой градус необходимо повернуть на градус равный угловому разрешению LIDAR, построить уравнение прямой между новой точкой и центральной затем проделать такие же действия, как и с точкой на нулевом градусе. Необходимые действия делать до тех пор, пока не будет отсканирована область на возможное количество градусов в зависимости от углового разрешения LIDAR, таким образом мы получаем массив дистанций в данной точке среды. Разместив LIDAR в центре робота, и передвигая и поворачивая с роботом мы получаем набор дистанций для различных положений робота.
Реализация сканирования области в указанной точке:
public List<int> Scan(int x, int y){
List<int> listdistances = new List<int>();             PointF[] tmp = new PointF[2];             tmp[0].X = x;             tmp[0].Y = y;             tmp[1].X = x;
tmp[1].Y = -20000000;             for (int i = 0; i < 360 / Resolution; i++)
{                 tmp[1].X = x;                 tmp[1].Y = -20000000;
tmp[1] = Geometry.Turndot(tmp[1], new PointF(x,y), i *
Resolution);                 double time = Math.Max(Math.Abs(tmp[0].X - tmp[1].X),
Math.Abs(tmp[0].Y - tmp[1].Y));
for (int j = 0; j <= time; j++)
{                     double delta = j / time;                     double a = delta * (tmp[1].X - tmp[0].X) + tmp[0].X;                     double b = delta * (tmp[1].Y - tmp[0].Y) + tmp[0].Y;                     Color cl = bmp.GetPixel(Convert.ToInt32(a),
Convert.ToInt32(b));
if (cl.A == 255){
listdistances.Add(Geometry.Distance(new
PointF(tmp[0].X,tmp[0].Y), new
PointF(Convert.ToInt32(a), Convert.ToInt32(b))));
break; }}}             return listdistances;}
Где x, y координаты в которых производится сканирование.
Пример работы LIDAR показан на рисунке 10.
Рисунок 10 – Пример работы LIDAR
На данном рисунке показан график который изображает расстояние до препятствий, сам LIDAR находится в центре робота.