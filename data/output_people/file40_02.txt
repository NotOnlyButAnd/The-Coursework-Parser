549
СРАВНИТЕЛЬНЫЙ АНАЛИЗ СЛОЖНОСТИ ГЕНЕТИЧЕСКИХ АЛГОРИТМОВ НА ПРИМЕРЕ ЗАДАЧИ КОММИВОЯЖЕРА 
2 Структура работы генетического алгоритма 
----------
Эволюционные методы оптимизации представляют большой интерес. Упоминания о применении генетических алгоритмов для решения задачи оптимизации относится к концу 1960-х гг. Эволюционные методы основываются на примере работы эволюции и обучения, в частности, к таким методам относятся генетические алгоритмы, нейронные сети и эволюционные алгоритмы [9].
Генетический алгоритм – это эвристический алгоритм поиска, используется для решения задач оптимизации и моделирования путем случайного подбора, комбинирования и вариации искомых параметров с применением механизмов, напоминающих биологическую эволюцию. Этот алгоритм является разновидностью эволюционных вычислений. Отличительной чертой генетического алгоритма является то, что акцент падает на использование оператора скрещивания, производящего операцию рекомбинации решений-кандидатов (геномы), роль которой аналогична роли скрещивания в живой природе. Это новый, но не единственный способ решения задач оптимизации [8].
Генетические алгоритмы возникли в результаты наблюдения и попыток копирования естественных процессов, происходящих в мире живых организмов, в частности, эволюции и связанной с ней селекции популяций живых существ. При сопоставлении нейронных сетей и генетических алгоритмов следует упомянуть, что у них принципиальные различия в длительности протекания упоминаемых естественных процессов, т.е. на чрезвычайно быструю обработку информации в нервной системе и очень медленных процесс естественной эволюции. Однако при компьютерном моделировании эти различия оказывается несущественными.
В генетических алгоритмах применяется ряд терминов, заимствованных из генетики, прежде всего гены и хромосомы, а также популяция, особь, аллель, генотип и т.д.
Для применения алгоритма задачи приводятся к виду, при котором решение может быть представлено как набор более мелких составных частей (аналог генотипа и его частей – генов). Длины этих генотипов могут быть как фиксированной величиной, так и переменной.
Алгоритм состоит из нескольких основных шагов:
1.  Подготовка – формирование начальной популяции, т.е. начальный набор решений. Чаще всего используют случайный процесс формирования с целью охватить большее разнообразие для поиска решений, однако алгоритм для формирования может быть различным. Так, например, формирование может происходить с заранее известными свойствами, но следует иметь в виду, что это может повлиять на ход развития системы.
2.  Оценка приспособленности особей в популяции и их отбор – важный этап алгоритма, где происходит выбор направления развития популяций. Чаще всего отбрасываются решения с низким значением фитнесс-функции (или с высоким, в зависимости от того, в чем состоит задача – в минимизации или в максимизации функции). Это способствует улучшению средней приспособленности всей популяции.
3.  Проверка условия остановки алгоритма – происходит определение условия остановки генетического алгоритма. Это условие зависит от конкретного применения алгоритма.
4.  Селекция особей – этап, в котором выбираются хромосомы, которые будут участвовать в создании потомков для следующей популяции, т.е. для очередного поколения. Такой выбор производится согласно принципу естественного отбора, по которому наибольшие шансы на участи в создании новых особей имеют родители с наибольшими значениями фитнесс-функции. 5.  Скрещивание и мутация – этап, на котором происходит образование новых решений в популяции, прошедшей через отбор, для восстановления численности после этапа отбора. При скрещивании берутся два или более существующих генома из популяции, затем определенным образом происходит соединение составных частей в новый геном, который остается в популяции и будет являться новым решением. Затем геном подвергается частичным изменением. Этот этап позволяет популяциям быть более разнообразными.
6.  Формирование новой популяции после всех внесенных изменений.
7.  Оценка решений, выбор наилучшей особи – после выполнение предыдущих этапов проверяется было ли найдено необходимое решение. Однако чаще для решения этой задачи применяется подход с числом поколений (число создаваемых популяций).
На рисунке 2 изображена структура работы алгоритма.
Рисунок 2 – Структура генетического алгоритма
В коде программы за последовательность выполнения этапов алгоритма отвечает класс GeneticAlg в методе run (Приложение А).