514
РАЗРАБОТКА МОБИЛЬНОГО ПРИЛОЖЕНИЯ ДЛЯ ОТОБРАЖЕНИЯ РАСПИСАНИЯ НА ПЛАТФОРМЕ ANDROID
3 Разработка приложения 
3.2 Особенности реализации 
----------
При запуске приложения пользователя встречает загрузочный экран, представленный startActivity. Его визуальная составляющая делится на две части, которые отображаются в разные моменты времени:
1)  простой фон с логотипом приложения (рисунок 3) отображается во время получения данных с сервера;
2)  два пикера, которые помогают пользователю выбрать необходимый параметр для отображения расписания (рисунок 4) отображаются сразу после получения актуального JSON-файла с сервера.
Рисунок 3 – startActivity во время получения данных
Рисунок 4 – startActivity после полученных данных
Программная составляющая состоит, во-первых, из проверки установленных пользовательских настроек. Все настройки пользователя хранятся в базе данных. И при запуске приложения записываются в глобальные переменные, чтобы сократить количество запросов к базе данных. Данные из этих переменных удаляются после перезапуска приложения. В данном приложении пользовательские настройки – это выбранная группа или преподаватель, чье расписание необходимо отображать, а также версия расписания (полученная от сервера), необходимая для проверки актуальности сохраненных данных. Во-вторых, здесь же реализуется отправка запроса на сервер. Делается это с помощью библиотеки OkHTTP3, которая позволяет работать с HTTP запросами, а также обрабатывать ошибки. В случае успешного получения ответа от сервера, обновляется информация в локальной базе данных.
Если в настройках не установлена текущая группа, то приложение автоматически перенаправляет пользователя на startActivity (рисунок 3 и рисунок 4), однако если у пользователя не выбрана текущая группа (то есть это первый запуск приложения) и отсутствует интернет, то никакая информация не будет отображаться в приложении, так как она не была получена. При первом же подключении к интернету актуальная информация будет занесена в локальную базу данных.
В strartActivity происходит выбор группы или преподавателя. Их список получается из json-файла, который возвращает сервер. После выбора данные из json сохраняются в локальную базу данных, чтобы потом можно было работать с приложением в условиях отсутствия подключения к сети Интернет. Также в пользовательские настройки записывается сделанный выбор, чтобы впоследствии пользователю не пришлось выбирать группу.
Каждая запись в базе данных содержит данные об одной паре. Структура PairClass, которая содержит эти данные, представлена на рисунке 5.
Рисунок 5 – структура PairClass
Каждое занятие характеризуется семью полями: названием, преподавателем, аудиторией проведения, номером (какое по счету в день), четностью/нечетностью проведения, днём и группой, у которой это занятие проводится.
После выбора пользователь попадает на главный экран – mainActivity (рисунок 6). Здесь отображается расписание выбранной пользователем группы (или преподавателя). Для этого программа получает текущую дату, по ней определяется чётность или нечётность текущей недели (информация об этом хранится в глобальной переменной), строится список дней, который состоит из четырнадцати элементов, которые содержат числа текущей недели и следующей. Все эти данные передаются в контроллер recycleView для создания удобного горизонтального списка (календаря), при клике на элемент которого обновляется расписание в соответствии с выбранным днём.
Рисунок 6 – mainActivity
Календарь рассчитан на две недели для того, чтобы можно было посмотреть расписание как в неделю числителя, так и в неделю знаменателя. Текущий день дополнительно помечается красным цветом, а отображаемый день имеет затемнённый фон. Каждый раз, когда приложение открывается, выбранным по умолчанию будет текущий день, а четность недели будет автоматически переключаться при наступлении новой недели. Также здесь реализована вся логика обращения к базе данных, заполнение таблицы этими данными, жесты управления и прочие элементы пользовательского интерфейса. Дополнительно имеется кнопка для перехода в startActivity для смены выбора группы.