453
КЛАССИФИКАЦИЯ МУЗЫКАЛЬНЫХ КОМПОЗИЦИЙ ПО ИСПОЛНИТЕЛЯМ НА ОСНОВЕ МАШИННОГО ОБУЧЕНИЯ
3 Экспериментальное исследование обучающих данных 
3.4 Обучение классификатора 
----------
Обучающие данные для классификатора подготовлены вручную и имеют структуру небольшого каталога таким образом: для каждого исполнителя создаётся папка с его именем в качестве названия, содержащая несколько его песен в формате «.wav». Затем эти папки помещаются в родительскую папку. Причём в ней должны быть только подпапки-исполнители. При изучении построений классификаторов, описанных в различных статьях и книгах о машинном обучении, было выяснено, что при обучении на основе алгоритма скрытых марковских моделей, когда для каждого исполнителя, который представляется классом, будет создаваться своя модель, эти модели рекомендуется сохранять в отдельную папку. Каждая из полученных моделей сохраняется в виде файла с разрешением «.pkl» и названием – именем класса.
В качестве среды Python для обучения классификатора и его дальнейших тестов выбран облачный сервис для обучения нейронных сетей Google Colaboratory, описанный в пункте 2.1. Предпринимались попытки обучить классификатор в интерпретаторе PyCharm, но сделать этого не удалось из-за несовместимости версий некоторых библиотек с версиями пакетов, предназначенных специально для этого интерпретатора в операционной системе Windows. В Google Colaboratory имеются практически все нужные пакеты, к тому же можно легко установить недостающий модуль командой !pip install <module_name>. Данные для обучения были сохранены в папке folder на Google диске, который был подключён к созданному блокноту. Модели хранятся в папке Saves.
Для лучшего понимания структуры классификатора, написанного на Python, и процесса его обучения были изучены и протестированы уже готовые классификаторы. Исходя из этого было принято решение для удобства создать файл config.py, в котором указываются пути к папкам с обучающими данными, сохранёнными моделями, с тестовыми данными, а также определяются некоторые параметры. Результаты тестов записываются в текстовый файл «result.txt» При изучении работы классификаторов с использованием скрытых марковских моделей как метода обучения на основе фактов из статей об обучении классификаторов, было выяснено, что для лучших результатов следует строить 10-12 скрытых состояний, а для получения более сложных моделей – 20. Но при этом отмечалось, что время обучения может увеличиться во много раз, а достаточно хорошие результаты можно получить, строя и 6-8 скрытых состояний. В файле config.py параметр n_components=6 определяет, что число скрытых состояний для марковской модели будет равно 6.
На рисунках 13 и 14 представлены скриншоты процесса обучения классификатора песен по их исполнителям.
Рисунок 13– Процесс обучения классификатора
Для удобства в процессе обучения на экран выводится название текущего файла, из которого извлекаются параметры и строится модель, а также имя класса-папки (исполнителя), в котором он находится. Классификатору поступают классы на обучение в том же порядке, в котором они расположены в родительской папке.
Рисунок 14 – Окончание обучения классификатора
На рисунках 13 и 14 «Current file is <file_name>» – файл, для которого создаётся модель в текущий момент времени. Как только обучение и сохранения моделей в отдельном каталоге закончилось, классификатор выводит на экран надпись «<Class_name> training is completed». Также выводится на экран количество итераций EM-алгоритма – iter, точность и тип ковариационных параметров состояний.