383
РАЗРАБОТКА МОБИЛЬНОГО ПРИЛОЖЕНИЯ МНОГОЗВЕННОЙ АРХИТЕКТУРЫ НА БАЗЕ ОПЕРАЦИОННОЙ СИСТЕМЫ ANDROID 
3 Мобильное приложение для ОС Android 
3.3 Локальная база данных SQLite 
----------
Локальная база данных необходима приложению для хранения большого количества структурированных данных и представляет собой обычную базу с таблицами и запросами, хранящуюся на устройстве. Она облегчает работу с приложением в плане того, что нет необходимости делать лишние запросы на сервер для получения данных, а достаточно лишь обратиться к файлу, хранящемуся на устройстве. Вследствие этого значительно уменьшается расход интернет трафика.
Локальная 	база 	данных 	описана 	в 	файле 	DBHelper.java, 	где
инициализируется класс DBHelper, который является наследником класса SQLiteOpenHelper. Этот класс позволяет работать с методами для создания или обновления базы данных. Содержит два основных метода:
* onCreate() – метод, который вызывается, если базы данных, к которой происходит обращение, не существует;
* onUpgrade() – метод, который вызывается, если происходит обращение к базе данных, которая имеет более новую версию, чем существующая.
Основными таблицами локальной базой данных в классе DBHelper
являются:
а)    таблица levels – хранит уровни прогресса, доступные для получения пользователем и максимальные значения опыта, которых может достичь пользователь на соответствующем уровне развития. Данные в эту таблицу загружаются при первой авторизации пользователя и проверяются на наличие обновлений при запуске приложения;
б)  таблица tasks – хранит информацию о заданиях всех уровней развития пользователя. Каждое задание несет в себе информацию о принадлежности к определенному уровню развития, id задания в базе данных на сервере, основной информации о задании, минимальном уровне пользователя, необходимом для выполнения данного задания и рекомендуемом количестве опыта, которые присуждается пользователю по завершению задания. Данные в эту таблицу загружаются при первой авторизации пользователя и проверяются на наличие обновлений при повторном запуске приложения;
в)    таблица user_level_stats – хранит информацию о текущем прогрессе пользователя на уровнях развития, а именно название уровня развития, уровень прогресса пользователя, текущий опыт пользователя и текущее выполняемое пользователем задание на данном уровне развития. Данные в эту таблицу загружаются при первой авторизации пользователя и обновляются по мере продвижения пользователя на одном из уровней развития;
г)   таблица messages – хранит историю переписки авторизированного пользователя с кураторами на каждом уровне развития. Данные в эту таблицу загружаются при первом обращении к активности чата с куратором на каждом уровне развития и обновляются при отправлении сообщения или при получении сообщения;
д)    таблица user_photo – хранит информацию о текущем фото профиля авторизированного пользователя. Фото хранится в зашифрованном виде. Также присутствует поле, которое ссылается на наличие фото профиля у текущего пользователя. Если пользователь не устанавливал фото своего профиля, то на место фото профиля ставится значок отсутствия фото.