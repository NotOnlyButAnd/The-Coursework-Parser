684
ПОВЫШЕНИЕ ЗАЩИЩЕННОСТИ ПРОЦЕССА СОСТАВЛЕНИЯ, ОБРАБОТКИ И ХРАНЕНИЯ ИНФОРМАЦИОННЫХ КОПИЙ УЧЕБНЫХ ПЛАНОВ ОБРАЗОВАТЕЛЬНОЙ ОРГАНИЗАЦИИ
3 Проектно-технологический раздел 
3.2 Формирование предложений по повышению защищенности процесса составления, обработки и хранения информационных копий учебных планов образовательной организации. 
----------
На основе вышеприведенных возможностей сформируем предложения по повышению защищенности процесса составления, обработки и хранения информационных копий учебных планов.
Для решения такой задачи нам необходим алгоритм который не будет заметен в исходном файле формата *xml и не будет нарушать информативную составляющую документа. Так же он должен выполнять функции контроля целостности при внесении любых изменений в файл формата *xml.
Перейдем к формированию и анализу данного метода.
Представим что кто-то внес изменения в наш файл формата *xml мы об этом не знаем. Мы извлекаем из файла встроенный ЦВЗ (хэш сумму) [14] и сравниваем с той которая должна быть в действительности. Здесь может быть два результата:
1.  Исходная и полученная хэш-суммы не совпадают, это означает что документ был изменен и его целостность нарушена.
2.  Исходная и полученная хэш-суммы совпадают, это означает что документ является подлинным.
Поэтапно рассмотрим наш алгоритм
На этапе внедрения ЦВЗ (хэш суммы) в файл формата *xml выполняем следующие действия:
1.  При помощи программы HashTab [15] вычисляем хэш-сумму исходного файла для которого нужно обеспечить контроль целостности;
2.  Вычисленная хэш-функция образует внедряемые в виде ЦВЗ данные;
3.  Данные полученные на предыдущем этапе внедряются в исходный файл формата *xml.На этом этапе внедрения заканчивается.
После чего переходим к этапу контроля целостности документов:
1.  При появлении угрозы НСД необходимо проверить файл ,для этого мы извлекаем из него хэш-сумму при помощи уже знакомой нам программы HashTab;
2.  После чего производится сравнение истинной хэш-суммы подлинного документа, вычисленной на первом этапе и извлеченной из файла, и только что вычисленной нами хэш-суммы файла. Если хэш-суммы совпадают, то целостность документа не нарушена, изменений внесено не было и он является подлинным. Если же хэш-суммы не совпадают, то были внесены изменения и целостность документа нарушена.
Отметим преимущества данного метода.
1.  Требуемый уровень целостности и конфиденциальности информации обеспечивается хэш-алгоритмами.
2.  Высокая производительность обеспечивается производительностью хэш-алгоритмов и алгоритмом ЦВЗ .
3.  Отсутствие ключей обеспечивается встраиванием в качестве ЦВЗ хэш-суммы изображения.
4.  Определение мельчайших изменений обеспечивается хэш-алгоритмами.
Исходя из этого алгоритма можно представить программный модуль благодаря которому можно осуществлять контроль целостности информационных копий учебных планов.
3.3 Реализация предложений по повышению защищенности процесса составления, обработки и хранения информационных копий учебных планов образовательной организации
В ходе написания работы были разработаны предложения и методы по повышению защищенности процесса составления, обработки и хранения информационных копий учебных планов при помощи стеганографических методов внедрения хэш-суммы в файлы формата *xml,которые мы сейчас и рассмотрим.
Для реализации метода, описанного в предыдущем разделе, мною была разработана программа «Контроль целостности».
После запуска программы мы должны поставить галочку возле «вставить хэш» затем верхнем поле выбрать нужный файл который мы хотим защитить. После чего нажимаем на кнопку «рассчитать хэш» И программа автоматически рассчитывает хэш-сумму MD5 файла, и в окне ниже предоставляет нам полученный результат. После этого мы хотим внедрить эту хэш-сумму в выбранный нами файл, для этого нажимаем на кнопку вставить и программа автоматически вставляет его в исходный файл формата *xml. Это видно на рисунках 3.2 и 3.3.
Рисунок 3.2 – Процесс расчета и внедрения хэш- суммы
Рисунок 3.3 – Вставленная хэш-сумма
После того как мы вставили хэш-сумму,в программе Учебные планы «Лаборатории ММИС» никаких изменений в пункте график не произошло, информативная структура документа не задета, это мы можем видеть на рисунке 3.4
Рисунок 3.4 – Достоверный учебный график
После того если кто-то попытался изменить исходный файл формата*xml мы можем проверить его целостность, был он на самом деле изменен или нет. Для этого ставим галочку напротив «проверить целостность» и нажимаем на кнопку «извлечь хэш» извлекаем хэш-сумму файла который на данный момент нам нужен. В нижнем окне мы можем видеть извлеченную хэш-сумму файла. Если они сходятся как видно на рисунке 3.5 значит файл не подлинный. Если же они разные значит файл подвергался изменениям, его информативная структура повреждена и он является не действительным как видно на рисунке 3.6
Рисунок 3.5 – Результат 100% целостности файла
Рисунок 3.6 – Результат измененного, не действительного файла
Таким образом был реализован алгоритм контроля целостности текстовых документов при помощи восстанавливающего ЦВЗ (хэш функий). Этот метод позволит повысить защищенность и контроль целостности информационных копий учебных планов.
Таким образом в данном разделе разработан метод контроля целостности текстовых документов основанный на методе восстанавливающего ЦВЗ. Разработанная модификация позволяет определять изменение файла от НСД. Разработан программный модуль, в основе которого имеется алгоритм контроля целостности файла.