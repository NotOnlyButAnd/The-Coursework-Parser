418
РАСПРЕДЕЛЕННАЯ ANDROID-СИСТЕМА «АССИСТЕНТ ПРЕПОДАВАТЕЛЯ» 
3 Программная реализация приложения КубГУ Assistent 
3.13 Добавление студентов . 
----------
Для того, чтобы добавить студентов в базу данных для пользователей был выбран следующий шаблон (рисунок 18):
Рисунок 18 - Форма добавления студентов в базу данных
Для того, чтобы добавить студентов необходимо сначала создать группу (процесс создания группы будет описан позже).
Список группы отображается как показано на рисунке ниже (рисунок
19):
Рисунок 19 - Пример добавления студентов в базу данных
После нажатия на кнопку “Сохранить список студентов” введенные данные передаются в файл add_students.php, который и производит дальнейшую обработку.
В указанном выше файле реализован описанный выше алгоритм составления уникального логина для большого количества автоматически регистрируемых пользователей.
Список студентов перебирается и для каждого студента составляется уникальный логин, генерируется пароль и данные записываются в базу данных. Логины составляются с использованием фамилии, имени и отчества. Если возникает ситуация, что такой логин уже занесен в базу данных, то к генерируемому логину добавляется номер группы. Например, логин для студента Степаненко Кирилл Анатольевич будет выглядеть следующим образом: stepanenko_ka. Все буквы логина строчные, так как это не приносит неудобств при вводе с мобильного устройства. Рассмотрим данный процесс подробнее.
Например, для студента Бугайкова Константина Олеговича процесс занесения в базу данных будет следующим:
а) фамилия, имя и отчество передаются в процедуру, которая
генерирует логин на русском языке:
function create_ru_login($fio)
{ return preg_replace('~^(\S++)\s++(\S)\S++\s++(\S)\S++$~u', '$1_$2$3', $fio);
}
В ходе выполнения процедуры будет получен следующий результат:
Бугайков_КО;
б) следующий этап – перевод фамилии и инициалов на английский язык с помощью алгоритма составления уникального логина для большого количества автоматически регистрируемых пользователей. Алгоритм реализован в виде отдельной функции, которая на вход получает уже готовый логин, который необходимо только перевести, соблюдая стандарты
ГОСТа. В ходе выполнения функции будет получен следующий результат: bugaikov_ko;
в) далее для каждого студента необходимо сгенерировать пароль. На первых шагах реализации предполагалось использование для всех студентов одного пароля. Данный подход облегчил бы процесс передачи данных студентам, но правила безопасности были бы проигнорированы. Таким образом, было принято решение о написании отдельной функции, которая генерирует пароли.
Алгоритм генерации пароля был реализован следующим образом: составлена строка A, которая содержит в себе все символы, которые могут быть использованы в пароле и задано число N, которое обозначает число символов в пароле. Далее запускается цикл из N шагов, в котором случайным образом выбирается символ из строки A и добавляется в переменную $password.
<?php
$chars="qazxswedcvfrtgbnhyujmkiolp1234567890QAZXSWEDCVFRTGBNHYUJMKIOLP";  $max=10;
$size=StrLen($chars)-1;  $password=null;  while($max--)
$password.=$chars[rand(0,$size)];  return $password;
?>
Таким образом, чтобы добавить студентов в базу данных, необходимо просто скопировать список студентов в область ввода и указать группу, в которой они обучаются.
Информация о студентах хранится в отдельной таблице базы данных – students, которая имеет следующую архитектуру (рисунок 20):
Рисунок 20 - Архитектура таблицы students