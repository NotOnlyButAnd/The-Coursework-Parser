1014
АРХИТЕКТУРА МОБИЛЬНЫХ РАСПРЕДЕЛЕННЫХ КОМПЬЮТЕРНЫХ СИСТЕМ, УПРАВЛЯЕМЫХ ИНТЕЛЛЕКТУАЛЬНЫМИ АГЕНТАМИ 
2 Вопросы дизайна мобильных агентных распределенных систем 
2.4 Разработка мультиагентной системы (метамодель) 
----------
Разработка МАС, согласно метамодели FAML, начинается на уровне разработки внешней среды агента. Схема связи классов модели приведена на рисунке 5.
Рисунок 5 - Схема взаимодействия классов уровня разработки внешней среды агента
Назначение классов описано в таблице 1. В таблице курсивом помечены классы, которые требуют более подробного пояснения и встречаются в таблице 1 в колонке "Класс".
Таблица 1 - Назначение классов МАС уровня разработки внешней среды агента
Класс
Описание
Может принадлежать организационному
Agent Definition
определению (OrganizationDefinition), иметь
спецификацию ментального состояния
(MentalStateSpecification) (подробнее в таблице 3)
Поддерживает BDI-архитектуру, путем
MentalStateSpecification
формулировки убеждений, желаний и намерений агента
Описывает взаимоотношение между ролями как множество кооперативных действий агентов. Для
OrganizationDefinition
определения политик (Policy) как
организационных правил (подобно Gaia) была добавлена связь между
OrganizationDefinition and Policy
Policy
Правила, 	которые 	определяют 	условия
возникновения событий внешней среды
Определяет идентификатор и параметры
MessageSchema
сообщения, или иначе структуру и семантику
обмена сообщениями в системе
Service
Единый связный блок действий, в который агент
может быть вовлечен
System
Конечный продукт агентно-ориентированного
программного обеспечения
SystemGoal
Состояние внешней среды, которого стремится
достичь система
Продолжение таблицы 1
Поведенческий паттерн агента, включает название роли и ее ответственность, т.е. отвечать за задачу (Task) или взаимодействовать с задачей, использовать онтологию (Ontology), выполнять сервис (Service), использовать схему сообщений
(MessageSchema), преследовать системную цель (SystemGoal). Может входить в иерархию наследования, описывать тип ролевых
Role
взаимоотношений (RoleCompatibility,
RoleDependency) – ролевые связи и зависимости наследники класса RoleRelationShip.
В качестве отношений с внешней средой может иметь такие способности, как восприятие и изменение внешней среды (свойства CanSence и CanChange), которые отражают свойства связей с классом (FacetDefinition)
Описывает социальные взаимоотношения между ролями для достижения системной цели. Может
RoleRelationShip
отражать (не)совместимость (RoleCompatibility)
целей – когда исходная роль агента несовместима с целевой ролью, либо RoleDependency – зависимость исходной роли от целевой
Спецификация структуры функций взаимо- действия с внешней средой, включая имя, тип
FacetDefinition
данных, тип доступа, начальное состояние, возможности восприятия и изменения внешнего окружения
Ключевыми классами в этой части системы являются сама система, которая включает (агрегирует) опционально все необходимые классы и класс Roles, который является определяющим для агентной системы. Роли могут взаимодействовать друг с другом напрямую или косвенно, определяя разные типы отношений. Каждой роли могут быть назначены разные задания.
Определение агента имеет как общие функции, которые служат для инициализации агента в системе, так и специфичные функции, определяемые его ролью или ролями в системе.
На рисунке 6 приведена схема классов для III квадранта метамодели, в таблице 2 дано описание классов, определенных в этой схеме.
Рисунок 6 - Схема взаимодействия классов уровня исполнения внешней среды агента
В целом класс Enviroment описывает среду, в которой агент живет во время выполнения. Назначение классов с рисунка 6 приведено в таблице 2.
Таблица  -
2  Назначение классов МАС уровня исполнения внешней среды
агента
Класс
Описание
Включает классы: Онтология (Ontology) – представляет собой описание структурной модели внешней среды, систему (System) –
Enviroment
собственно МАС (рисунок 5, таблица 1), ресурсы (Resource) определяют именованные блоки информации, которые можно создавать и с которыми можно ознакомиться.
Свойства среды, на которые агент может
Facet
воздействовать, класс FacetDefinition содержит функций взаимодействия с внешней средой
(подробнее в табл.1)
Высокоавтономная, адаптивная,
целенаправленная, рациональная программная
Agent
сущность, начальное состояние которой в системе определяется классом  AgentDefinition
(описание в табл.1), может являться частью коллектива агентов – класс Organisation
Класс, описывающий кооперацию агентов, объединенных для исполнения общей системной
Organisation
цели (SystemGoal). OrganisationDefinition – класс, определяющий спецификации ролей агентов, объединенных общей целью
Продолжение таблицы 2
События  системы  могут  быть  разделены  на
MessageEvent   и   FacetEvent.   Первый   класс событий   определяет   параметры   и   формат передачи  сообщений,  используя  общий  формат
Event
сообщений, 	предоставляемый 	классом
MessageShema,второйкласс(FacetEvent)
описывает событиясмены состояния среды, в которой действует (и на которую воздействует) агент.  EnviromentHistory  –  класс,  который  дает
схему и параметры сохранения состояний среды
На рисунке 7 представлена схема взаимодействия классов уровня разработки внутренней среды агента, ее описание дано в таблице 3. Центральной идеей этого уровня разработки является определение спецификаций планов и действий агента, т.е. взгляд на агента изнутри.
Рисунок 7 - Схема взаимодействия классов уровня разработки внутренней среды агента
3  Назначение классов МАС уровня разработки внутренней среды
агента (I квадрант метамодели).
Класс
Описание
Описывает начальное состояние агента при его
AgentDefinition
инициализации в системе, включая свойства идентификатор и тип агента (AgentIdentity,
AgentType)
Каждый агент может включать некоторый набор намерений  (PlanSpecification),  характеризуемый атрибутами 1)GoalCondition, 2)SuccessCondition и 3)FailureCondition. Они соответственно содержат
PlanSpecification
1) цели, к которым план применим; 2) условия достижения цели, 3) условия, при которых цель не  может быть достигнута. PlanSpecification содержит набор действий (ActionSpecification)
(1), и использует PlanResources
Этот класс определяет атомарные шаги плана агента, включая пред- и постусловия исполнения.
Его классы-наследники FacetActionSpecification, MessageActionSpecification расширяют его, добавляя возможность определения новых
ActionSpecification
значений для внешних воздействий и новых параметров передачи данных соответственно.
Классы FacetDefenition и MessageShema являются уточняющими для классов-наследников и подробнее описаны в таблице 2
Использование информации, содержащейся в атрибутах класса PlanSpecification зависит от выбранной парадигмы поведения агента. Например, условия отказа – FailureCondition – могут быть удовлетворены до исполнения плана. Следовательно, имеет смысл прервать текущий план и попробовать другой.
На рисунке 8 представлена схема взаимодействия классов уровня исполнения внутренней среды агента. Центральным классом является класс Agent. В этой части метамодели разрабатываются цели агентов – AgentGoal, его представления об окружающей среде – Belief (согласно модели BDI), его обязанности – Obligation и его средства коммуникации. Классы Message, Role и PlanSpecification уже были описаны в предыдущих схемах и таблицах.
Рисунок 8 - Схема взаимодействия классов уровня исполнения внутренней среды агента
Назначения классов описаны в таблице 4.
4	Назначение классов МАС уровня исполнения внутренней среды агента (II квадрант метамодели).
Класс
Описание
Включает одно или более ментальное состояние
MentalState, одну или более обязанностей – Obligation, Belief – убеждения агента об окружающей среде расширяет класс EnvironmentStatement и AgentGoal – цель,
Agent
реализующая один или более планов. Агент также играет одну или более ролей (таблица 1), таким образом, отвечая за одну или более целей. Агент также выполняет коммуникации с другими участниками системы посредством класса Communication, содержащего класс Message и использующего класс InteractionProtocol
AgentGoal
Такое состояние окружающей агента среды,
которого он добивается
Состояние внешней среды, которое представляет
Belief
себе агент и считает его достоверным в определенном временном интервале
MentalState
Цели   и   убеждения   агента 	в   определенном
временном интервале
Obligation
Обеспечиваетмежагентные 	соглашенияи
договоренности
Данный 	этап 	работы 	предусматривает 	лишь 	концептуальное представление метамодели системы. На данный момент остальная часть проекта МАС находится в разработке.