589
АРХИТЕКТУРА МОБИЛЬНЫХ РАСПРЕДЕЛЕННЫХ КОМПЬЮТЕРНЫХ СИСТЕМ, УПРАВЛЯЕМЫХ ИНТЕЛЛЕКТУАЛЬНЫМИ АГЕНТАМИ 
2 Вопросы дизайна мобильных агентных распределенных систем 
2.2 Постановка задачи разработки мобильной мультиагентной системы 
----------
В разрабатываемом приложении возможно реализовывать многоагентную систему, базирующуюся на архитектуре одноуровневого взаимодействия. Основной задачей системы является составление (координация) расписаний встреч студентов с преподавателями (назначение консультаций, пересдач, встреч с дипломниками или магистрами). Например, во время сессии для назначения дополнительных пересдач, необходимо учитывать свободен ли студент от других предметов в это время (пересдач по другим предметам, консультаций, экзаменов, зачетов и т.д.) и как это согласуется с возможностями преподавателя.
Дополнительные возможности для агентов предоставляются при согласовании тем дипломных и магистерских работ. Агент-деканат должен разослать оповещение руководителям о необходимости предоставить темы выпускных работ. По получении проверить наличие тем для всех потенциальных выпускников, исключить возможность дублирования, оповестить руководителей о реквизитах приказа на закрепление тем и заблаговременно о выбывших студентах или взявших академический отпуск.
Агент-преподаватель должен со своей стороны назначить график встреч с дипломниками и магистрантами для выдачи Технического задания и составления графика выполнения работ. Агент-студента должен напоминать студенту об истечении очередного пункта графика и необходимости предъявить результаты руководителю.
Особенностью такого подхода является то, что расписание составляется на основании уже запланированных встреч участников. Из этого следует, что для назначения какой-либо встречи необходимо, чтобы у каждого участника будущей встречи был свой агент (PersonnelAssistant), обладающий всей информацией об уже запланированных встречах своего пользователя и информацией об иных пользователях, имеющих отношение к встрече. Для нахождения решения используется метод переговоров. При этом, хотя агенты остаются равноправными участниками переговоров, каждому из них назначается определенная роль (роли могут динамически изменяться). То есть в нашем приложении может быть реализован следующий алгоритм переговоров.
На первом этапе работы алгоритма происходит инициализация переговоров.
Сначала 	агент-инициатор 	встречи, 	связывается 	с 	агентамипотенциальными участниками встречи, при этом передает атрибуты встречи: дату, время и продолжительность.
Агенты - предполагаемые участники отправляют агенту-инициатору параметр под названием ―лимитирование встреч‖, который вычисляется как сумма значений уже запланированных встреч на время, которое предлагает организатор будущей встречи. Запланированные встречи имеют целочисленную переменную, которая может принимать значения:
* «1», если ранее запланированную встречу можно сместить;

* «2», если нет возможности сместить встречу на другое время.
Если пользователю не интересна встреча, то его агент отклоняет предложение о встрече, затем его исключают из списка возможных участников встречи и в последующем планировании он не принимает участия.
На втором этапе работы алгоритма происходит план переговоров.
Рассмотрим возможные случаи ведения переговоров между агентами. Все заинтересованные во встрече агенты передали суммарное
значение - ―лимитирования встреч‖, эквивалентное нулю. Из этого следует, что все агенты могут встретиться в то время, которое было предложено организатором, и переговоры заканчиваются.
Иначе агент-инициатор встречи просчитывает роли всех агентов, которые являются участниками переговоров. Агент, с наибольшим значением параметра ―лимитирование встреч‖, является самым занятым, т.е. он имеет меньше всех свободного времени для предстоящей встречи, ему присваивается статус СЗ (самый занятый) и в последующем этот агент становится лидером переговоров. Всем оставшимся агентам присваиваются роли СЗ2, СЗ3, СЗ4... в порядке убывания их параметра ―лимитирование встреч‖, самому свободному агенту присваивается роль НЗ (наименее занятый). Затем переговоры продолжаются согласно алгоритму, то есть агенты пытаются найти решение с помощью смещения или отмены ранее запланированных встреч, также возможен вариант с отказом от встречи, являющейся темой переговоров. Агенты могут изменять свои статусы, но алгоритм переговоров, соответствующий каждому статусу, не изменяется. Переговоры длятся до тех пор, пока не будет отыскано или согласованное решение, или встреча будет организована не со всеми участниками, или встречу необходимо будет отменить.
Основная суть всех алгоритмов ведения переговоров состоит в назначении статусов агентам. Иными словами, распределение задач предполагает назначение ролей каждому из членов группы, определение меры его ответственности и требований к целям и возможностям.
Таким образом, разработка любой мультиагентной системы сводится более чем на 90% к программной инженерии, т.е. к выбору методологии разработки МАС, а оставшаяся часть остается на долю теории мультиагентных систем [7].