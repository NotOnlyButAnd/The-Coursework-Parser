793
РАЗРАБОТКА РАСПРЕДЕЛЕННОЙ СИСТЕМЫ ИСПОЛЬЗОВАНИЯ УДАЛЕННЫХ ВЫЧИСЛИТЕЛЬНЫХ РЕСУРСОВ 
2 Разработка распределенной вычислительной системы . 
2.4 Реализация . 
2.4.2 Сравнение CORBA, DCOM и RMI . 
----------
Для выбора необходимой технологии разработки объектных распределенных систем рассмотрим следующие наиболее популярные распределенные системы – это CORBA, DCOM и RMI.
CORBA (Common Object Request Broker Architecture) или обобщенная архитектура брокера объектных запросов – это технология разработки распределенных приложений, обладающих свойством кроссплатформенности.
Разработкой CORBA занималась группа управления объектами (Object Management Group, OMG), целью которой стояло разработка и продвижение объектно-ориентированных технологий и стандартов для создания корпоративных платформо-независимых распределенных приложений.
Принцип работы CORBA заключается в описании специального интерфейса на IDL (Interface Definition Language) для объекта, находящегося на сервере, после чего для клиента генерируется заглушка, которая также описывается на IDL. С помощью заглушки клиент может вызвать методы объекта, находящегося на сервере, тем самым изменяя его состояние. Интерфейс описывающий методы объекта на сервере называется скелетоном. Скелетон и заглушка позволяют выполнять запросы и ответы между сервером и клиентом, при этом выполняя маршалинг и демаршалинг данных.
В CORBA также присутствуют динамические версии скелетона и заглушки – это DII (Dynamic Invocation Interface) и DSI (Dynamic Skeleton Inerface), позволяющие динамически обнаруживать и вызывать методы объекта. Передача данных между клиентом и сервером осуществляется с помощью брокера объектных запросов (ORB). Применение IDL для описания интерфейсов позволяет поддерживать программы, написанные на таких языках программирования, как C/C++, Java, Ada, COBOL, Python и другие.
Что осуществляется перекомпилированием интерфейса IDL на любой из описанных языков с помощью соответствующего компилятора.
Таким образом преимуществом технологии CORBA является:
* независимость от операционной системы;
* независимость от языка программирования;
* динамические вызовы и обнаружения объектов;
* масштабируемость;
* наличие дополнительных сервисов, упрощающих разработку; - широкая индустриальная поддержка.
Недостатки CORBA следующие:
* отсутствие наименования через URL;
* отсутствие передачи параметров по значению;
* отсутствие динамической загрузки компонентов-переходников.
DCOM (Distributed Component Object Model) - технология для разработки распределенных систем разработанное компанией Microsoft и является расширением технологии COM [6].
Создание объекта в DCOM осуществляется путем вызова менеджера управления сервисами (Service Control Manager) клиента, после чего тот связывается с SCM сервера, после чего передает запрос на создание объекта.
Как и в CORBA в DCOM существует возможность вызова методов удаленного объекта, для этого также предварительно создаются заглушка (стаб) для сервера, содержащий объект, и прокси для клиента, данные интерфейсы описываются с помощью IDL, которые компилируются специальным компилятором в исходный код языка Си.
При вызове методов удаленного объекта с использованием прокси, указанные параметры извлекаются из стека, затем перемещаются в буфер (маршалинг) и передаются через сеть серверу на стаб, через который производится воссоздание стека (демаршалинг), после чего вызывается метод объекта. Затем по завершению работы методы над выходным значением и параметрами выполняется маршалинг, а затем пересылается клиенту. Процесс маршалинга является нетривиальным, так как в качестве параметров могут применяться указатели на массивы и структуры, которые тоже могут содержать указатели.
Преимущества DCOM:
* независимость от языков программирования;
* динамический вызов и поиск объектов; - масштабируемость.
Недостатки:
* сложность реализации;
* зависимость от платформы Windows;
* отсутствие именования через URL;
* отсутствие контроля безопасности на уровне выполнения ActiveX компонент.
RMI (Remote Method Invocation) – технология разработанная компанией JavaSoft для разработки распределенных систем на языке Java и внедренный в JDK с версии 1.1.
Для выполнения вызова методов объекта на стороне сервера необходимо описать интерфейс на Java, который реализуется классом объекта. После создания экземпляра объекта, его необходимо привязать к RMI регистру, указав наименование в виде URL. Определенный интерфейс называется скелетоном и является переходником для сервера. Для клиента генерируется переходник (заглушка) в виде интерфейса, через который осуществляется обращение к RMI регистру и получение ссылки на удаленный объект. Таким образом RMI регистр используется как хранилище ссылок на удаленный объект. Заглушка и скелетон компилируется автоматически, также заглушка может быть передана клиенту динамически.
Достоинства RMI:
* быстрая и простая разработка;
* встроенная безопасность (наличие SecurityManager);
* динамическая загрузка компонент-переходников;
* возможность передачи объектов в качестве параметра;
* Java оптимизация;
* независимость от операционной системы.
Недостатки:
* поддержка только языка Java;
* отсутствие поддержки некоторых общих протоколов взаимодействия; - трудность интегрирования с существующими приложениями.
В приведенных выше технологиях RMI и CORBA разработки
распределенных систем общим достоинством является поддержка различных операционных систем. При этом CORBA и DCOM обладают огромным функционалом и поддерживают множество языков программирования, в отличии от RMI. Однако, самым важным параметром для разработки системы поставленной целью данной дипломной работы являются простота разработки, применение ссылок URL и возможность передачи объектов, как параметров, в чем выигрывает технология RMI. Более подробное сравнение описание рассмотренных технологий присутствует в источнике[8].
Таким образом описанная выше система разрабатывается только для распределения задач, написанных на языке Java. И несмотря на то, что RMI
поддерживает только один язык, данный язык является наиболее популярным среди программистов и позволяет разработать распределенную систему достаточно уникальную и эффективную.
В разработанной программе все основные её компоненты реализованы с помощью технологии RMI по инструкции официального разработчика[7]. Однако, для возможности дальнейшего улучшения программы, а именно поддержки смартфонов с операционной системой Android, на которой не поддерживается RMI от разработчиков Java, было принято решение некоторые компоненты реализовать с применением LipeRMI – библиотека, реализующая технологию RMI с поддержкой Android.