385
АЛГОРИТМЫ ВИЗУАЛИЗАЦИИ ДИНАМИЧЕСКИХ ГРАФОВ ДЛЯ АНАЛИЗА СЛОЖНЫХ СЕТЕЙ
1 Общие методы построения динамических сетей 
----------
Для изображения динамических сетей будем использовать метод послойной визуализации или 2.5D-визуализация, который состоит из следующих шагов:
а) Период времени, рассматриваемый нами, разбивается на непересекающиеся подпериоды. Затем строится последовательность графов, моделирующая исходные данные за каждый подпериод. Количество выбранных подпериодов зависит от предметной области. Например, в нашем случае, с социальными сетями можно анализировать изменения за неделю.
б) Для каждого построенного графа строится укладка на плоскости.
в) В результате, финальная визуализация получается путем объединения всех укладок, т.е соединения вершин, которые соответствуют одинаковым объектам в соседних графах. (рис.1).
(а) 		  (b)		   (c)
Рисунок 1 - граф, состоящий из трех слоев. (a) Укладки без учета ментальной карты. (b) Сохранение ментальной карты. (c) Послойная визуализация.
При визуализации графов возникает ряд трудностей. Первое – важно знать, как представлены исходные данные графа. Не всегда граф, подающийся на вход удовлетворяет удобочитаемости, т.к большое количество пересечений ребер не позволяет проанализировать модель.
Второе – очень часто исходные данные модели представлены в текстовом виде, например, XML, где отсутствует информация о вершинах графовой модели, поэтому эта проблема остается ключевой в системах визуализации данных.
При построении визуализации важно учитывать ряд критериев: во-первых - равномерное распределение вершин и ребер, минимизация пересечений и симметричность. Но также следует отметить, что не всегда минимизация пересечений приводит к улучшению читаемости изображения, все зависит от случая и поставленной задачи. На рис. 2 приведены два изображения одного и того же планарного графа. Однако очевидно, что следует искать некоторый баланс между различными критериями.
(a)  (b)
Рисунок2 -  граф, представленный в двух различных укладках:(a), (b).
Изображение графа на рис. 2 (a) имеет 5 пересечений ребер, а изображение на рис. 2(b) не имеет пересечений. Если мы, по каким-то причинам, заинтересованы в планарности изображения, то, безусловно, размещение вершин, приведенное на рис.2(b), подходит больше. Но если нас не интересует планарность, изображение (a) с пересечениями, представляется более удобным для восприятия.
Во-вторых – последовательность укладок должна сохранять ментальную карту, т.е графы должны сохранять схожесть между собой. Будем считать, что ментальная карта сохраняется, если вершины графа приближенно сохраняют свои координаты в последовательных укладках.
В-третьих – суммарная площадь, занимаемая графом, должна быть минимальна, но доля свободного места не должна быть меньше некоторого предела.
В-четвертых – количество наложений вершин друг на друга должно быть минимальным.
Также стоит отметить, что алгоритм автоматической укладки графа должен быть эффективным по времени исполнения.
Существует множество методов построения укладок графов на плоскости:
- алгоритмы на основе физической модели,
-аналитические алгоритмы,
-генетические алгоритмы.