537
РАЗРАБОТКА МОБИЛЬНОГО ПРИЛОЖЕНИЯ МНОГОЗВЕННОЙ АРХИТЕКТУРЫ НА БАЗЕ ОПЕРАЦИОННОЙ СИСТЕМЫ ANDROID
3 Мобильное приложение для ОС Android 
3.2 Активности приложения 
----------
Активности в приложении под операционной системой Android – одни из фундаментальных составляющих любого приложения. Они служат точкой входа для взаимодействия пользователя с приложением, а также играют ключевую роль в навигации пользователя в приложении. Умение правильно управлять активностями является гарантией стабильной и удобной для пользователя работы приложения, например, необходимо, чтобы смена ориентации экрана в приложении происходило плавно, не нарушая работу пользователя, чтобы пользовательские данные не терялись во время переходов между активностями и так далее.
Каждая активность в приложении имеет свое предназначения и определенные функции, с которыми пользователь может работать. Основными методами любой активности являются:
* onCreate(Bundle) – метод, который инициализирует активность. Самый важный метод, в котором обычно вызывается подметод setContentView(int), которому в качестве параметра подается id макета или слоя для представления визуальной структуры пользовательского интерфейса текущей активности. Также немало важен метод findViewById(int), который служит для инициализации отдельного компонента, описанного в файле макета текущей активности;
* onPause() – метод, который срабатывает, когда пользователь переключает одну активность на другую, и первая из них ставится «на паузу». Любые действия, которые пользователь совершил в активности, перед уходом из нее, сохраняются и отображаются после её возобновления.
Все активности между собой организуют стек активностей. Когда новая активность начинает работу, она помещается на верхушку стека и становится главной активностью. Предыдущая активность запоминает свое положение в стеке и не возьмет на себя управление до тех пор, пока не произойдет выход из активности, которая находится непосредственно над ним в стеке.
Жизненный цикл активности представлен на рисунке 9.
Рисунок 9 – Жизненный цикл активности
Активность имеет 4 состояния:
а)    если активность находится на верхушке стека активностей, то она в
данный момент находится в активном состоянии;
б)   если активность частично скрыта другой активностью, которая не полностью занимает экран устройства, то первая активность в данный момент находится в состоянии ожидания. Активности в состоянии ожидания полностью работоспособны, но могут быть приостановлены в ситуациях нехватки оперативной памяти;
в)  если активность полностью скрыта другой активностью, то он находится в приостановленном состоянии. Она по-прежнему хранит в себе информацию о своем состоянии, но в том случае, когда устройству будет не хватать оперативной памяти, активность будет полностью остановлена или уничтожена;
г) если активность находится в состоянии ожидания или приостановленном состоянии, система может уничтожить ее в случае нехватки устройству оперативной памяти. Когда активность вновь переходит в активное состояние, она полностью перезапускается и возвращает предыдущее состояние.
Чтобы стандартный Java-класс был активностью приложения, он должен унаследовать библиотеку AppCompatActivity.
Все классы активности должны быть прописаны в главном манифесте приложения AnroidManifest.xml с тегом <activity>, в котором обязательно указывается имя класса активности и в общем случае указываются заголовок активности и ее тема.
В разработанном приложении реализованы следующие активности:
* активность входа в учетную запись пользователя LoginActivity.java;
* активность регистрации пользователя RegisterActivity.java;
* активность выбора уровня развития LevelSelectionActivity.java;
* активность главного экрана уровня развития LevelActivity.java;
* активность чата пользователя с куратором ChatActivity.java;
* активность предоставления дополнительных материалов к заданию TaskStuffActivity.java;
* активность таблицы рекордов по тому или иному уровню развития RecordsActivity.java;
* активность личных настроек пользователя SettingsActivity.java.
Также реализована вспомогательная стартовая активность Start.java. Здесь происходит инициализация объекта prefs стандартного класса SharedPreferences, который служит для хранения и доступа к некоторым
сохраненным настройкам, необходимым для дальнейшей работы приложения, например, имя авторизированного пользователя или статус авторизированного пользователя. Также в активности Start.java инициализируется объект dbHelper созданного класса DBHelper, необходимый для работы с встроенной базой данных на устройстве.