508
МОДЕЛИРОВАНИЕ И ВИЗУАЛИЗАЦИЯ РАЗЛИЧНЫХ СТРАТЕГИЙ SLAM С ПОМОЩЬЮ LIDAR В ПОМЕЩЕНИЯХ ДЛЯ МОБИЛЬНЫХ РОБОТОВ 
3 Реализованный метод 
3.2 Реализация 
3.2.3 Моделирование работы робота 
----------
Был реализован класс Robot который содержит объекты классов Mechanic и Lidar. Данный класс содержит класс Drawing, который занимается отрисовкой робота. В данном классе можно визуализировать и моделировать движение робота, его поведение в рабочей среде отрисовка карты. Чтобы измерить на сколько сместился робот относительно изначальной позиции, был заведен стек операций робота. Если робот повернулся относительно предыдущего состояния, то необходимо вычислить на сколько повернулся робот. Чтобы вычислить на сколько градусов повернул робот нужно сравнить индексы максимальных индексов, полученных с помощью LIDAR, на текущем и предыдущем положении, тогда разница этих индексов позволит вычислить на сколько повернул робот. Реализация метода, который позволяет узнать на сколько повернул робот:
static public int Whatangle(List<int> arr1, List<int> arr2){             int i = Max(arr1);             int j = Max(arr2);
if (i - j >= arr1.Count()/2) return (i - j) - arr1.Count();             else if ((i - j) <= -(arr1.Count() / 2)) return arr1.Count() + (i - j);             else return i - j;}
Где arr1 – список дистанций, полученный на предыдущем шаге, arr2 – список 	дистанций 	в 	текущем 	состоянии, 	Max(List<int>) 	– 	метод возвращающий индекс максимального значения в списке. Если полученная разница будет больше 180 градусов, то есть смысл переделать ее в отрицательное значение, таким образом мы выявляем повернулся робот вправо или влево.
Если робот проехал, а не повернул, то необходимо узнать на сколько пикселей он проехал, для этого необходимо сравнить значения 0 градуса LIDAR на предыдущем шаге и на текущем, таким образом разница дистанций вернет информацию о том насколько сместился робот. Реализация метода, который позволяет узнать сколько робот проехал:
static public List<int> whatmove(List<int> arr1, List<int> arr2){             List<int> wm = new List<int>();             wm.Add(arr1[arr1.Count() / 2] - arr2[arr2.Count()/2]);             wm.Add(arr1[0] - arr2[0]);             return wm;}
Где arr1 – список дистанций на предыдущем шаге, arr2 – список дистанций на текущем шаге.
Метод моделирующий работу робота, и записывающий в стек его действия:
public void Move(int step){             List<int> tmp0 = Scan();             md.HideRobot();             meh.StepMehanicsLidar(step);             md.DrawRobot();             List<int> tmp1 = Scan(); ma.Add("m\n" + Geometry.whatmove(tmp0, tmp1)[0].ToString() +
"\n" + Geometry.whatmove(tmp0, tmp1)[1].ToString());             map.DrawMap1(this.drm(map.distancetodots(tmp1)));             md.DrawChart(Scan());}
Где step – размер шага на сколько должен сместиться робот, так как работа робота моделируется, мы можем сразу узнать на сколько он сместился, игнорируя ошибки, возникшие с помощью одометрических вычислений, но все же стремясь к реальным условиям, вычисляется изменения положения робота все равно с помощью LIDAR, ma – список строк содержащий в себе, на сколько робот проехал, также метод DrawMap который позволяет рисовать карту, tmp0 и tmp1 списки с предыдущим положением и текущем соответственно, передаются в метод whatmove для определения на сколько сместился робот.
Пример движения робота показан на рисунке 11.
Рисунок 11 – Движение робота
Метод моделирующий поворот робот относительно его центра: public void Turn(int angle){             List<int> tmp0 = Scan();             md.HideRobot();             meh.TurnMehanicsLidar(angle);             md.DrawRobot();             List<int> tmp1 = Scan();
ma.Add("t\n" + Geometry.Whatangle(tmp0, tmp1).ToString());
md.DrawChart(Scan());}
Где angle – величина в градусах, на которую должен повернуть робот.
Методы HideRobot и DrawRobot необходимы для отрисовки робота на Picturebox. Метод Whatangle возвращает то на сколько повернулся угол основываясь на списках сканирования окружающей среды. Метод DrawChart позволяет отображать полученные дистанции в виде графика.
Пример поворота робота показан на рисунке 12.
Рисунок 12 – Поворот робота
На данном рисунке показано как робот повернулся на 25 градусов.