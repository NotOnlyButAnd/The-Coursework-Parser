488
ИССЛЕДОВАНИЕ СЛУЧАЙНЫХ ОРГРАФОВ СТАТИЧЕСКИХ КОМПЬЮТЕРНЫХ AD HOC СЕТЕЙ 
2 Общие сведения об ad hoc сетях . 
2.6 Протоколы маршрутизации в ad hoc сетях . 
2.6.1 Протокол AODV 
----------
AODV (Ad hoc On-Demand Distance Vector) – специализированный протокол вектора расстояния по запросу. Узел не выполняет поиск маршрута или его поддержку до тех пор, пока ему не понадобится маршрут к другому узлу или пока он не предложит свои услуги в качестве промежуточного узла. Узлы, находящиеся в стороне активного маршрута, не поддерживают информацию о маршрутизации и не участвуют в формировании таблицы маршрутизации. AODV использует маршрутизацию от узла к узлу. Маршрутизация основана на динамической таблице, поддерживаемой в промежуточных узлах. Протокол аналогичен DSR, но DSR использует
маршрутизацию источника.
Для определения местных соединений используются локальные сообщения «hello». Таким образом можно уменьшить время отклика на запросы маршрута и инициировать обновление по мере необходимости.
Маршрутам и записям в таблице маршрутизации присваиваются последовательные номера, которые используются для замещения устаревшей информации. Каждый узел поддерживает два счетчика: последовательный счетчик узла и широковещательный ID.
Запрос маршрута AODV инициируется в том случае, когда узел хочет соединиться с другим узлом, но не знает маршрута. Узел-источник посылает широковещательный пакет с запросом маршрута (RREQ) своим соседям.
Поля пакета приведены на рисунке 9.
Рисунок 9 — Поля пакета RREQ
Порядковый номер источника в запросе маршрута показывает «степень свежести» обратного маршрута к источнику. Порядковый номер приемника показывает «степень свежести» обратного маршрута к приемнику.
Каждый узел, принимающий RREQ либо возвращает пакет с ответом маршрута (PREQ), либо пересылает RREQ своим соседям.
Поля source_addr и broadcast_id уникально идентифицируют RREQ. Broadcasr_id инкрементируется для каждого посылаемого пакета RREQ, так что приемники могут распознать и удалить дублирующие пакеты RREQ.
Если узел не может ответить на RREQ, то он инкрементирует счетчик узлов и сохраняет информацию, необходимую для поддержки обратного маршрута (в протоколе предполагается наличие симметричных соединений).
К необходимой информации относится:
* идентификатор соседнего узла, который прислал данный пакет RREQ;
* IP адрес места назначения;
* IP адрес источника;
* широковещательный ID;
* последовательный номер узла источника;
* время истечения записи для обратного маршрута.
Если узел принимает пакет RREQ и у него есть текущий маршрут к месту назначения, то он отошлет однонаправленный пакет с ответом маршрута (RREP) тому соседу, от которого он принял пакет RREQ. На рисунке 10 приведена структура пакета RREP.
Рисунок 10 — Структура пакета RREP
Промежуточные узлы будут ретранслировать первый RREP по направлению к источнику, используя кэшированные записи обратного маршрута. Остальные пакеты RREP отбрасываются до тех пор, пока номер dest_sequence_# больше предыдущего, либо dest_sequence_# такой же, но hopcnt меньше (то есть это лучший путь). В конце концов RREP достигает узла, который может использовать соседа, приславшего RREP, в качестве следующего луча для пересылки информации к месту назначения. Кэшированные обратные маршруты будут удаляться в тех узлах, которые не видят пакета RREP.
Причиной изменения маршрута может быть потеря периодических сообщений «hello», авария на связном уровне, ошибка передачи пакета к следующему узлу (может быть обнаружена с помощью прослушивания ретрансляции, если это не конечная точка назначения). Вышестоящий (по направлению к источнику) узел, обнаружив ошибку, передает пакет ошибочного маршрута (RERR) с новым порядковым номером места назначения и количеством лучей, равным бесконечности (недостижимый маршрут). Источник (или другой узел маршрута) может снова построить путь, послав пакет RREQ.