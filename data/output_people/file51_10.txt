516
ИССЛЕДОВАНИЯ АЛГОРИТМОВ КОЛЛАБОРАТИВНОЙ ФИЛЬТРАЦИИ И РАЗРАБОТКА РАСШИРЯЕМОЙ РЕКОМЕНДАТЕЛЬНОЙ СИСТЕМЫ
2 Матричная факторизация 
----------
Одним из самых популярных алгоритмов для решения проблем рекомендательных систем называется матричной факторизацией (MF). В своей простейшей форме она представлена в виде матрицы рейтингов RRm×n, которая хранит в себе информацию о оценках пользователей к предметам, где m – количество пользователей, а n – количество предметов. Применяя этот алгоритм, можно разложить матрицу R на произведение 2 других матриц
U  Rm×k и Pn×k. Данная операция продемонстрирована на рисунке 2 для наглядности.
Рисунок 2 – Факторизация матрицы
Обратите внимание, что этот алгоритм вводит новую величину, k, которая является размерностью как в матрице U так и в матрице P. Это значение называют рангом факторизации. Формально, каждый рейтинг Rij для пользователя i к предмету j можно вычислить как скалярное произведение векторов Ui ˙ Pj , размерность которых равна k.
Итак, предполагая, что R представляет собой матрицу  пользователей, которые оценивают фильмы, то довольно очевидно, что каждый фильм может быть оценен по совокупности критериев, каждый из которых равен некоторой величине. Каждому пользователю нравятся либо не нравятся фильмы с определенными критериями(например, не нравится жанр комедии). То есть чтобы посоветовать пользователю подходящий фильм необходимо найти такой, критерии которого будут схожи с критериями пользователя. Проблема в том, как эффективно формировать эти категории. Черт, он может даже смотря некоторые сходства с некоторыми актерами кино, режиссерами, язык, место съемок и больше, а количество возможных функций для создания огромны.
Проблема в том, что мы не знаем какое количество критериев k на самом деле.
В итоге мы имеем попарное взаимодействие между двумя сущностями (пользователь и фильм), что позволяет нам поставить некий рейтинг в матрицу R на основе этих взаимодействий, которая довольно разряжена (из-за большого разнообразия фильмов, так как пользователи могут оценить лишь малую часть из них). Теоритически можно разделить фильмы по категориям используя как критерии: жанр, язык, актеры и так далее. Просто проблема в том, что мы не можем качественно оценить влияние каждого критерия на итоговую оценку фильма. Интуитивно, можно представить пользователям (или фильмы) по их сходству (или соединение) в категории/актеры/языков или каких-либо других факторов, и, наконец, попытаться сгруппировать их на основе этого представления. Проблема в том, что довольно трудно дать количественную оценку влияния каждого такого фактора на исходные рейтинги. Кроме того, могут существовать факторы, которые присущи рейтингового процесса, но не упустил из нашего нового представительства. Тем более возможно существование таких критериев, которые влияют на рейтинг, но не задействованные в наших вычислениях.
Можно заметить, что MF - это задача оптимизации, который направлена на максимальное приближение произведения матриц U и P к исходной матрице рейтингов R. В алгебраическом виде задача представлена в виде уравнения (6):
.                                    (6)
То есть минимизировав уравнение (6), мы минимизируем квадратичную ошибку, что позволит получить приемлемые матрицы U и P. Значение  является параметром регуляризации модели. Регуляризация модели — это способ наложить штраф к целевой функции за сложность модели. С байесовской точки зрения — это способ учесть некоторую априорную информацию о распределении параметров модели. Важным свойством является то, что регуляризация помогает избежать переобучения модели.
Это проблема оптимизации удобно решается с помощью методов машинного обучения. Заметим, что эта функция содержит два параметра: k и . Помимо осуществления минимизации значения функции (6), важно качественно подобрать параметры K и  так, чтобы они давали оптимальные результаты. Далее рассмотрим основные подходы минимизации функции