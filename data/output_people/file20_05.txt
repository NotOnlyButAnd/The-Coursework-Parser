383
ТЕХНОЛОГИИ РАЗРАБОТКИ WEB-ПРИЛОЖЕНИЙ
1 Технологии разработки Web-приложений 
1.2 Серверные Web-технологии 
1.2.2 PHP vs Node.js vs Python 
----------
Существуют различные платформы для написания серверного кода, который будет задавать функционал нашего Web-приложения. В наше время сложно точно сказать, что именно подойдет лучшего всего для бэкэнда, так как у каждой платформы свои особенности, поэтому приведем анализ трех следующих платформ:
1)  PHP – скриптовый язык, в основном используемый при создании Web-приложений
Приведем преимущества PHP [6].
- Обладает огромной базой для различных решений от систем управления контентом до мощных фреймворков, таких как Laravel или Symfony
- Достаточно независим от платформы и может быть запущен практически на любом сервере и любой платформе.
- PHP изначально был разработан для разработки Web-приложений, в отличие от JavaScript и Python, из-за чего обладает всеми необходимыми функциями для работы с HTML, серверами и базами данных.
Ниже приведены недостатки PHP.
- Не очень хорош в реализации паттерна MVC, который является рекомендованным в Web-разработке.
- PHP следует классической клиент-серверной модели где запрос страницы инициирует приложение, соединение с базой данных, их обработкой и рендерингом HTML, что делает PHP медленнее Node.js.
2) Node.js является средой выполнения JavaScript, позволяющая создавать масштабируемые приложения.
Приведем основные преимущества Node.js.
- Несмотря на однопоточность Node, его стандартная библиотека предоставляет модули масштабирования, с помощью которых появляется возможность создания нескольких Node процессов.
- Не имеет строгих правил и зависимостей, что дает волю креативности разработчиков.
- Один язык на бэкэнде и фронтэнде.
Ниже приведены недостатки Node.js.
- Малая эффективность в операциях, интенсивно использующих CPU, что обусловлено особенностями событийно-ориентированной архитектуры.
- Недостаточная или отсутствующая документация для некоторых модулей в npm.
3) Python - высокоуровневый язык программирования с акцентом на читабельность и продуктивность кода.
Приведем преимущества языка Python в Web-разработке [7].
- Благодаря краткому простому синтаксису и динамической типизации позволяет писать легко поддерживаемые и расширяемые программы.
- Быстрота разработки.
- Большая стандартная библиотека для бэкэнд разработки.
И, наконец, перейдем к недостаткам Python.
- Область применения языка ограничена серверными приложениями, его поддержка отсутствует на мобильных платформах и браузерах.
- Отсутствия поддержки DSL (Domain-specific Languages), который оптимизирует разработку UI.
Таким образом, из выше приведенного анализа сложно определить явного лидера, так как каждая платформа хороша для определенных проектов. Если требуется быстро развернуть производительное приложение, способное выдерживать большие нагрузки на CPU, то стоит выбрать Python. Если стоит цель написания приложения реального времени или одностраничного сайта, то концепция Node.js отлично подойдет для реализации такого вида задач. В случае, когда необходимо стандартизированное решение с обширной поддержкой хостинга, стоит уделить внимание PHP.