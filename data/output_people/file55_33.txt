283
ИССЛЕДОВАНИЕ СЛУЧАЙНЫХ ОРГРАФОВ СТАТИЧЕСКИХ КОМПЬЮТЕРНЫХ AD HOC СЕТЕЙ 
4 Практическая реализация . . 
4.5 Структура программы 
4.5.1 Основные методы программы . 
----------
В процессе реализации программы, имитирующей работу узлов ad hoc сети, были созданы следующие классы:
а) Node имеет свойства x, y, radius. Используется для хранения
информации об узле сети: его координатам по осям X и Y, его радиусе;
б) Graph имеет свойство matrix, хранящее матрицу смежности, которой
представлен граф. Также имеет следующие методы:
1)  конструктор __init__(self, matrix) создает новый граф из матрицы смежности, присваивая ее полю matrix;
2)  dfs(self, v, visited) выполняет поиск в глубину, принимая вершину и список посещенных вершин;
3)  dfs2(self, v, visited) выполняет модифицированный поиск в глубину, принимая вершину и список посещенных вершин, необходим для алгоритма определения, является ли граф однонаправленным;
4)  matrix_to_list(self, matrix) трансформирует представление графа в виде матрицы смежности в список смежности;
5)  vertexes_count(self) возвращает количество вершин в графе;
6)  edges_count(self) возвращает количество ребер в графе;
7)  get_transposed(self) возвращает транспонированную матрицу смежности графа;
8)  get_undirected(self) 	создает 	неориентированный 	граф 	из ориентированного;
9)  is_strongly_connected(self) проверяет, является ли граф сильно связным;
10)  is_weakly_connected(self) проверяет, является ли граф слабо связным;
11)  is_unilaterally_connected(self) проверяет, является ли граф односторонне связным;
12)  is_connected(self) проверяет, является ли граф связным.
Помимо вышеназванных методов в программе существуют следующие функции:
а) generate_nodes(area_radius, n_nodes, is_node_radius_random, radius_deviation) генерирует заданное количество узлов с заданным радиусом в заданной окружности;
б) line_length(x1, y1, x2, y2) находит длину отрезка с координатами
(x1; y1), (x2, y2);
в) are_circles_intersect(x1, y1, r1, x2, y2, r2) проверяет, пересекаются ли окружности с заданными координатами и радиусами;
г) is_point_in_circle(p_x, p_y, c_x. c_y. c_radius) проверяет, находится ли точка с координатами (p_x; p_y) в окружности с координатами (c_x; c_y) и радиусом c_radius;
д) get_random_point_in_area(area_radius) возвращает случайную точку в
окружности с заданным радиусом и координатами (0; 0);
е) graph_from_nodes(nodes) генерирует граф достижимости узлов ad
hoc сети из списка узлов с координатами в виде матрицы смежности.