720
АРХИТЕКТУРА МОБИЛЬНЫХ РАСПРЕДЕЛЕННЫХ КОМПЬЮТЕРНЫХ СИСТЕМ, УПРАВЛЯЕМЫХ ИНТЕЛЛЕКТУАЛЬНЫМИ АГЕНТАМИ 
1 Архитектуры многоагентных компьютерных систем 
1.3 Уровень 3. Приложения 
----------
Общая архитектура ядра мультиагентной системы показана на рисунке 3.
В архитектуре   МАС   основную   часть   составляет   предметно-
независимое ядро, в составе которого выделяются следующие базовые компоненты:
Рисунок 3 - Архитектура ядра мультиагентной системы
* служба прямого доступа обеспечивает непосредственный доступ

к атрибутам агентов;
* служба сообщений отвечает за передачу сообщений между самими агентами, а также между агентами и дополнительными системами
ядра;

* библиотека классов агентов (часть базы знаний) содержит
информацию о классификации агентов в данной MAS.

* сообщество агентов — серверное "место", где размещаются агенты; этот блок, кроме жизнедеятельности агентов, обеспечивает еще функции по загрузке/записи агентов и их свойств и за оптимизацию работы
агентов с ресурсами.

* онтология — предметная база знаний, содержащая конкретные знания об объектах и среде функционирования, представляемые в виде соответствующей семантической сети.
На уровне приложений архитектуру мультиагентных систем можно классифицировать по принципу взаимодействия агентов: кооперативные, конкурирующие и смешанные, при этом способы взаимодействия могут быть одноуровневыми (плоскими) и многоуровневыми (иерархическими) [2].
Агенты не образуют иерархии и решают общую задачу полностью в распределенном 	варианте. 	Каждый 	агент 	может 	непосредственно
контактировать с любыми другими. В этом случае не существует фиксированной структуры системы, структура может динамически изменяться со временем для выполнения своих задач. К тому же при плоской организации отсутствует контроль агентов со стороны других агентов. Такая организация требует того, чтобы система либо была закрытая (для того, чтобы все агенты изначально имели информацию друг о друге), либо в системе имелся бы механизм локации агентов, как отдельная часть инфраструктуры системы. Очевидно, что плоская организация поддерживает полную автономность агентов, а также распределенность системы и ее гибкую самоорганизацию, как реакцию на внешние и внутренние изменения. Как результат возрастает количество межагентных коммуникаций и локальных вычислений.
Иерархический способ взаимодействия (федеративные МАС [2]) предполагает наличие выделенного агента (стоящего уровнем выше по отношению к остальным), выполняющего централизованное управление распределенным функционированием агентов и содержащим некоторую метаинформацию о подчиненных ему агентах, при этом межагентные коммуникации ограничены структурой подчинения. С одной стороны, это оптимизирует количество переговоров и делает не нужным механизм определения локации агентов (этим занимаются управляющие агенты), с другой – строгая иерархия жестко ограничивает динамику конфигурации агентов и, как результат, гибкость системы в целом. Агенты верхних уровней могут полностью контролировать агентов нижних уровней, что вступает в противоречие с требованием автономии агентов для реализации их собственных целей. Централизованный контроль также не желателен в случае, если разные части системы принадлежат разным географически распределенным организациям.
Существует также "подчиненные" МАС, где некоторые агенты могут содержаться внутри других, которые, в свою очередь, могут быть компонентами третьих. Такая "подчинѐнная" модель несколько напоминает иерархическую, однако требует контроля вложенных агентов только со стороны их "родителей". С точки зрения программной инженерии такая модель может напоминать вложенность объектов, но если объекты управляются и активируются (возможно удаленно) своими "родителями" путем удаленного вызова процедур или возбуждения событий, то агенты активируется высокоуровневыми коммуникациями, т.е передачей сообщений. Строгий контроль со стороны агентов-контейнеров приводит к эффективному исполнению задач и небольшому объему коммуникаций, однако, ограничивает систему строго определѐнным набором хорошо поставленных задач, исключая гибкость и адаптивность системы. Не простой задачей становится также какое-либо изменение субординации внутри системы.
Модульная организация МАС предполагает взаимодействие нескольких отдельных МАС в составе одной. Обычно разделение системы на модули географическим соседством либо интенсивным взаимодействием между агентами и сервисами одного модуля. Новые модули постепенно добавляются к системе в процессе разработки. Внутри каждого модуля предполагается плоская система коммуникаций, интер-коммуникации системы тем не менее ограничиваются ее мультимодульностью.
Ярким примером одноуровневой (полностью децентрализованной) архитектуры является архитектура системы для планирования совещаний (встреч), и предполагает динамическое составление расписаний выполнения некоторого вида деятельности в условиях ограниченных ресурсов, например, задачи составления расписания обслуживания судов в морском порту [1], а также мультиагентные системы:
* для управления танкерами для компании Tankers International (UK);
* для управления грузовиками для компании GIST (UK);

* для управления такси для компании Addison Lee (UK);

* для управления сдачи машин в аренду для компании Avis (UK);
* для оптимизации Интернет компаний (UK).
В эту же 	категорию можно отнести задачи диспетчерского обслуживания и автономного группового управления воздушным движением
в районе аэропорта[3], планирование работ в автоматизированном
производстве.
Сложность планирования встреч состоит в том, что необходимо соединить людей уже имеющих свои планы, которые, как правило, являются конфиденциальными и не подлежат хранению в общей базе. Агентная система в такой ситуации предполагает, что каждый участник предстоящей
встречи будет представлен в процессе планирования своим агентом
(―электронным секретарем‖), который знает все о своем клиенте и совсем немного о других участниках встречи. Для поиска глобально согласованного решения предполагается использование переговоров.