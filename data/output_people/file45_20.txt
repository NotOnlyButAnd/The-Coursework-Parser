315
РАЗРАБОТКА РАСПРЕДЕЛЕННОЙ СИСТЕМЫ ИСПОЛЬЗОВАНИЯ УДАЛЕННЫХ ВЫЧИСЛИТЕЛЬНЫХ РЕСУРСОВ 
2 Разработка распределенной вычислительной системы . 
2.5 Безопасность 
----------
Распределенные системы в силу того, что организуют сетевые соединения между компьютерами, должны гарантировать пользователю защиту его компьютера от атак со стороны злоумышленников, а также сохранность данных при передаче между устройствами.
В разработанной системе опасность может предоставлять, не только перехват информации клиента или сервера третьим лицом, но и возможность использования программы для загрузки на удаленный компьютер зловредной задачи. Под зловредной задачей будем понимать программный код, способный выполнить, прочитать, изменить, удалить или загрузить из интернета файл, а также переполняющий оперативную память компьютера.
Для решения данных проблем в Java присутствуют специальные средства защиты. В случае, когда пользователь попытается передать удаленному серверу программу, которая загружает и выполняет файл или же пытается получить доступ к файлам пользователя с целью удаления или изменения, то на такой случай в Java присутствует менеджер безопасности
(SecurityManager), 	который 	можно 	получить 	методом System.getSecurityManager() или установить System.setSecurityManager(new
SecurityManager()). С помощью менеджера безопасности можно задавать параметры безопасности внутри программного кода или же использовать специальные файлы policy, которые содержат инструкции с ограничениями для указанного каталога.
В CRDS применяется SecurityManager, в первую очередь следует отметить что этого требует технология RMI при построении приложения. Для каждого компонента системы Client, CRDS и Server, для которых сгенерированы файлы policy с именами: crds_policy, server_policy, client_policy. Где важным является client_policy, который содержит такой параметр, как java.io.FilePermission "${user.dir}", "read" означающий, что серверу доступна для чтения только пользовательская дерриктория, из которой запущена система CRDS. Остальные файлы будут недоступны.
Второй случай поведения зловредной задачи – это перегрузка компьютера путем переполнения оперативной памяти решается архитектурой системы CRDS, а именно указанный максимум оперативной памяти (в мегабайтах), которая будет доступна одному серверу. Однако тут стоит помнить, что пользователь может поменять это значение. Которого зловредной задаче окажется достаточно для перегрузки компьютера. Также попытка загрузить процессор не выйдет по причине регулировки со стороны JVM. Защита во время сетевых соединениях между удаленными объектами обеспечивается технологией RMI.
Система CRDS гарантирует пользователю безопасность, ограничивая доступ как к файлам операционной системы, так и объем используемых вычислительных ресурсов.