1127
РАЗРАБОТКА ПРОГРАММНЫХ МОДУЛЕЙ ДЛЯ ВИРТУАЛЬНОЙ ЛАБОРАТОРИИ ИССЛЕДОВАНИЯ МОБИЛЬНЫХ AD HOC СЕТЕЙ 
3 Клиент-сервер 
3.4 Интерфейс клиента . 
----------
Интерфейс клиента состоит из элементов управления, взаимодействуя с которыми, пользователь получает искомые вычисления. На рисунке 17 изображен главный интерфейс клиента.
Рисунок 17 – Главный интерфейс клиента
Прежде, чем начинать выполнение сетевых операций, необходимо установить соединение с целевым сервером. Для этого необходимо перейти в меню – соединение – параметры подключения и указать ip адрес и порт для связи с целевым сервером. Определить статус подключения можно с помощью статус строки, расположенной в нижней части окна приложения.
Не подключен – соединение с сервером не установлено.
Подключено к ip : port – соединение с сервером установлено, где ip и port, это соответственно ip адрес и порт сервера.
Если сервер недоступен приложение выведет соответствующее сообщение.
Валидация формы осуществляется на клиенте, в случае ввода некорректных данных пользователь получит соответствующее сообщение об ошибке, данные не будут отправлены на сервер.
Рассмотрим функции для исследования ad hoc сетей. Одиночный эксперимент – пользователь указывает количество узлов, которое необходимо сгенерировать и радиус приема узла.  Вычисления, которые доступны:
* Количество компонент связности.
* Поиск главной компоненты.
* Количество узлов в главной компоненте.
* Количество ребер в главной компоненте.
* Расстояние ближайшей точки главной компоненты до границы области.
* Максимальная степень вершины главной компоненты
После выбора всех необходимых параметров для вычисления, пользователь нажимает на кнопку “Вычислить” – запрос отправляется к серверу, после обработки запроса сервером результаты вычислений будут отображены в консоли клиента. На рисунке 18 изображен детальный интерфейс одиночного эксперимента.
Рисунок 18 – Интерфейс одиночного эксперимента
Также можно наглядно представить, как расположены и связанны между собой узлы в ограниченной области. Кнопка “Рисовать” создает новое окно, содержимое которого будет сформировано из сгенерированного графа. На рисунке 19 изображено расположение узлов сгенерированного графа с параметрами n = 20 и r = 0,3.
Рисунок 19 – Расположение узлов сгенерированного графа
Дескрипторы узлов, помеченные желтым цветом, являются узлами главной компоненты. Дескрипторы остальных узлов помечены красным. Если между узлами есть связь, то между ними ставится ребро, окрашенное в зеленый цвет.
В качестве библиотеки для рисования используется ZedGraph. Данная библиотека обеспечивает высокую степень гибкости - почти каждый аспект графа может быть установлен пользователем и изменен.
Пользователь может также построить выпуклую оболочку. К узлам, составляющим главную компоненту можно применить алгоритм QuickHull реализован в отдельном модуле в Algorithms.cs.Для этого необходимо в том же окне выполнить нажатие кнопки “Shape”. На рисунках 20,21,22 показана последовательность действий необходимая для построения фигуры.
Рисунок 20  – Сгенерированный граф n=20, r=0.2
После генерации заданного количества узлов n=20 с определенным радиусом приема каждого из них r=0,2, сформируются компоненты связности, главная компонента содержит наибольшее количество узлов.
Входными данными QuickHull является набор точек (х,y) главной компоненты из которых и будет в дальнейшем построен  наименьший выпуклый многоугольник. Для этих узлов выполним алгоритм QuickHull для построения выпуклой оболочки.
Рисунок 21 – Построенный выпуклый многоугольник
Построенная фигура содержит узлы с дескрипторами 18,16,7, 14.Данная выпуклая оболочка является четырехугольником, на рисунке 21 стороны фигуры окрашены в фиолетовый цвет.
Для отрисовки получившейся фигуры используется обьект Arrow библиотеки ZedGraph, у объекта имеется конструктор, который принимает обязательные параметры при инициализации в виде (x1,y1,x2,y2).Свойство Line.Width задает ширину линии отрисованной фигуры, Line.Color – задает цвет используемой линии.
После всех операций инициализации нового обьекта Arrow необходимо добавить его в  GraphObjList с помощью метода Add. Все операции, связанные с перерисовкой, выполняются на клиенте.
Рисунок 22 – Построенный выпуклый многоугольник
На рисунке 22 практически в центре фигуры обозначена точка. С – центр тяжести многоугольника. Центром тяжести треугольника принято называть точку M пересечения его медиан.
Рассмотрим интерфейс, с помощью которого клиент выполняет построение графиков зависимостей для исследования мобильных беспроводных сетей. В программе клиента - пользователь указывает количество точек, из вычисленных значений которых будет формироваться искомый график. Тип точек – радиус узла или количество узлов, соответственно N или R. Далее указывает количество итераций вычислений на одну точку.
Доступные графики:
* Максимальная степень вершины главной компоненты
* Расстояние от центра тяжести многоугольника до центра области
* Количество углов в многоугольнике
* Количество компонент связности
* Количество узлов в главной компоненте
* Количество ребер в главной компоненте
* Расстояние ближайшей точки главной компоненты до границы области  Площадь многоугольника
На рисунке 23 изображен детальный интерфейс, с помощью которого можно выбрать какие именно графики необходимо построить.
Рисунок 23 – Интерфейс для построения графиков
Данные графики формируются с зависимостью от изменения параметра N или R, т.е. от количества узлов или радиуса приема узла соответственно.
По нажатию кнопки “Построить” клиент, отправляет запрос серверу, сервер производит вычисления согласно запросу, сформированному клиентом.
По окончанию вычислений сервер отправляет данные клиенту, клиент в свою очередь из полученных данных выполняет построение графиков.
Для исследования математических ожиданий, примем во внимание, что случайная величина имеет дискретное равномерное распределение как на формуле (1).
(1)
Тогда её математическое ожидание (2):
(2)
равно среднему арифметическому всех принимаемых значений. Руководствуясь формулой (2) вычислим математические ожидания для следующих величин:
* Максимальная степень вершины главной компоненты.
* Расстояние от центра тяжести многоугольника до центра области.
* Количество углов выпуклого многоугольника.
* Количество компонент связности.
* Количество узлов в главной компоненте.
* Количество ребер в главной компоненте.
* Расстояние от границы многоугольника до границы области.
* Площадь выпуклого многоугольника.
Затем смоделируем графики зависимостей, изображающие характеристики сети при указанных параметрах.
Как уже рассматривалось в пункте 2.4, достаточно 2000 итераций для вычисления каждой точки графика с минимальной погрешностью. Таким образом все вышеперечисленные графики будут построены с количеством экспериментов равным 2000 на каждую точку. На рисунке 24 изображен график зависимости максимальной степени вершины главной компоненты от количества узлов в графе при R = 0,25 каждого узла.
Рисунок 24  –  График зависимости максимальной степени вершины главной
компоненты от количества узлов в графе
На рисунке 25 изображен график зависимости расстояния от центра тяжести многоугольника до центра области от количества узлов в графе при R =0,25.
Рисунок 25  –  График зависимости расстояния от центра тяжести многоугольника до центра области от количества узлов в графе На рисунке 26 изображен график зависимости количества углов в многоугольнике от количества узлов в графе, при R =0,25.
Рисунок 26  –  График  зависимости количества углов в многоугольнике от количества узлов в графе
На рисунке 27 изображен график зависимости количества компонент связности от количества узлов в графе, при R =0,25.
Рисунок 27  –  График  зависимости количества компонент связности от количества узлов в графе
На рисунке 28 изображен график зависимости количества узлов в главной компоненте от радиуса приема узла, при N = 40.
Рисунок 28  –  График  зависимости количества узлов в главной компоненте от радиуса приема узла
На рисунке 29 изображен график зависимости количества ребер в главной компоненте от радиуса приема узла, при N = 40.
Рисунок 29  –  График зависимости количества ребер в главной компоненте от радиуса приема узла
На рисунке 30 изображен график зависимости расстояния ближайшей точки главной компоненты до границы области от радиуса приема узла, при N =40.
Рисунок 30  –  График зависимости расстояния ближайшей точки главной компоненты до границы области от радиуса приема узла
На рисунке 31 изображен график зависимости площади многоугольника от количества узлов в графе, при R = 0,25.
Рисунок 31 – График зависимости площади многоугольника от количества узлов в графе