303
Разработка системы безопасности веб-сайта
1 Безопасность веб-сайта 
1.3 Хеширование с использованием соли .
----------
Время от времени, серверные базы данных похищают. Учитывая это, важно убедиться, что некоторые важные пользовательские данные, такие как пароли, могут быть не восстановлены. Идеальным решением данной проблемы является такое понятие, как хеширования, помогающее защитить пароли в веб-приложениях.
Хеширования преобразует данные (большого или малого размеров), в относительно короткий отрезок данных, таких как строка или целое число. Это осуществляется с помощью односторонней хеш-функции. “Односторонняя” означает, что очень трудно (практически невозможно) получить первоначальные данные.
Криптографическая соль представляет собой данные, которые применяются в процессе хэширования для предотвращения возможности разгадать оригинальный ввод с помощью поиска результата хэширования в списке заранее вычисленных пар ввод-хеш, известном также как "радужная" таблица.
Более простыми словами, соль - это кусочек дополнительных данных, которые делают ваши хеши намного более устойчивыми к взлому. Существует много онлайн-сервисов, предоставляющих обширные списки заранее вычисленных хешей вместе с их оригинальным вводом. Использование соли делает поиск результирующего хеша в таком списке маловероятным или даже невозможным.
При использовании функции password_hash(), возвращаемое значение уже содержит соль как часть созданного хеша. Это значение нужно хранить как есть в вашей базе данных, так как оно содержит также информацию о хеширующей функции, которая использовалась, и может быть непосредственно передано в функцию password_verify() при проверке пароля.
Таким образом, можно сформулировать следующие алгоритмы регистрации и авторизации.
Процесс регистрации пользователя:
* Пользователь заполняет регистрационную форму, в том числе и поле пароль.
* Веб-скрипт сохраняет всю информацию в базу данных. Однако пароль будет передан хеш-функции, перед сохранением. Не зашифрованный пароль нигде не сохраняется.
И процесс входа в систему:
* Пользователь вводит имя пользователя и пароль.
* Скрипт передаёт пароль той же хеш-функции.
* Скрипт находит записи пользователя в базе данных, и читает хранящийся в базе данных хэшированный пароль.
* Оба эти значения сравниваются, и, если они совпадают, то пользователь авторизуется.
Стоит заметить, что оригинальный пароль нигде не хранится. Если базу данных украли, то пользовательские данные не могут быть скомпрометированы.