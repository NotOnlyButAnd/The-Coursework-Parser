537
РАЗРАБОТКА ПРОГРАММНОГО АГЕНТА ДЛЯИНФОРМАЦИОННОГО ПОИСКА В СРЕДЕ ИНТЕРНЕТ
2 Парсинг сайта . 
2.4 Объектная модель документа (DOM) 
----------
Объектная модель документа (Document Object Model – DOM) [3] регламентирует способ представления содержимого документа (в частности веб-страницы) в виде набора объектов  и является стандартом, предложенным веб-консорциумом. Под содержимым понимается все, что может находиться на веб-странице:  ссылки,  рисунки,  абзацы, текст и т. д.
Следует  отметить, что DOM может применяться не только в вебстраницах, но и в любых других документах. В частности, она может использоваться с любыми словарями XML.  Одним из таких словарей является HTML, а точнее, XHTML.
Документ в DOM представляется в виде древовидной структуры,  которая 	является 	одной 	из 	наиболее 	употребительных 	структур 	в программировании. Это  представление обеспечивает унифицированный способ навигации по документу.
Ниже и на рисунке 1 рассмотрен  пример представления Html-документа в виде дерева:
<html>
<head>
<title>Пример представления Html-документа в виде дерева</title>
</head>
<body>
<h1>Представление документа в виде дерева</h1>
<p>Абзац 1</p>
<p>Абзац 2</p>
</body>
</html>
Рисунок 1  Представление HTML-документа в виде древовидной структуры
При использовании DOM для работы с текстовым файлом в формате XML исходный файл анализируется, разбивается  на индивидуальные элементы, атрибуты, комментарии и т.д. Затем в памяти создается представление файла XML в виде дерева узлов,  в котором каждый объект в документе рассматривается в виде узла. В качестве узлов могут выступать элементы, команды обработки,  комментарии, атрибуты,  и даже составляющий атрибуты обыкновенный текст.
После этого разработчик, используя дерево узлов, может обращаться к содержанию документа  и, при необходимости,  вносить в него изменения. Например,  чтобы добавить новый элемент  достаточно просто создать новый узел и прикрепить его в качестве потомка к нужному узлу.
Следует всегда выбирать модель DOM в качестве метода доступа к файлам XML.  Так как этот метод имеет ряд преимуществ по сравнению с такими механизмами генерации документов XML, как запись непосредственно в поток:
1.  Модель DOM гарантирует правильную грамматику и правильное оформление документов.  DOM трансформирует текстовый файл в абстрактное представление дерева узлов. Это позволяет полностью избежать таких проблем, как незакрытые или неправильно вложенные теги. Работая с документом XML при помощи этого метода, разработчик должен беспокоиться не о текстовом выражении документа, а только о связях типа родитель-потомок и об относящейся к этому информации. DOM
предотвращает также создание в документе неправильных связей родительпотомок.
2.  Модель DOM абстрагирует содержание от грамматики. Созданное моделью DOM  дерево узлов - это логическое представление содержания файла XML. Дерево узлов  показывает, какая информация представлена в файле и как ее фрагменты соотносятся друг с другом, вне непосредственной связи с грамматикой XML. Информация дерева узлов используется для создания страницы HTM или  для обновления реляционной базы данных.
Разработчики при этом могут не вникать в специфику языка XML.
3.  Модель DOM упрощает внутреннее манипулирование документом. Задача разработчика, использующего модель DOM для изменения  внутренней структуры файла XML, становится значительно  по сравнению с работой тех, применяет традиционные механизмы манипулирования файлами. DOM позволяет легко добавить элемент в середину документа. Кроме того, такие глобальные операции, как удаление из документа всех элементов с конкретным именем тега, могут быть выполнены с помощью пары команд, а не "метода грубой силы",  который предполагает полное сканирование всего файла для  удаления ненужных тегов.
4.  Модель DOM напоминает структуры иерархических и реляционных баз данных. Способ, который использует  DOM для представления связей между элементами данных, напоминает метод представления  информации в современных иерархических и реляционных базах данных. С помощью этой модели упрощается процесс обмена данными между файлом XML и базой данных. Использование модели DOM для построения иерархической структуры документа позволяет легко передавать информацию между системами.