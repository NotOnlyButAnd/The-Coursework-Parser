Evaluation Warning: The document was created with Spire.Doc for Python.
 
 

ВЫПУСКНАЯ КВАЛИФИКАЦИОННАЯ РАБОТА БАКАЛАВРА 
 
АНАЛИЗ ПРОЦЕССОВ ИЗМЕНЕНИЯ ДЛИН ПОЛНЫХ МАРШРУТОВ МЕЖДУ СЛУЧАЙНЫМИ УЗЛАМИ ОППОРТУНИСТИЧЕСКОЙ СЕТИ
 
	Работу выполнил 	А. А. Толубаев



СОДЕРЖАНИЕ 
Введение…………………………………………………………………….3 
1  Основные положения……………………………………………………5 
1.1  Модель сети……………………………………….………………..5 
1.2  Взаимное расположение сетей и их перемещение в пространстве……………………………………………………………6 
2  Описание алгоритма маршрутизации …………...……………………. 8 
2.1  Описание объекта исследования…………………………………. 8 
2.2  Описание алгоритма программы…………………………………. 10 
3  Обработка полученных результатов………………………………........13 
3.1  Анализ результатов исследования одной сети………………....... 13 
3.2  Анализ результатов исследования двух сетей……………………30 
3.3  Анализ результатов исследования трех сетей…………………… 39 
Заключение………………………………………………………………….50 
Список использованных источников……………………………………...52 
Приложение А Программный код ……..………………………………….53 

ВВЕДЕНИЕ 
Мобильные беспроводные компьютерные ad hoc сети находят широкое применение. Особенную роль они играют при необходимости выполнения масштабных работ в местностях с плохо развитой или разрушенной вследствие стихийных бедствий инфраструктурой. Такие сети создаются в период ликвидации чрезвычайных ситуаций, обеспечивая информационное взаимодействие участников операции. В связи с ограниченным радиусом действия приемопередатчиков компьютерных узлов сети остро стоит вопрос обеспечения связности и живучести сети. Минимальным требованием является связность сети, т.е. наличие хотя бы одного маршрута передачи данных между двумя любыми узлами. Однако ввиду мобильности узлов надежность односвязной сети недостаточна, в любой момент времени сеть может распасться на несколько компонент. Поэтому достаточная живучесть сети обеспечивается только в многосвязной самоуправляемой сети.  
Такая сеть относится к классу автономных вычислительных систем. Она управляет своими информационными и технологическими процессами децентрализовано без вмешательства извне на основе своей математической модели. Модель позволяет предсказывать и предупреждать негативные тренды в сети (в частности, изменение характеристик связности), выбирать маршруты передачи данных, давать рекомендации пользователям информационной системы, поддерживаемой компьютерной ad hoc сетью. 
Оппортунистическая компьютерная сеть представляет собой объединение независимых мобильных сетей. Каждая из составляющих сетей имеет свои цели (решения каких-то задач) и алгоритмы функционирования. В связи с перемещением узлов сети могут возникать ситуации, при которых передача данных от узла a к узлу b невозможна (потеря связности, для ориентированного графа – потеря слабой связности). 
Оппортунистическая мобильная система может обеспечить передачу сообщения даже при отсутствии в некоторые периоды времени маршрута «источник – приемник». Это достигается тем, что сообщение продвигается от источника сначала к промежуточному узлу (до которого есть маршрут), ожидает в нем (буферизуется), а затем, продвигается дальше, когда возникает благоприятная возможность (opportunity) из-за перемещения узлов других сетей, входящих в оппортунистическую сеть. 
Таким образом, изменение расположения других сетей может помочь передаче сообщений в данной сети. Алгоритм маршрутизации должен динамически находить такой «кусочный» маршрут, складывающийся из частичных маршрутов, для каждого сообщения. Для этого могут использоваться знания, накопленные о системе и ее окружении. Частичным маршрутом будем называть маршрут, полностью лежащий в одной сети. Следовательно, полный маршрут от узла a к узлу b складывается из частичных маршрутов, лежащих в разных сетях. Причем, существовать частные маршруты не обязаны в один и тот же момент времени, но могут существовать в последовательные перекрывающиеся отрезки времени. 
 
1. Основные положения 
1.1 Модель сети 
Модель расположения на плоскости мобильной ad hoc сети представляет собой объединение кругов заданных радиусов. В области расположения сети имеется естественный электромагнитный шум некоторого уровня. В центре одного из кругов (a) находится передатчик сигналов. Уровень электромагнитного поля, создаваемого передатчиком, уменьшается при удалении от центра круга. 
Радиусом Ra считается такое значение удаления, при котором отношение сигнал/шум соответствует чувствительности стандартного приемника, находящегося на этом удалении. Иначе говоря, при меньшем, чем Ra , удалении приемник способен принять и распознать сигнал, а при большем или равном расстоянии – нет (либо вообще не принимает сигнал, либо не может его декодировать и считает шумом). Таким образом, те узлы сети (вершины графа), которые попали в круг, способны «слушать», что может быть обозначается дугой, идущей из центра круга a к «слушающей» вершине. 
    Слушающая вершина b также снабжена передатчиком, и также создает круг радиуса Rb с центром в этой вершине. Вершины, попадающие в ее круг, способны ее слышать. 
Вершины a и b слышат друг друга, т.е. могут непосредственно обмениваться информацией, тогда и только тогда, когда расстояние между ними d(a, b) < min(Ra  , Rb).   Если d(a, b)  max(Ra  , Rb), то связи нет.  Если min(Ra  , Rb)  d(a, b) < max(Ra  , Rb), то связь односторонняя. Таким образом, граф компьютерной сети является ориентированным (орграф). В частном случае, когда все радиусы одинаковы, граф является неориентированным. 
Так как расположение узлов сети изменяется со временем, то получается динамический граф G(t), в котором дуги (ребра) между вершинами – узлами, то исчезают (при удалении узлов друг от друга), то возникают (при приближении узлов). Соответственно, для пары выбранных вершин a и b набор маршрутов, их соединяющих (как количество дуг или ребер), изменяется. Изменяется и кратчайший маршрут. Длина маршрута изменяется скачкообразно: в момент t0 маршрут имеет длину d0 , и сохраняет ее до момента t1 , когда вследствие появления новых ребер или исключения старых, длина кратчайшего маршрута изменяется на целочисленную величину и становится равной d 0 . И так далее.  
Если изобразить этот процесс графиком с осью абсцисс t, и осью ординат d, то получится кусочно-постоянная функция. На некоторых интервалах график будет отсутствовать (маршрута не существует). Конкретный вид функции зависит не только от выбранной пары вершин a и b, но и от закономерностей (x(t), y(t)) перемещения вершин на плоскости. 
1.2 Взаимное расположение сетей и их перемещение в пространстве 
Будем рассматривать оппортунистическую компьютерную сеть, которая представляет собой объединение независимых мобильных сетей, перемещающихся относительно друг друга. Направление и скорость движения сетей относительно друг друга выбираются случайно. Распределение вершин в этих сетях случайное равномерное независимое. Скорость и направление движения узлов выбираются случайно и при этом узлы не должны выходить за пределы своей сети. 
Каждый узел сети обладает радиусом уверенного приема и передачи сигнала. Если расстояние между вершинами геометрического графа, описывающего сеть, меньше этого радиуса, то между приемопередатчиками устанавливается связь.  
 Если между источником сообщения и его получателем в момент начала передачи сообщения нет прямого пути, источник может передать сообщение узлам, с которыми у него есть связь. Они, в свою очередь, также становятся источниками этого сообщения. Вследствие движения точек один из таких узлов может найти путь к получателю сообщения и передать его.  
 Из-за такого алгоритма маршрутизации, когда сообщение передается при появлении благоприятной ситуации и новых вершин, которые еще не передавали данный сигнал, сеть ad hoc называется оппортунистической.  Несмотря на то, что сигнал получают не только источник и приемник, но и промежуточные узлы, которые могут никогда не достигнуть приемника, такой метод передачи положительно сказывается на времени передачи, что критически важно для функционирования такой сети, особенно когда она направлена на урегулирование ситуации в местности, где произошла чрезвычайная ситуация. 
 
 
 
2. Описание алгоритма маршрутизации 
2.1 Описание объекта исследования 
Рассматривается двумерная неограниченная область S – координатная плоскость. В центре этой плоскости с некоторым смещением по оси абсцисс располагаются независимые мобильные сети с заданным количеством вершин. Начальные координаты каждой вершины распределяются случайно в области каждой независимой сети, с использованием равномерного независимого распределения в области каждой независимой сети. Также случайным образом выбирается вершина в одной сети, которая будет источником сигнала, и вершина в другой сети, которая становится приемником этого сигнала. 
В момент времени t = 0 вершина-источник генерирует сообщение. С этого момента каждая сеть, обладающая своими скоростью и случайным направлением движения, начинают изменять свои координаты. 
Рассматривается случай, когда скорость и направление движения каждой сети постоянны. Также с этого момента узлы каждой сети начинают движение в случайном направлении и со своей случайной скоростью и скоростью своей сети. Для того чтобы узлы не выходили за пределы своей сети, перед каждым следующим моментом времени t происходит проверка на то, что узлы не покинут пределы своей сети на следующем шаге. Если узел не прошел эту проверку, то происходит перерасчет направления и скорости движения узла. 
Источник начинает передавать сигнал всем соседним вершинам, с которыми он имеет связь, и эти вершины в свою очередь тоже становятся источниками сообщения и в следующий момент времени t тоже передадут сигнал всем соседним вершинам. Если в данный момент у вершины нет возможности передать сигнал, то вершина ожидает, пока такая возможность не появится (сообщение буферизуется), либо пока не истечет время жизни сигнала. Так как сети и узлы в них постоянно движутся, то связность все время будет то появляться, то пропадать. Если сообщение не доходит до приемника по прошествии заданного времени, то сообщение считается не доставленным. 
В итоге сигнал либо доходит до приемника через промежуточные узлы, либо с очень небольшой вероятностью может случится такой вариант, что из-за пересечения сетей в момент их генерации, и из-за того, что вершина-источник и вершина-приемник выбираются случайно, эти вершины из разных сетей сразу могут оказаться соседними, то есть между ними существует связь и есть возможность сразу передать сообщение напрямую.  
 
Рисунок 1 – Пример начального расположения трех независимых сетей Требуемые для получения характеристики сети: 
а) Важнейшая характеристика - вероятность передачи сигнала или 
динамическая связность сети; 
б) Среднее время передачи сигнала от источника к приемнику; 
в) Средняя длина пути передачи сообщения;  
 г) Среднее количество частичных путей, то есть среднее количество путей, лежащих в каждой сети; 
 	д) Средняя длина частичных путей; 
 	е) Среднее количество вершин, использованных в каждой сети; 
 
2.2 Описание алгоритма программы 
Каждая генерируемая независимая мобильная сеть имеет следующие характеристики: 
а) длина (выбирается случайно в пределах значений MIN_HEIGHT и MAX_HEIGHT). 
б) ширина (выбирается случайно в пределах значений MIN_WIDTH и 
MAX_WIDTH); 
	в) 	смещением 	по 	оси 	абсцисс 	координатой 	плоскости 
(NETWORK_OFFSET); 
г) скорость движения (NETWORK_SPEED); 
д) угол направления движения сети в радианах (выбирается случайно от 0 
до значения MAX_ANGLE); 
е) количество вершин в сети (NUMBER_OF_VERTEXES).  
 
Будем рассматривать вариант, когда количество вершин во всех сетях одинаково.  
 
 
 
Узлы сети имеют следующие характеристики: 
а) начальные координаты (пара значений X и Y); 
б) радиус уверенного приема и передачи сигнала (выбирается случайно в 
пределах значений MIN_RADIUS и MAX_RADIUS); 
в) скорость перемещения (выбирается случайно в пределах значений 
MAX_SPEED и MIN_SPEED); 
г) угол направления движения узла в радианах (выбирается случайно от 0 
до значения MAX_ANGLE); 
д) наличие передаваемого сообщения (signal). 
 
Также в начале указывается время жизни сообщения (time_to_live), означающее максимальную длительность передачи сообщения. 
На основе задаваемых в основной программе характеристик, указанных выше, поочередно инициализируется каждая независимая мобильная сеть и узлы, принадлежащие этой сети. Данные узлы равномерно распределяются в своей сети, каждая из которых обладает своими шириной и высотой. Данные сети независимы, они обладают своим направлением и скоростью. Таким образом, данные мобильные сети считаются независимыми. 
 В зависимости от указанного количества сетей, каждая сеть получает свой номер в интервале от 0 до n – 1, где n – общее количество независимых мобильных сетей. Случайным образом выбирается вершина-источник в сети с номером 0, и вершина-приемник в сети с номером   n -1. Вершины, являющиеся основными приемником и передатчиком сообщения, выбираются с помощью случайного равномерного распределения из всех доступных вершин данных сетей. 
С увеличением времени на t = 1 каждая независимая мобильная сеть и вершины в ней меняет свою позицию. Таким образом, при увеличении времени моделируемые узлы данной сети смещаются не только на значения собственной скорости, но и на значения скорости сети, в которой они находятся. Таким образом возможна синхронизация узлов и сети, то есть отпадание ситуаций, когда вершина узла выходит за пределы сети в результате ее абстрактного перемещения на области распределения. 
Так как отрезок времени абстрактен и принят за единицу, координаты сетей и точек будет изменяться на значение скорости в единицу времени в зависимости от направления движения. 
Также по прошествии промежутка времени t = 1 определяются все вершины, которые являются переносчиком сигнала. Каждая вершина передает сигнал всем достижимым вершинам, у которых этого сообщения нет. После получения сигнала в поле path вершины заносится список, в котором содержится путь вершины, от которой она получила этот сигнал. Таким образом генерируется путь от оригинального источника к получателю. После прохода по всем вершинам сигнал доставляется всем вершинам, которые связаны с источниками сообщения. 
Можно говорить, что при данных характеристиках алгоритм является наиболее продуктивным, так как в каждый момент времени каждая вершина, являющаяся непосредственным соседом по отношению к вершине, содержащей передаваемый сигнал, получает передаваемое сообщение. 
Несмотря на большую загруженность, такой алгоритм гарантирует максимально быструю передачу сигнала и максимальную вероятность передачи сигнала. Для увеличения параметра вероятности успешной передачи сигнала необходимо не менять алгоритм, а изменить входные параметры, такие как количество сетей, количество вершин, размер сетей, время жизни сообщения и скорость передвижения сетей и узлов. Основываясь на этом, возможно измерение характеристик не алгоритма передачи сообщений между участниками сети, а зависимости характеристик работы сети от данных начальных параметров. 
 
 
 
 	 
3. Обработка полученных результатов 
Полученные данные необходимо проанализировать, чтобы проследить зависимости таких параметров, как среднее время передачи сигнала, среднее число промежуточных передатчиков и вероятность передачи сигнала, среднее количество частичных путей, средняя длина частичных путей, среднее количество вершин, использованных в каждой сети, от таких параметров, как количество сетей, количество передатчиков, размер сетей, скорость движения сетей и узлов, время жизни (time_to_live) сообщения, означающее максимальную длительность передачи сообщения. 
 Далее будет рассмотрено три варианта количества независимых мобильных сетей для исследования: одна сеть, две сети, три сети. 
 Также для каждого из этих вариантов будем рассматривать случай, когда геометрический граф компьютерной сети является неориентированным и ориентированным. 
Для определенности при работе алгоритма радиус передачи сигнала у каждого приемопередатчика для случая неориентированного геометрического графа взят равным 1.  
 
3.1 Анализ результатов исследования одной сети 
Сначала рассмотрим зависимость каждого параметра от количества вершин в сети. В Таблице 1 указаны характеристики случайного геометрического графа, где средняя длина и ширина сети, на которой распределяются вершины size = 15, время жизни сообщения time_to_live = 20, скорость перемещения узлов сети speed = 1.  
 
 
 
 
Таблица 1 – характеристики сети с size = 15, time_to_live = 20, speed = 1 
 
Количество вершин 
Среднее время доставки 
Доля удачных передач 
Средняя длина пути 
5 
10,44126571 
0,2307 
1,551798873 
10 
11,44790652 
0,3081 
2,947095099 
15 
11,96148148 
0,405 
4,805679012 
20 
12,22121149 
0,4837 
6,946661154 
25 
12,2522171 
0,5638 
9,338772614 
30 
12,11147064 
0,6181 
11,7296554 
35 
12,08935801 
0,6916 
14,38288028 
40 
12,05076142 
0,7289 
17,31787625 
45 
11,78233068 
0,7663 
19,9860368 
50 
11,60037879 
0,792 
22,35555556 
55 
11,55524526 
0,8236 
25,58232152 
60 
11,40884498 
0,8502 
28,18619148 
65 
11,40401245 
0,8673 
31,5175833 
70 
11,25596998 
0,8794 
34,05048897 
75 
11,11296462 
0,8932 
36,65047022 
80 
11,001443 
0,9009 
39,42668443 
85 
10,88327833 
0,909 
42,38932893 
90 
10,83572516 
0,9198 
45,27462492 
95 
10,71815046 
0,9278 
47,91194223 
100 
10,59273629 
0,9279 
50,69457916 
 
Для большей наглядности рассмотрим полученные значения на основании построенных по данной таблице графиков. На Рисунке 2 проанализирована зависимость вероятности передачи сигнала от количества узлов мобильной сети. 
 	 
 
0
1
,
0
,
0
2
,
3
0
0
,
4
0
,
5
6
0
,
7
,
0
8
,
0
9
,
0
1
5
10
15
20
25
30
35
40
45
50
55
60
65
70
75
80
85
90
95
100

Рисунок 2 – График зависимости вероятности передачи сигнала от количества узлов 
Заметно, что с увеличением количества вершин значительно возрастает вероятность передачи сигнала в сети. Это неудивительно, так как при большем количестве доступных вершин при том же размере сети источнику доступно больше промежуточных вершин, которым можно передать сигнал. При статичном значении времени жизни сообщения в каждый момент времени вероятность передачи сигнала промежуточному узлу возрастает, что ведет к увеличению и доли удачных передач. 
Очевидно, что с ростом количества вершин и доля удачных передач возрастает. Заметим также, что график зависимости повышения вероятности передачи сигнала в зависимости от количества узлов сети имеет логарифмический вид, или при повышении числа узлов сети с шагом 5 доля успешных передач возрастает все медленнее. Таким образом, при увеличении времени жизни сообщения не стоит стремиться к максимальному количеству вершин, так как существует некое критическое значение числа узлов, значения доли успешных передач для которого достаточно для нормальной работоспособности сети, а развертка сети с большим количеством вершин будет избыточно. 
Рассмотрим также зависимость среднего времени передачи сигнала от количества узлов в мобильной сети. Данная зависимость отражена в графическом виде на Рисунке 3. 
 
 
5
9
,
10
10
,
5
11
11
,
5
12
12
,
5
5
10
15
20
25
30
35
40
45
50
55
60
65
70
75
80
85
90
95
100

Рисунок 3 – График зависимости времени передачи сигнала от количества вершин 
Заметим, что среднее время доставки сигнала растет вплоть до 25 вершин. Это связано с тем, что при таком малом количестве вершин, мала вероятность и самой успешной доставки сообщения, так как если успешная передача сигнала и происходит, то либо за короткое время, либо никогда вовсе. Так как отраженные данные действительны для успешных передач, а на Рисунке 1 мы видели, что для количества вершин до 15 включительно доля успешных передач не превышает 0,4, можно говорить, что и для зависимости среднего времени передачи от количества вершин существуют некие критические значения. 
Среднее время передачи растет для сетей, количество приемопередатчиков в которых увеличивается вплоть до 25. Это можно объяснить тем, что число успешных передач увеличивается, а значит и увеличивается среднее время успешной доставки сообщения. Однако, после данного значения, с увеличением количества узлов сильно улучшается и связность графа, уменьшается среднее количество компонент связности в данной сети, соответственно и среднее время успешной доставки уменьшается. 
Справедливо можно говорить о том же, о чем и ранее – стремление к максимальному количеству вершин избыточно, только если перед данной сетью не стоит задач по максимально быстрой передаче сигнала. Таким образом, на основании этих данных можно судить о достаточном количестве узлов при развертке мобильной сети, в которой доля успешных передач и среднее время передачи сообщения будут достаточны для ее успешной работы. 
Рассмотрим также зависимость средней длины пути от источника к приемнику. Рассмотренные зависимости отражены на Рисунке 4. 
 
 
0
10
20
30
40
50
60
5
10
15
20
25
30
35
40
45
50
55
60
65
70
75
80
85
90
95
100

Рисунок 4 – График зависимости средней длины пути от количества вершин 
Заметим, что с ростом количества вершин средняя длина пути стабильно увеличивается. Кроме того, стоит рассмотреть данные зависимости с подозрением на линейную зависимость. Объяснить полученные данные можно тем, что с ростом количества узлов мобильной сети увеличивается их плотность распределения, вследствие чего путь между источником и приемником существует с большей вероятностью. Так как собранные данные также отражают информацию об успешных передачах, рассмотрим полученные зависимости в связи с предыдущими результатами исследования. 
Так как растет вероятность существования пути через промежуточные узлы, растет и среднее количество промежуточных узлов на пути передачи сигнала. Несмотря на большую загруженность, это компенсируется меньшим временем передачи, что является более важным параметром при развертке ad hoc сети в чрезвычайной ситуации.  
Однако, стоит понимать, что с возрастанием длины пути количество буферизованных сообщений в узлах сети значительно возрастает. Таким образом, увеличение количества вершин, хоть и ведет к лучшей работоспособности сети, может быть избыточным. На примере возрастания средней длины пути это видно лучше всего. Чем больше длина пути при передаче сообщения от источника к приемнику, тем большее количество памяти узла расходуется на буферизованные сообщения, то есть меньше памяти отводится на локальные вычисления. 
Таким образом, рассмотрев зависимости результатов работы сети от количества узлов в ней можно говорить о том, что существуют некие критические значения приемопередатчиков мобильной сети, от которых надо отталкиваться. Недостаточное количество узлов ведет к ухудшению таких характеристик, как успешная доля передач и время передачи, однако, злоупотребление увеличением количества узлов ведет к высокой нагрузке сети, что может отрицательно сказаться на результатах локальных вычислений узлов, времени обработки передач сообщений между узлами при большом количестве сообщений в буфере и привести к «зависанию» сети от избыточности обрабатываемых данных. 
Далее рассмотрим зависимость характеристик сети от увеличения времени жизни передаваемого сообщения. Возьмем для рассмотрения число вершин vertex = 50, т.к. плотность вершин возрастает и результаты получаются более точными, так как при данном значении возрастает доля успешных передач. Результаты вычислений характеристик сети с изменением времени жизни сообщения указаны в Таблице 2. 
 
Таблица 2 – характеристики сети с vertex = 50, size = 15, speed = 1 
 
Время жизни сообщения 
Среднее время доставки 
Доля удачных передач 
Средняя длина пути 
5 
3,335249042 
0,1044 
5,314176245 
10 
6,661048689 
0,3204 
12,49032459 
15 
9,565453006 
0,5905 
18,49449619 
20 
11,72346264 
0,8017 
22,56953973 
25 
13,17436288 
0,9182 
24,81834023 
30 
13,95562404 
0,9735 
25,59856189 
 
Рассмотрим данные показатели наглядно. Для этого рассмотрим зависимости характеристик сети от увеличения в графическом виде.  
Для начала рассмотрим самую важную характеристику – долю успешных передач в зависимости от увеличения времени жизни сообщения. Данная зависимость отражена на Рисунке 5. 
На данном рисунке заметно, что с ростом времени жизни сообщения возрастает и вероятность успешной передачи сообщения. С приближением к рассматриваемому порогу времени жизни сообщения, равному 30, доля успешных передач становится близка к единице.  
 
0
2
,
0
,
0
4
6
,
0
,
0
8
1
2
,
1
5
10
15
20
25
30
Доля удачных передач
 

Рисунок 5 – График зависимости доли успешных передач сообщения между узлами мобильной сети от времени жизни передаваемого сообщения 
Становится понятно, что, как и в случае с зависимостями характеристик сети от количества вершин, стоит ограничивать время жизни сообщения таким образом, так как для каждого конкретного случая существует некое критическое значение времени жизни, при котором доля успешных передач будет достаточна для работы сети. 
 Для подтверждения данных выводов рассмотрим также зависимость средней длины пути от времени жизни передаваемого сообщения. Данная зависимость отражена на Рисунке 6. 
 Заметно, что с ростом времени жизни сообщения средняя длина пути растет, так как, как рассмотрено выше, растет и доля успешных передач данного сообщения. Однако, при приближении к рассматриваемой границе времени жизни сообщения, равной 30, можно заметить спад роста длины пути. Очевидно приближение к критическому значению времени жизни – при дальнейшем его увеличении средняя длина пути не будет расти, не будет расти доля успешных передач, однако, в памяти приемопередатчиков сообщения будут храниться дольше, что ведет к избыточному использованию ресурсов мобильной сети и высоким нагрузкам при передаче сообщений между узлами данной сети. 
 	 
 
0
5
10
15
20
25
30
5
10
15
20
25
30

Рисунок 6 – График зависимости средней длины пути от времени жизни передаваемого сообщения 
 Рассмотрим также зависимость среднего времени доставки сообщения от значения времени жизни передаваемого сообщения. Рассматриваемые данные отражены на Рисунке 7. 
 Заметно, что темп роста значения среднего времени доставки сообщения также уменьшается. Мы знаем, что с ростом свободы при передаче сообщения время доставки увеличивается, так как возрастает доля успешных передач и сообщение может прийти к получателю спустя долгое время. Однако, такие «заблудшие» сообщения могут лишь нагружать приемопередатчики сети, поэтому лучше остановиться на некоторых критических значениях времени жизни сообщения, которого достаточно для удовлетворительной работы сети в зависимости от целей ее развертки. 
 
0
2
4
6
8
10
12
14
16
5
10
15
20
25
30

 
Рисунок 7 – График зависимости среднего времени доставки от времени жизни передаваемого сообщения 
 Можно заметить, что даже небольшое изменение времени жизни передаваемого сообщения очень сильно влияет на все три показателя. Также исследования показали, что увеличение времени жизни сообщения больше чем значение 30 избыточно, так как рост рассматриваемых характеристик не оправдывает роста таких негативных факторов, как нагрузка сети в связи с буферизацией большего количества сообщений в промежуточных узлах. 
Рассмотрим теперь зависимость характеристик сети от изменения размеров области распределения сети. 
В приведенной далее Таблице 3 приведены усредненные данные, характеризующие зависимость среднего времени доставки сообщения между узлами мобильной сети ad hoc, доли успешных передач сообщения и средней длины пути, или количества промежуточных узлов, в зависимости от размеров рассматриваемой сети. 
.  
 	 
Таблица 3 – Характеристики сети с vertex = 50, time_to_live = 20, speed = 1 
Средний размер сети 
Среднее время доставки 
Доля удачных передач 
Средняя длина пути 
10 
7,88998999 
0,999 
27,09359359 
12,5 
10,46723885 
0,9554 
25,67667992 
15 
11,70103737 
0,8001 
22,97962755 
17,5 
12,1886007 
0,6246 
19,72302273 
20 
12,40677622 
0,4929 
17,52627308 
22,5 
12,63307494 
0,387 
15,97855297 
25 
12,76570887 
0,3167 
15,15156299 
27,5 
12,51998492 
0,2652 
14,16742081 
30 
12,63479478 
0,2144 
13,28731343 
 
 С первого взгляда видно, что при увеличении размеров области распределения узлов данной ad hoc сети увеличивается и время доставки сообщения, а вот доля удачных передач и средняя длина пути уменьшается.  
 Для наглядности полученныз результатов рассмотрим их на графиках. Первым дело рассмотрим зависимость среднего времени доставки от увеличения ширины и высоты области распределения узлов в отдельной мобильной сети. Данная зависимость отражена на Рисунке 8. 
 Заметно, что при более плотном распределении узлов сети, то есть для значений ширины сети менее 15 среднее время передачи менее 12. Объясняется дальнейший рост значения среднего времени передачи тем, что при уменьшении плотности распределения узлов сети ad hoc необходимо больше времени на поиск промежуточных узлов для передачи сообщения и самой передачи. 
 
0
2
4
6
8
10
12
14
10
12
,
5
15
17
,
5
20
22
,
5
25
27
,
5
30

Рисунок 8 – График зависимости среднего времени передачи от размеров сети 
 Далее среднее время передачи остается примерно на одном и том же уровне. Это объясняется значением времени жизни сообщения, равным 20, и значение времени жизни на уровне 12,5 является средним временем для успешных передач для данных характеристик сети. Однако, наблюдая за долей успешных передач, можно понять, что данные значения времени передачи не отражают успешной работоспособности сети. 
 Уже при значении ширины сети, равным 20, вероятность успешной передачи сообщения равна приблизительно 0,5, что является довольно низким показателем. Хоть значение среднего времени передачи при дальнейшем увеличении размеров сети и остается примерно на одном и том же значении, стремительное уменьшение доли успешных передач сообщения между приемопередатчиками сети ad hoc свидетельствует о плохой работоспособности сети в целом и бессмысленности дальнейшего уменьшения плотности распределения узлов сети вследствие увеличения размеров сети. 
 Далее рассмотрим зависимость средней длины пути передачи сообщения от увеличения ширины рассматриваемой сети. Данная зависимость отражена на 
Рисунке 9. 
 
 
0
5
10
15
20
25
30
10
,
5
12
15
17
,
5
20
22
,
5
25
27
,
5
30
Средняя длина пути
 

Рисунок 9 – График зависимости средней длины пути передачи сообщения от размеров сети 
Очевидно, что с увеличением размеров сети, увеличивается и расстояние между распределяемыми в ней вершинами, соответственно при этом сильно падает связность, что как видно из Таблицы 3 отрицательно сказывается на вероятность успешной передачи сообщения.  
При этом, как видно из Рисунка 8, с увеличением размеров сети увеличивается среднее время доставки, так как вершины дольше ждут, пока встретят другие узлы на пути из-за больше расстояние между ними.  
На основании рассмотренных данных можно объяснить уменьшение средней длины пути передачи сообщения между приемопередатчиками сети ad hoc. Ввиду более долгого поиска промежуточных узлов, не содержащих сообщение для приемника, успешная передача чаще происходит спустя более долгое время при стремлении узлов в сети к приемнику сообщения. Обращая внимание на стремительно падающую долю успешного приема, данная зависимость отражает то, что для успешной передачи сообщения с ухудшением параметров сети для того средняя длина пути при успешной передаче уменьшается, так как отражает лучшие случаи, так как уменьшается и доля успешных передач. 
Теперь рассмотрим зависимость характеристик сети от изменения скорости движения узлов. Данные моделирования отражены в Таблице 4. 
 
Таблица 4 – характеристики сети с vertex = 50, time_to_live = 20, size = 15 
Средняя скорость движения узлов 
Среднее время доставки 
Доля удачных передач 
Средняя длина пути 
1 
11,69244332 
0,794 
22,73627204 
1,2 
11,25054218 
0,8761 
24,38089259 
1,4 
10,86331251 
0,9123 
25,40173189 
1,6 
10,43374266 
0,9365 
25,56860651 
1,8 
10,0427987 
0,9533 
25,84810658 
2 
9,796184947 
0,9646 
26,15623056 
2,2 
9,717760298 
0,9662 
26,75346719 
2,4 
9,373434613 
0,9742 
26,3130774 
2,6 
9,291380547 
0,9757 
26,87362919 
2,8 
9,105376344 
0,9765 
26,52043011 
3 
9,10839304 
0,977 
26,6727738 
 
На первый взгляд, заметно уверенное усеньшение среднего времени доставки сообщения и увеличение доли успешных передач. Рассмотрим полученные данные в виде графиков. 
Первым делом рассмотрим зависимость среднего времени доставки сообщения от средней скорости движения узлов данной сети ad hoc. Данная зависимость отражена на Рисунке 10. 
 
 
0
2
4
6
8
10
12
14
1
1
,
2
1
,
4
1
,
6
1
,
8
2
2
,
2
,
4
2
2
,
6
2
,
8
3

Рисунок 10 – График зависимости среднего времени передачи от скорости движения узлов 
 
 Как видно из графика выше, среднее вермя передачи сообщения между узлами сети снижается с увеличением скорости движения узлов. Хоть данное уменьшение времени передачи не кажется значительным, оно может оказать существенное влияние на работу сети при уменьшении времени жизни сообщения. Таким образом, заметно, что с ростом скорости движения узлов сети вероятность передачи сообщения на расстояние повышается.  
 Так как узлы сети движутся быстрее, сигнал «разносится» по области распределения узлов сети быстрее, вследствие чего среднее время передачи падает. Таким образом, увеличивая скорость движения узлов до предельных значений, не оказывающих влияния на вычисления узла, возможно уменьшение времени жизни сообщения, а как результат – меньшую буферизацию сообщений в памяти приемопередатчиков. Однако, чрезмерное увеличение скорости узла может сказаться на результаты работы отдельных узлов, такое как тщательный осмотр местности и сбор информации. 
 Для подтверждения данных выаодов рассмотрим также зависимость доли успешных передач от скорости движения узлов. Данная зависимость отражена на Рисунке 11. 
 
0
0
,
2
0
,
4
0
,
6
0
,
8
1
1
,
2
1
1
,
2
1
,
4
1
,
6
1
,
8
2
2
2
,
2
,
4
2
6
,
2
,
8
3

Рисунок 11 – График зависимости среднего времени передачи от скорости движения узлов 
 
 На данном графике заметно, что доля успешных передач также возрастает с увеличением средней скорости движенияч узлов. Также заметно, что даже в условиях примерно одинаковой доли успешных передач сообщения значения среднего времени понижаются. Хоть вероятность доставки сообщения и увеличивается, ее медленный рост и продолжение снижения вресмени доставки свидетельствует о важном влиянии скорости движения узлов сети ad hoc на ее работоспособность.  
 Несмотря на то, что с ростом скорости узлов маршруты между узлами переопределяются чаще ввиду частых потерь связей между учатниками сообщения, вероятность успешной передачи сообщения возрастает и время доставки продолжает снижаться. 
 Таким образом, при развертке мобильной сети стоит стремиться к максимально возможной скорости приемопередатчиков, которая не окажет влияния на качество сбора информации и ее обработки для узлов для каждого конкретного случая.  
 Рассмотрим и среднюю длину пети в зависимости от средней скорости движения узлов сети. Результаты исследования отражены на Рисунке 12. 
 
20
21
22
23
24
25
26
27
28
1
1
,
2
1
,
4
1
,
6
1
,
8
2
2
2
,
2
,
4
2
6
,
2
,
8
3

Рисунок 12 – График зависимости средней длины пути от скорости движения узлов 
 
 Заметно, что средняя длина пути для успешной передачи сообщения в зависимости от средней скорости движения узлов с ее возрастанием увеличивается. Это можно объяснить тем, что, как было сказано выше, переопределение маршрутов в данной сети происходит чаще. Так как с возрастанием длины пути увеличивается количество буферизованных сообщений, стоит искать оптимальные параметры скорости сети, при которых нагруженность сети оправдывает себя и ведет к максимальной работоспособности сети ad hoc в данных условиях. 
Также стоит отметить, что в данном исследовании приведение графа к ориентированному виду, то есть изменение радиусов уверенного приема и передачи сигнала у узлов, не дало существенных отличий в результатах измерений, поэтому в данном случае здесь не будет рассматриваться ориентированная версия геометрического графа сети. 
 
3.2 Анализ результатов исследования двух сетей 
 Ранее были рассмотрены результаты исследования для одной мобильной сети. Это помогло исследовать базовые зависимости характеристик сети от начальных параметров, то есть найти общие зависимости. 
 Однако, зачастую сети могут решать различные задачи, вследствие чего их движение, возможно, является независимым. Так, одна сеть может поддержвивать связь между участниками операции, для которой понадобилась развертка данной сети, другая – заниматься сбором информации о данной области. В таком случае в некоторые моменты времени результаты работы второй сети должны передаваться в первую для распространения полученной информации между участниками сообщения. 
 В таком случае для передачи используются как узлы первой, так и второй сетей. На основании этого путь от источника к приемнику является суммой частичных путей в обеих сетях, то есть путей, полностью лежащих в одной сети. 
 Для исследования таких случаев рассмотрим модель существования двух независимых мобильный сетей ad hoc. Каждая из них обладает своим направлением движения, своей скоростью движения и своими целями работы и существования. 
Как и раньше, для начала рассмотрим зависимость каждого параметра от количества вершин в сетях. В Таблице 5 указаны характеристики случайного геометрического графа, где средняя длина и ширина сети, на которой распределяются вершины size = 20, время жизни сообщения time_to_live = 30, скорость перемещения узлов сети speed = 1.  
 	 
Таблица 5 – характеристики сети с size = 20, time_to_live = 30, speed = 1 
Количество вершин 
Среднее время доставки 
Доля удачных передач 
Средняя длина пути 
5 
17,06020279 
0,1578 
2,60139417 
10 
17,98957584 
0,2782 
5,816678648 
15 
18,94765913 
0,3802 
10,37532877 
20 
18,67196653 
0,478 
15,13012552 
25 
18,687042 
0,5595 
20,62645219 
30 
18,22111361 
0,6214 
25,45188285 
35 
18,11520119 
0,671 
31,41594635 
40 
17,82516892 
0,7104 
36,9169482 
45 
17,64359768 
0,7427 
42,90830753 
50 
17,34769552 
0,7659 
48,02963833 
55 
17,02335429 
0,7793 
53,22353394 
60 
16,94867038 
0,8085 
59,38392084 
65 
16,79393866 
0,8216 
65,21092989 
70 
16,6952483 
0,8397 
71,12623556 
75 
16,40383936 
0,8491 
76,1572253 
80 
16,49739613 
0,8641 
82,60074066 
85 
16,35309663 
0,8703 
88,16028956 
90 
16,19145533 
0,8754 
93,85595156 
95 
15,99166854 
0,8882 
99,07002927 
100 
16,02092425 
0,8937 
106,0664653 
 
Так как данные результаты тяжело поддаются анализу, проверим существующие зависимости отдельно. Для удобства будем проверять сразу 2 случая – для ориентированных и неориентированных графов, то есть когда радиусы уверенного приема и передачи для каждого узла могут быть различны, то есть может существовать лишь односторонняя связь между двумя узлами сети.  
Для начала рассмотрим зависимость среднего времени передачи от количества узлов в каждой из независимых сетей. Данные зависимости отражены на Рисунке 13. 
 
,
5
14
15
15
,
5
16
16
,
5
17
17
,
5
18
18
,
5
19
19
,
5
5
10
15
20
25
30
35
40
45
50
55
60
65
70
75
80
85
90
95
100
Среднее время доставки
 
Среднее время доставки орграф
 

Рисунок 13 – График зависимости среднего времени передачи от количества узлов 
 	 
Легко заметить, что как и в случае с одной сетью, здесь среднее время доставки растет до 25 вершин, а потом начинает постепенно убывать. Причем до 25 вершин среднее время доставки орграфа ниже, из-за малого количества вершин. Это объясняется тем, что при малом количестве вершин вероятность существования пути и так мало, а одностороння связь между узлами лишь ухудшает данные параметры. 
Таким образом, заметно, что при пользовании несколькими независимыми сетями рассмотренные выше зависимости также имеют место. 
Это доказывается и дальнейшими исследованиями. 
Рассмотрим зависимость доли успешных передач от количества вершин в каждой из независимых сетей. Результаты данного исследования отражены на Рисунке 14. 
 
0
,
1
0
0
,
2
0
,
3
0
,
4
,
5
0
0
,
6
0
,
7
0
,
8
9
0
,
1
5
10
15
20
25
30
35
40
45
50
55
60
65
70
75
80
85
90
95
100
Доля удачных передач
 
Доля удачных передач орграф
 

Рисунок 14 – График зависимости вероятности успешной передачи от количества узлов 
Заметим, что полученные результаты также повторяют полученные ранее. Однако, на данном графике заметно, что с появлением односторонних связей между узлами доля успешных передач меньше, чем при одинаковых радиусов уверенного приема и передачи сигналов для каждого узла сети ad hoc.  
Таким образом, рассмотрение ориентированных сетей возможно лишь при достаточности значений усредненных радиусов для узлов сети. В ином случае сообщение между узлами нарушается. Это свидетельствует о том, что сети с одинаковыми радиусами приема и передачи сообщений более жизнеспособны, так как оперируют двусторонними связями. Данные сети также не имеют накладок при синхронной передаче сообщений. 
 Рассмотрим также зависимость средней длины пути при успешной передаче сообщения от количества узлов для двух независимых сетей. 
Результаты отражены на Рисунке 15. 
 
0
20
40
60
80
100
120
5
10
15
20
25
30
35
40
45
50
55
60
65
70
75
80
85
90
95
100
Средняя длина пути
 
Средняя длина пути орграф
 

Рисунок 15 – График зависимости средней длины пути от количества узлов 
 
Заметно, что с ростом доли успешных передач растет и средняя длина пути. Таким образом, можно говорить, что при сообщении двух независимых сетей узлы обеих сетей ведут себя как узлы одной сети. При исследовании также заметно, что на долю успешных передач влияет также и скорость сетей вкупе с их смещением друг относительно друга.  
Очевидно, что с ростом скоростей сетей при их случайном направлении движения возможна ситуация, когда в какой-то момент времени сети станут «несвязными», то есть не найдется двух узлов, по одному в каждой из сетей, благодаря которым будет возможна передача сообщения между сетями. 
Подобная зависимость справедлива и при увеличении смещения сетей друг относительно друга. Так как увеличивается расстояние между сетями, сигнал может «застрять» в одной из сетей, так и не достигнув получателя до конца времени жизни данного сообщения. 
Так как мы имеем дело с двумя независимыми мобильными сетями, то теперь мы можем исследовать такие характеристики как среднее количество частичных путей, среднюю длину частичных путей и среднее количество использованных вершин в каждой сети. 
Рассмотрим зависимость выше упомянутых параметров от количества вершин. Будем также на графиках рассматривать вариант, когда граф ориентированный и неориентированный. Данные зависимости отражены в 
Таблице 6. 
  
Таблица 6 – характеристики сети с size = 20, time_to_live = 30, speed = 1 
Количество вершин 
Количество частичных путей 
Длина частичного пути 
Количество использованных вершин 



Сеть 0 
Сеть 1 
5 
1,83269962 
1,459088509 
0,846007605 
1,755386565 
10 
3,327462257 
1,819017561 
2,570812365 
3,245866283 
15 
5,425565492 
2,022207032 
4,960021042 
5,415307733 
20 
7,555020921 
2,139398748 
7,471757322 
7,658368201 
25 
10,02394996 
2,175078352 
10,48257373 
10,14387846 
30 
12,1200515 
2,227607181 
13,12133891 
12,33054393 
35 
14,78166915 
2,256482286 
16,26706408 
15,14888227 
40 
17,08460023 
2,28660983 
19,33502252 
17,58192568 
45 
19,57964185 
2,302209326 
22,51003097 
20,39827656 
50 
21,7298603 
2,333155216 
25,23031727 
22,79932106 
55 
23,85281663 
2,345014661 
27,98819453 
25,23533941 
60 
26,21558442 
2,382262532 
31,41026592 
27,97365492 
65 
28,59688413 
2,402339128 
34,46105161 
30,74987829 
70 
30,99869001 
2,405221011 
37,68619745 
33,44003811 
75 
32,87103992 
2,446998806 
40,52985514 
35,62737016 
80 
35,16224974 
2,468117645 
44,12602708 
38,47471357 
85 
37,36194416 
2,486157665 
46,87510054 
41,28518902 
90 
39,36063514 
2,504660185 
50,13650902 
43,71944254 
95 
41,32076109 
2,513115485 
52,92952038 
46,14050889 
100 
44,14154638 
2,519667798 
56,48136959 
49,58509567 
 
Для наглядности рассмотрим результаты данной выборки в графическом виде. В первую очередь рассмотрим зависимость количества частичных путей от количества узлов в сети ad hoc. Результаты отражены на Рисунке 16. 
 
0
5
10
15
20
25
30
35
40
45
50
5
10
15
20
25
30
35
40
45
50
55
60
65
70
75
80
85
90
95
100
Количество частичных путей
 
Количество частичных путей орграф
 

Рисунок 16 – График зависимости количества частичных путей от количества узлов 
 
 На основании проведенных ранее исследований, мы знаем, что с ростом количества вершин увеличивается и доля успешных передач, равно как и средняя длина пути. 
 Таким образом, с увеличением длины пути количество частичных путей, то есть последовательностей промежуточных узлов, лежащих полностью в одной сети ad hoc, также увеличивается. 
 Для дальнейшего рассмотрения параметров сети необходимо исследовать среднюю длину данного частичного пути, вкупе с которой стоит рассматривать результаты зависимости количества частичных путей от количествоа вершин.  Кроме того, можно заметить, что количество частичных путей для ориентированных графов стабильно немного меньше, чем для неориентированных. Объяснением этому также является доказанное – при наличии односторонних путей между вершинами вероятность передачи уменьшается, и необходимо следить за тем, чтобы минимальные радиусы приема и передачи для узлов сети не были меньше критических параметров, так как в ином случае с использованием таких узлов будет возможно лишь получение, но не передача сообщения другим участникам сети. 
 	Рассмотрим зависимость средней длины частичного пути для двух сетей в зависимости от количества узлов. Данная зависимость отражена на Рисунке 17. 
 
 
0
0
,
5
1
1
,
5
2
2
,
5
3
5
10
15
20
25
30
35
40
45
50
55
60
65
70
75
80
85
90
95
100
Длина частичного пути
 
Длина частичного пути орграф
 

Рисунок 17 – График зависимости средней длины частичных путей от количества узлов 
 
На данном графике заметно, что для сетей, содержащих до 15 вершин в сети, средняя длина частичного пути при передаче сообщения их одной сети в другую растет при повышении количества вершин. Однако, темпы роста длины частичного пути понижаются с повышением количества вершин. Таким образом, средняя длина частичного пути остается примерно на одном и том же уровне. 
Вкупе с результатами исследования количества частичных путей от количества узлов, отраженными на Рисунке 16, можно говорить о том, что при достаточной работоспособности сети, а мы знаем, что она не достигается при малом (менее 15) количестве вершин в пределах рассматриваемых параметров, длина частичного пути держится примерно на одном уровне, и возрастает лишь количество частичных путей. Очевидно, что длина частичных путей не увеличивается пропорционально количеству вершин, то есть при наличии двух сетей кратчайший путь при любой возможнсоти затрагивает все возможные узлы, вследствие чего путь не стремится лежать преобладающе в одной из независимых сетей ad hoc, используя все возможности для успешной передачи сообщения.  
Так как данные результаты справедливы для успешных передач, можно говорить о том, что при данных значениях времени жизни сообщения, передача сообщения с помощью малого количества точек сочленения мобильных сетей маловероятна. Если необходимо доставлять сообщение даже в условиях редкого пересечения независимых сетей ad hoc, необходимы повышать время жизни сообщения, что приведет, как рассматривалось выше, к высокой нагрузке сети ввиду буферизации большего количества передаваемых сообщений в промежуточных узлах обеих сетей. 
Кроме того, важным параметром является количество задействованных узлов в каждой из рассматриваемых сетей ad hoc. Данный параметр является уточнением параметра средней длины маршрута, который может показать результаты задействования узлов для каждой сети ad hoc отдельно, то есть покажет результатф буферизации сообщений для сети – отправителя и сети – получателя. 
Рассмотрим зависимость количество зайдествованных вершин в каждой сети от общего количества узлов в каждой из сетей. Результаты отображены на Рисунке 18. 
На данном рисунке можно увидеть, что количество задействованных вершин в Сети 0 постоянно растет, также как и количество задействованных узлов в Сети 1. Однако, заметно, что количество задействованных вершин в сети, в которой генерируется сообщение для отправки, стабильно выше, чем количество задействованных в пути передачи вершин из сети, получающей сообщение, и данная разница увеличивается с ростом количества вершин. 
 
 
0
10
20
30
40
50
60
5
10
15
20
25
30
35
40
45
50
55
60
65
70
75
80
85
90
95
100
Сеть 0
 
Сеть 1
 

Рисунок 18 – График зависимости среднего количества задействованных узлов от общего количества узлов 
 
 Данную зависимость можно объяснить тем, что генерация пути в сетиотправителе является точкой отсчета для формирования пути из источника к приемнику сообщения. Кроме того, так как мы знаем, что успешной передаче соответствует движение сетей при их частом пересечении (количество точке сочленения высоко), можно говорить, что в начале своего пути путь строится в начальной сети, а уже потом начинает активно разбиваться на частичные пути ввиду активного пересечения участвующих в сообщении сетей ad hoc. 
 
3.3 Анализ результатов исследования трех сетей 
 Рассмотрим также случай с присутствием промежуточной сети – «высоко оппортунистический» вариант. В данном случае будет генерироваться 3 независимые сети с некоторым смещением друг относительно друга, где Сеть 0 – сеть, содержащая источник сообщения, Сеть 1 – промежуточная сеть, помогающая передаче сообщения ввиду своего участия в общении узлов, Сеть 2 – сеть, содержащая узел-поулчатель сообщения. 
 	Рассмотрим результаты моделирования, отраженные в Таблице 7. 
 
Таблица 7 - характеристики сети с size = 20, vertex = 50, speed = 1 
Время жизни сообщения 
Количество 
частичных путей 
Длина частичного пути 
Сеть 0 
Сеть 1 
Сеть 2 
5 
5,595238095 
1,598109265 
2,380952381 
2,428571429 
3,666666667 
10 
16,10655738 
1,675140542 
9,254098361 
8,5 
8,885245902 
15 
25,86988848 
1,744320454 
15,10780669 
14,49814126 
13,64312268 
20 
34,63414634 
1,729064926 
21,02660754 
19,18625277 
18,15742794 
25 
39,69871795 
1,730226765 
24,94711538 
21,79807692 
20,15384615 
30 
45,17750678 
1,74833102 
28,1802168 
25,90514905 
22,36449864 
35 
47,16014235 
1,739435077 
29,64412811 
27,06405694 
23,57532622 
40 
48,19954904 
1,767633095 
30,98308906 
27,98985344 
24,34611048 
45 
48,3024236 
1,777303182 
31,48261328 
28,21390938 
24,63435195 
50 
51,71546392 
1,785599947 
33,07113402 
30,38453608 
26,19381443 
55 
50,44228805 
1,787754976 
32,4412666 
29,64044944 
25,90091931 
60 
50,62790698 
1,787019305 
32,83518706 
29,65318504 
26,22042467 
65 
52,60703518 
1,756612734 
33,05628141 
31,03718593 
27,20100503 
 
 Для наглядного рассмотрения полученных результатов представим их в виде графиков. Рассмотрим характеристики общего пути и частичных путей в зависимости от времени жизни сообщения. 
 Первым делом рассмотрим зависимость количества частичных путей от времени жизни сообщения. Данная зависимость отражена на Рисунке 19.  Заметно, что с ростом времени жизни сообщения, растет и количетсов частичных путей. Так как на основе исследований зависимостей от времени жизни сообщения мы знаем, что растет средняя длина пути между узлами, можно предположить, что количество частичных путей напрямую зависит от средней длины пути. 
 
0
10
20
30
40
50
60
5
10
15
20
25
30
35
40
45
50
55
60
65

Рисунок 19 – График зависимости изменения количества частичных путей от времени жизни сообщения 
 
 Также заметно, что темп роста значения количества частичных путей с ростом времени жизни снижается, как снижается и темп роста значения средней длины пути.  
 Таким образом, именно средняя длина пути является основным параметром для исследования количества частичных путей. Малое количество частичных путей при малом количестве вершин в каждой сети объясняется низкой лолей успешных передач, в результате чего рассматриваются исключительные случаи передачи сообщения между приемником и источником. На основании этих утверждений можно предположить, что средняя длина частичных путей должна колебаться примерно в районе одного и того же значения, так как так объясняется прямая зависимость количетсва частичных путей от времени жизни сообщения. 
 Для доказательства обратимся к Рисунку 20, на котором отражена зависимость средней длины частичного пути от времени жизни сообщения. 
 	 
 
1
,
5
55
1
,
1
,
6
1
,
65
7
1
,
1
,
75
1
,
8
1
85
,
5
10
15
20
25
30
35
40
45
50
55
60
65

Рисунок 20 – График зависимости средней длины частичного пути от времени жизни сообщения 
 
 Заметно, что при малом времени жизни средняя длина частичного пути меньше, чем в других случаях, и объясняется это также малым количеством успешных передач. 
 Однако, начиная со значения в 15 единиц времени, средняя длина частичного пути держится в довольно узком промежутке. Разницу между следующими значениями можно считать в пределах погрешности.  
 Заметно, что средняя длина частичного пути во всех случаях колеблется между 1 и 2 вершинами, то есть алгоритм передачи активно использует все возможные вершины для передачи. На основании этого основной является именно мобильность узлов сетей, так как на основании ранних исследований мы знаем, что именно в результате повышения скорости узлов вероятность передачи максимальна. 
 Рассмотрим также количество задействованных в пути успешной передачи сообщения узлов в каждой из сетей. Результаты отражены на Рисунке 
21. 
 
0
5
10
15
20
25
30
35
5
10
15
20
25
30
35
40
45
50
55
60
65
Сеть 0
 
Сеть 1
 
Сеть 2
 

Рисунок 21 – График зависимости количества задействованных вершин от времени жизни сообщения 
 Заметно, что с ростом времени жизни сообщения растет и количество вершин, задействованных на пути передачи для каждой сети. Объясняется это тем, что при увеличении времени жизни растет и доля передач, в результате которых сигнал получает все большее число узлов. Однако, заметна и зависимость, найденная для двух сетей – при отдалении сети от сети, в которой был источник сообщения, среднее количество задействованных вершин уменьшается. Объяснение то же - сигнал распространяется более в сети, в области которой он находится больше, то есть в начале – в Сети 0, далее – на пересечении сетей 0 и 1, далее – в Сети 1, потом – на пересечении сетей 1 и 2 и далее – Сети 2. Ввиду течения времени доля сигналов, которые пытались достичь края Сети 2, меньше, чем сигналов, которые пытались настигли приемник близко к пересечению с Сетью 1, поэтому в результате с удалением сети от сети-источника количество задействованных вершин в ней при успешной передаче уменьшается ввиду снижения вероятности успешной передачи. 
 Далее рассмотрим зависимости конечных путей от скорости движения сетей на плоскости распределения. Для начала рассмотрим зависимость доли успешных передач сообщений от скорости движения сетей. Данная зависимость отражена гра Рисунке 22. 
 
 
0
1
,
0
2
0
,
0
,
3
4
0
,
5
,
0
0
,
6
0
,
7
0
,
8
0
,
9
0
,
1
0
,
6
1
,
1
1
,
6
2
,
1
2
,
6
3
,
1
3
6
,
4
1
,
4
,
6

Рисунок 22 – График зависимости доли удачных передач от скорости движения сетей 
 Заметно, что с ростом скорости движения сетей в случайном для каждой направлении вероятность успешной передачи сообщения стремительно снижается. Это объясняется тем, что сети в начальный момент времени в рассматриваемой модели пересекаются друг с другом, а потом начинают двигаться с индивидуальным направлением. Таким образом, с повышением скорости движения сети более вероятна ситуация, когда сети движутся в противоположных направлениях, и сигнал не успевает достичь сети получателя, пока сети ad hoc не потеряют сочек сочленения, то есть связей между узлами в каждой из них. 
 Таким образом, можно говорить, что связь между сетями возможна при их пересечении в случае корректироваки их направлений, то есть синхронизации их местоположений, поскольку в случае случайно выбранного направления движения сети даже в условиях пересечения этих сетей при начальной развертке с ростом скорости их передвижения вероятность передачи сообщений между ними стремительно падает.  
 Также данную проблему пожно решить ограничением не только движения узлов в сети, но и ограничением движения сетей на плоскости их развертки. 
 Для подтверждения полученных результатов обратимся к рассмотрению зависимости среднего времени доставки от скорости движения сетей. Данная зависимость показана на Рисунке 23. 
 
16
16
,
5
17
17
,
5
18
18
,
5
19
19
,
5
20
0
,
1
0
,
6
1
,
1
1
,
6
2
,
1
2
6
,
3
,
1
3
,
6
4
,
1
4
,
6

Рисунок 23 – График зависимости среднего времени доставки сообщения от скорости движения сетей 
 Заметно, что лучшими показателями доставки сообщений обладают сети, которые пересекаются в начальный момент времени и обладают низкой скоростью своего движения. В таком случае до потери точек сочленения двух сетей возможна передача сообщения от источника к приемнику, например, передача неких начальных указаний. В ином случае следует синхронизировать местоположения сетей либо ограничивать их передвижение. Результаты для больших скоростей нельзя считать важными, поскольку отражают исключительные случаи. 
 Данные выводы повторяют результаты исследования зависимости средней длины пути от скорости движения сетей, отраженной на Рисунке 24. 
 
 
0
10
20
30
40
50
60
70
80
90
0
,
1
0
,
6
1
,
1
1
,
6
2
,
1
2
,
6
,
1
3
3
,
6
,
1
4
4
,
6

Рисунок 24 – График зависимости средней длины пути при успешной доставке сообщения от скорости движения сетей 
 
 Заметно, что с ростом скорости движения сетей снижается средняя длина пути. Это происходит постольку, поскольку снижается доля успешных передач сообщений, вследствие чего успешные передачи возможны только в случаях, когда начальное расположение источника сигнала и конечное расположение его приемника благоволит передаче данного сообщения. 
 Далее можем рассмотреть зависимости характеристик частичных путей от скорости движения сетей. Изначально рассмотрим зависимость средней длины пути от скорости движения сетей, которая отражена на Рисунке 25.  
 
0
5
10
15
20
25
30
35
40
45
50
0
,
1
0
,
6
1
,
1
1
,
6
2
,
1
2
,
6
3
,
1
3
,
6
4
,
1
4
,
6

Рисунок 25 – График зависимости количества частичных путей от скорости 
движения сетей 
 
 Очевидно, что с ростом скоростей сетей вероятность передачи сообщения, как было рассмотрено ранее, снижается, поэтому успешные передачи возможны при уменьшении длины путей от источника к приемнику. Таким образом, так как ранее было доказано, что количество частичных путей напрямую зависит от длины пути, уменьшается и количество частичных путей.  Также рассмотрим зависимость длины частичного пути от скорости движения сетей для данной модели, включающей 3 независимые сети. Данная зависимость показана на Рисунке 26. 
 
0
0
,
5
1
1
,
5
2
2
,
5
3
1
0
,
0
,
6
1
,
1
1
,
6
2
,
1
2
6
,
3
,
1
3
,
6
,
1
4
4
,
6
Длина частичного пути
 

 
Рисунок 26 – График зависимости длин частичных путей от скорости движения сетей 
 
 Заметно, что с ростом скоростей сетей в каждой из сетей длина частичного пути также увеличивается. Это можно объяснить тем, что при быстром расхождении сетей и уменьшении времени на успешную передачу сообщения все чаще начинают возникать моменты, когда сигнал попадает в сеть и распространяется в ней уникально, то есть другие точки сочленения с другими сетями теряются. 
 Последняя зависимость, которая будет рассмотрена для данной модели – зависимость количества использованных вершин от скорости движения сетей. Результаты данного исследования отражены на Рисунке 27. 
 Мы знаем, что с ростом скорости движения сетей скорость их удаления друг от друга, очевидно, возрастает, и доля успешных передач понижается. Однако, заметно, что с ростом скорости движения сетей количество использованных на пути от источника к приемнику узлов для сети, в которой находится источник сообщения (Сеть 0) и сети, в которой находится приемник 
 
0
5
10
15
20
25
30
35
0
,
1
0
,
6
1
,
1
1
,
6
2
,
1
2
,
6
3
,
1
3
6
,
4
,
1
4
,
6
Сеть 0
 
Сеть 1
 
Сеть 2
 

 
Рисунок 27 - График зависимости количества использованных вершин в сетях от скорости движения сетей 
 
сообщения (Сеть 2) стремится к равенству, а вот количество использованных узлов в промежуточной сети (Сеть 1) уменьшается.  
 Это объясняется несколькими факторами. Во-первых, в результате уменьшения с ростом скоростей движения сетей рассматривается все больше случаев, когда сети источника и приемника начали свое движение друг навстречу другу, и промежуточная сеть и не играет такой роли, во-вторых, перемещение сетей друг относительно друга сводит на нет начальное смещение сетей друг относительно друга. 
 
 	 
ЗАКЛЮЧЕНИЕ 
Во время выполнения дипломной работы был создан алгоритм маршрутизации для оппортунистической компьютерной сети ad hoc. Данный алгоритм направлен на передачу сообщения от источника к приемнику в условиях существования как одной сети, так и нескольких независимых мобильных сетей. В результате моделирования с использованием данного алгоритма для каждого набора таких характеристик, как количество вершин в сети, скорости передвижения сети и узлов сети, количество сетей, размеры сети и время жизни сообщения в соответствие поставлены вероятность успешной передачи сигнала, среднее время передачи и средняя длина пути от источника к приемнику. Полученные данные сохранены и проанализированы. 
Данный алгоритм является наиболее подходящим для решения задачи передачи сигнала от случайного узла одной сети к другому случайному узлу другой сети, когда не важно, насколько нагружена сеть. Поскольку каждый узел, получивший сигнал, в каждый момент времени передает его своим соседям, используется каждая возможность передать информацию получателю. Благодаря таким характеристикам алгоритма стало возможно исследовать параметры сети, не усложняя его ограничением передачи сигнала каждым узлом. 
В процессе программной реализации создан набор классов, составляющий двумерную сеть ad hoc. В будущем этот комплекс можно расширять и использовать его для создания и реализации других алгоритмов. 
В результате анализа полученных при моделировании сетей ad hoc данных получены и проанализированы результаты, отражающие зависимости между начальными настройками мобильных сетей и их конечными характеристиками. 
Таким образом, исследованы зависимости не только основных характеристик работы сети, такие как доля успешных передач сообщений, средняя длина пути и среднее время доставки, но и проанализирован алгоритм передачи сообщений между узлами нескольких сетей, в результате которого полный путь представляет собой сумму частичных путей, или последовательностей вершин, полностью лежащих в одной независимой сети. 
Полученные данные сохранены, проанализированы и предоставлены в удобном для восприятия виде, в результате чего при реальной развертке мобильных сетей в некой области на основании полученных данных и целей работы данных сетей можно спрогнозировать их поведение и подобрать максимально подходящие параметры данных сетей. 
 
 
 
 
 	 
СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ 
 
1.  Azzedine Boukerche. Algorithms and protocols for wireless, mobile ad hoc networks. - New Jersey: John Wiley & Sons, Inc., 2009. — 495 с. 
2.  Зыков А. А.  Основы теории графов. // М.: Наука, 1986. — с. 456. 
3.  Королюк 	В.С., 	Портенко 	Н.И.,Скороход 	А.В., 	Турбин 	А.Ф. 
Справочник по теории вероятностей и математической статистике. // М.: Наука, 1985. — 640 с. 
4.  Миков А.И. Связность автономных беспроводных компьютерных сетей в местностях с плохой инфраструктурой. // Экологический вестник научных центров ЧАЭС, 2014, № 1, с. 70 – 75. 
5.  Миков А.И., Мезенцева А.С. Характеристики геометрических графов, моделирующих ad hoc сети. //Информатизация и связь, 2012, № 5, с. 85 – 88. 
6.  Емеличев В.А., Мельников О.И., [и др.] Лекции по теории графов. // М.: Наука, 1990. — 384 с. 
7.  Харари Ф. Теория графов. М.: Эдиториал УРСС, 2003. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
ПРИЛОЖЕНИЕ А 
Программный код 
 using System; 
using System.Collections.Generic; using System.Linq; 
using Microsoft.Office.Interop.Excel; 
 
namespace ConsoleApp1 
{ 
    class Program 
    { 
        static void Main(string[] args) 
        { 
            Application excelApp = new Application() 
            { 
                Visible = false 
            }; 
            _Workbook workbook = excelApp.Workbooks.Add(""); 
            _Worksheet worksheet = (_Worksheet)workbook.ActiveSheet; 
             worksheet.Cells[1, 1] = "Количество вершин";             worksheet.Cells[1, 2] = "Количество сетей";             worksheet.Cells[1, 3] = "Смещение сети";             worksheet.Cells[1, 4] = "Скорость движения сети";             worksheet.Cells[1, 5] = "Средняя ширина сети";             worksheet.Cells[1, 6] = "Средняя длина сети"; 
            worksheet.Cells[1, 7] = "Средний радиус (для ориентированных графов)";             worksheet.Cells[1, 8] = "Средняя скорость движения узлов";             worksheet.Cells[1, 9] = "Время жизни сообщения";             worksheet.Cells[1, 10] = "Среднее время доставки";             worksheet.Cells[1, 11] = "Доля удачных передач";             worksheet.Cells[1, 12] = "Средняя длина пути";             worksheet.Cells[1, 13] = "Количество частичных путей";             worksheet.Cells[1, 14] = "Длина частичного пути";             for (int i = 15; i < 25; i++) 
                worksheet.Cells[1, i] = "Сеть " + (i - 15); 
 
            int iter = 2; 
            for (; Constants.NETWORK_SPEED <= 5; Constants.NETWORK_SPEED += 0.5) 
            { 
                double meanTime = 0.0;                 double meanPathLength = 0.0;                 int successCount = 0; 
                double meanPartialPathLength = 0.0;                 int partialPathsCount = 0; 
                int[] usedNodes = new int[Constants.NUMBER_OF_NETWORKS];                 for (int i = 0; i < usedNodes.Length; i++)                     usedNodes[i] = 0; 
                for (int numberOfTry = 0; numberOfTry < Constants.NUMBER_OF_TRIES; numberOfTry++)                 { 
                    Network[] nwArray = new Network[Constants.NUMBER_OF_NETWORKS];      
//массив сетей 
                    for (int i = 0; i < Constants.NUMBER_OF_NETWORKS; i++) 
                    { 
                        nwArray[i] = new Network(i); 
                    } 
                    //даем сигнал случайной вершине и выбираем конечную 
                    int startNode = 0;                     int lastNode = 0; 
                    while (startNode == lastNode) 
                    { 
                        startNode = Randomizer.GetRandomInt(0, Constants.NUMBER_OF_VERTEXES); 
                        lastNode = Randomizer.GetRandomInt(0, 
Constants.NUMBER_OF_VERTEXES);                     } 
                    nwArray[0].nodeArray[startNode].SetSignal(true);    //даем сигнал стартовой вершине 
                    int timeCounter = 0; 
                    Node[] nodeArray = new Node[0]; 
                    while ((timeCounter < Constants.TIME_TO_LIVE) &&                 
//пока время жизни сигнала не истекло и сигнал не доставлен 
                        (nwArray[Constants.NUMBER_OF_NETWORKS - 
1].nodeArray[lastNode].GetSignal() == false)) 
                    { 
                        nodeArray = new Node[0]; 
                        for (int i = 0; i < Constants.NUMBER_OF_NETWORKS; i++) 
                        { 
                            nwArray[i].PreformStepNetwork();        //двигаем сеть 
(вместе с вершинами) 
                            nodeArray = 
nodeArray.Concat(nwArray[i].GetNodes()).ToArray();      //собираем все вершины в массив для передачи между ними сигнала 
                        } 
                        List<Tuple<int, int>> newSignals = new List<Tuple<int, int>>(0);    //запоминаем, кому ставить сигнал, чтобы не было вложенности передачи 
(только соседям) 
                        for (int i = 0; i < nodeArray.Length; i++) 
                        { 
                            if (nodeArray[i].GetSignal() == true) 
                            { 
                                for (int j = 0; j < nodeArray.Length; j++) 
                                { 
                                    if (nodeArray[j].GetSignal() == false && i != j)    //если вершина, подозрительная на соседа, не получала сигнал и не та же, от которой передаем 
                                    { 
                                        if (Math.Sqrt(Math.Pow(nodeArray[i].GetX() - nodeArray[j].GetX(), 2) +      //если расстояние между ними меньше радиуса передачи                                             Math.Pow(nodeArray[i].GetY() - nodeArray[j].GetY(), 2)) < nodeArray[i].GetRadius()) 
                                            newSignals.Add(Tuple.Create(i, j));     
//запоминаем вершину передачи и получателя 
                                    } 
                                } 
                            } 
                        } 
                        List<int> alreadySet = new List<int>(0);                         for (int i = 0; i < newSignals.Count; i++) 
                        { 
                            if (!alreadySet.Contains(newSignals[i].Item2)) 
                            { 
                                nodeArray[newSignals[i].Item2].SetSignal(true, nodeArray[newSignals[i].Item1].GetPath());       //устанавливаем флаг сигнала в true и заставляем запомнить путь  
                                alreadySet.Add(newSignals[i].Item2); 
                            } 
                        } 
 
                        timeCounter++; 
                    } 
                    if (nwArray[Constants.NUMBER_OF_NETWORKS - 
1].nodeArray[lastNode].GetSignal() == true) 
                    { 
                        successCount++; 
                        List<int> path = nwArray[Constants.NUMBER_OF_NETWORKS - 
1].nodeArray[lastNode].GetPath(); 
                        int[] usedNodesCurrent = GetUsedNodesCount(path);                         for (int i = 0; i < usedNodes.Length; i++)                             usedNodes[i] += usedNodesCurrent[i];                         int count = GetPartialPathsCount(path);                         partialPathsCount += count; 
                        meanPartialPathLength += 1.0 * path.Count / count;                         meanPathLength += path.Count;                         meanTime += timeCounter; 
                    }                 }  
                worksheet.Cells[iter, 1] = Constants.NUMBER_OF_VERTEXES;                 worksheet.Cells[iter, 2] = Constants.NUMBER_OF_NETWORKS;                 worksheet.Cells[iter, 3] = Constants.NETWORK_OFFSET;                 worksheet.Cells[iter, 4] = Constants.NETWORK_SPEED; 
                worksheet.Cells[iter, 5] = (Constants.MIN_WIDTH + Constants.MAX_WIDTH) 
/ 2; 
                worksheet.Cells[iter, 6] = (Constants.MAX_HEIGHT + Constants.MIN_HEIGHT) / 2; 
                if (Constants.MAX_RADIUS == Constants.MIN_RADIUS)                     worksheet.Cells[iter, 7] = (Constants.MAX_RADIUS + Constants.MIN_RADIUS) / 2; 
                worksheet.Cells[iter, 8] = (Constants.MAX_SPEED + Constants.MIN_SPEED) 
/ 2;                 worksheet.Cells[iter, 9] = Constants.TIME_TO_LIVE;                 worksheet.Cells[iter, 10] = meanTime / successCount;                 worksheet.Cells[iter, 11] = 1.0 * successCount / Constants.NUMBER_OF_TRIES; 
                worksheet.Cells[iter, 12] = 1.0 * meanPathLength / successCount;                 worksheet.Cells[iter, 13] = 1.0 * partialPathsCount / successCount;                 worksheet.Cells[iter, 14] = meanPartialPathLength / successCount;                 for (int i = 0; i < usedNodes.Length; i++) 
                    worksheet.Cells[iter, 15 + i] = (1.0 * usedNodes[i] / successCount);                 iter++; 
                //Constants.MAX_WIDTH += 10; 
            } 
            excelApp.UserControl = false; 
            workbook.SaveAs("C:\\aaa.xlsx", XlFileFormat.xlWorkbookDefault, Type.Missing, Type.Missing, 
                false, false, XlSaveAsAccessMode.xlNoChange, 
                Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing);             workbook.Close();             //Console.ReadLine(); 
        }  
        private static int[] GetUsedNodesCount(List<int> fullPath) 
        { 
            int[] usedNodesCount = new int[Constants.NUMBER_OF_NETWORKS];             for (int i = 0; i < usedNodesCount.Length; i++) 
                usedNodesCount[i] = 0; 
            for (int i = 0; i < fullPath.Count; i++)                 usedNodesCount[fullPath[i]]++; 
            return usedNodesCount; 
        }  
        private static int GetPartialPathsCount(List<int> fullPath) 
        { 
