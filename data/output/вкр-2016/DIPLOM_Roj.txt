Evaluation Warning: The document was created with Spire.Doc for Python.
МИНИСТЕРСТВО ОБРАЗОВАНИЯ И НАУКИ РОССИЙСКОЙ ФЕДЕРАЦИИ 
Федеральное бюджетное образовательное учреждение высшего профессионального образования 
«Кубанский Государственный университет» 
(ФГОУБ ВО «КубГУ») 
 
Кафедра вычислительных технологий 
ДОПУСТИТЬ К ЗАЩИТЕ В ГАК Заведующий кафедрой, д.ф.-м.н., профессор  
__________________ Миков А.И. 
_________________________ 2016 г. 
 
ВЫПУСКНАЯ КВАЛИФИКАЦИОННАЯ РАБОТА БАКАЛАВРА 
 
РАЗРАБОТКА И ИССЛЕДОВАНИЕ ИМИТАЦИОННОЙ 
МОДЕЛИ ПРЕДПРИЯТИЯ С ИСПОЛЬЗОВАНИЕМ GPSS 
 
Работу выполнила _________________________________________ Рой А.В. 
                               
Факультет компьютерных технологий и прикладной математики 
Направление 010300.62 «Фундаментальная информатика и информационные технологии» 
Научный руководитель________________________________ Пашенцева В.В. 
                                  
Нормоконтроллер ____________________________________ Пашенцева В.В. 
                                
 
 
Краснодар 2016 

СОДЕРЖАНИЕ 
ВВЕДЕНИЕ……………………………………………………………..……3 
1.  Описание GPSS и аэропорта………………………………….…...…...5 
1.1  Описание GPSS…………………………………………….…….…..…5 
1.2  Описание аэропорта………………………………………….….….….7 
1.3  Основные понятия имитационного моделирования………….…….10 
2.  Описание процесса моделирования и анализа………….......….…...13 
2.1  Создание модели…...............................................................................13 
2.2  Разработка программы в GPSS и ее описание………….........……...17 
2.2.1  Описание программы для внутренних авиалиний……………..19 
2.2.2  Описание программы для международных авиалиний………...……….25 
2.3  Проведение экспериментов и анализ результатов…………..…..….30 
2.4  Вычисления…………………………………………….……….….….33 
2.5  Исправленный вариант программы…………………………...…..…46 
2.5.1  Описание программы для внутренних авиалиний……………..........46 
2.5.2  Описание программы для международных авиалиний………..……..51 
2.6  Повторное проведение экспериментов……………………………...56 
3.  Выводы……………………………………………………………..….59 
ЗАКЛЮЧЕНИЕ…………………………………………………….………...61 
СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ…………….…….……62 
ПРИЛОЖЕНИЕ А……………………………………………….…………63 
ПРИЛОЖЕНИЕ Б…………………………………………….…………….69 

ВВЕДЕНИЕ 
Существует множество систем, процессы функционирования в которых могут быть представлены моделями информационных потоков, получившими название систем массового обслуживания (СМО). Это, прежде всего, процессы в технических системах – телефония, радиосвязь и телекоммуникации, вычислительные машины, системы и вычислительные сети. При их анализе наиболее важно определить скорость передачи или обработки информации, оценить пропускную способность, загрузку оборудования и т. д. При анализе предприятия важнейшими задачами являются определение объема производства, сокращение простоев, модернизация и др.  
Любая подобная система неизбежно испытывает различного рода возмущения, источниками которых могут быть либо внешние воздействия, обусловленные случайными или систематическими изменениями окружающих условий, либо внутренние флюктуации, возникающие в самой системе в результате взаимодействия элементов. При исследовании эти системы представляются в виде стохастических моделей дискретных процессов (СМДП). Несмотря на успешное развитие и применение методов аналитического моделирования СМДП, основным методом исследования таких систем остается имитационное моделирование на ЭВМ с применением специализированных языков программирования.  
В настоящее время широко используется для моделирования большого класса систем язык и система моделирования GPSS (General Purpose Simulation System – Система моделирования общего назначения). 
Целью данной работы является проведение исследования имитационной модели предприятия с использованием GPSS. 
Для этого необходимо выполнить ряд задач, а именно: 
* смоделировать работу предприятия в течение 24 ч, месяца, полгода, года; 
* определить возможные места появления очередей и их вероятностновременные характеристики, произвести соответствующие расчеты; 
* выявить причины возникновения очередей, предложить меры по их устранению и смоделировать скорректированную систему в указанных временных рамках; 
* реализовать алгоритм в виде программы для персонального компьютера. 
В качестве объекта исследования выбрано АО «Международный аэропорт Краснодар».  
В процессе работы данного предприятия часто возникают очереди и заминки. Пассажиры, которым приходится проходить через несколько пунктов контроля, находятся в стрессовом состоянии, при этом, если им приходится долго находиться в очередях, люди начинают нервничать, выходят из себя. Такое психическое состояние может сохраняться и после посадки на самолет, и повышенная раздражительность пассажиров негативно сказывается на работе персонала самолета, а в худшем случае, оно может привести к хулиганству на борту. Также задержки в обслуживании в системе и превышение пассажиропотока, на который рассчитана система, могут привести к задержкам рейсов и нарушать эффективность работы аэропорта. 
 
 
 
 
 
1. Описание GPSS и аэропорта 
Разработка алгоритма для моделирования работы аэропорта осуществлялась с помощью средств языка GPSS.  
1.1.  Описание GPSS 
GPSS (General Purpose Simulation System — общецелевая система моделирования) является языком имитационного моделирования, в основном для систем массового обслуживания, предназначенная для разработки моделей сложных систем с дискретным и непрерывным характером функционирования и проведения экспериментов с целью изучения свойств и закономерностей процессов, протекающих в них, а также выбора наилучшего проектного решения среди нескольких возможных вариантов. 
Имитационное моделирование применяется для исследования и проектирования таких сложных систем и процессов, как предприятия, информационные сети, мировое развитие процессов в экономике или экологии, исследования структур сложных систем и их динамики, анализа узких мест, прогнозирования и планирования и т.д. Имитационное моделирование применяется для имитирования какой-либо реальности процессов, происходящих в действительности с какими-либо системами. Главным преимуществом имитационного моделирования является то, что эксперт может ответить на вопрос: «Что будет, если … », то есть с помощью эксперимента на модели вырабатывать стратегию развития. 
Имитационная модель системы – это программа, в которой определяются все наиболее существенные элементы и связи в системе и задаются начальные значения параметров, соответствующие некоторому «нулевому» моменту времени, а все последующие изменения, происходящие в системе, вычисляются на ЭВМ автоматически при выполнении программы. 
GPSS World – это общецелевая система моделирования, которая облегчает процесс разработки и выполнения программ имитационного моделирования.  
Систему GPSS разработал сотрудник фирмы IBM Джефри Гордон в 1961 г. и сейчас данная система является одним из наиболее популярных в мире языков моделирования. Благодаря своей надежности каркас GPSS и сегодня широко используется в сфере имитационных сред. Кроме того, GPSS оказал ощутимое влияние на другие языки моделирования, которые теперь опираются на введенные GPSS понятия. 
При разработке программы студенческая версия системы GPSS World, которую можно найти на официальном сайте фирмы Minuteman Software по адресу: www.minutemansoftware/download. Данная версия распространяется бесплатно. Студенческая версия системы GPSS World не уступает 
коммерческой в эффективности, отличие заключается в том, что программа ограничена в 180 блоков и 1500 одновременных транзактов, представлена только HTML документация. Однако предоставленных средств достаточно для выполнения данного проекта.  
Для системы GPSSWorld требуется IBM совместимый компьютер под управлением ОС Windows. Предпочтительно использовать процессоры типа Pentium II и выше. Иметь периферийные устройства: мышь, клавиатура. Требуется, по меньшей мере, 32 Мбайт оперативной памяти и 10 Мбайт свободного пространства на жестком диске (винчестере). 
GPSS World обладает удобным многооконным пользовательским интерфейсом, встроенными средствами визуализации и интерактивного управления процессом моделирования, обширной библиотекой встроенных процедур, включающей в том числе генераторы случайных величин для более двух десятков вероятностных распределений. Все это делает процесс моделирования эффективным и наглядным. В GPSS World включены специальные средства для моделирования большого класса дискретных систем со стохастическим характером функционирования, в частности, систем и сетей массового обслуживания, что позволяет сделать модели ясными и лаконичными. 
К недостаткам можно отнести то, что в программе на языке GPSS достаточно сложно представить непосредственно процессы обработки данных на уровне алгоритмов. Кроме того, модель представляет собой программу, а значит не имеет графической интерпретации, что затрудняет процесс разработки модели и снижает наглядность модели в целом. 
 
1.2.  Описание аэропорта 
Международный аэропорт Краснодар находится на восточной окраине города Краснодар, в 12 км от его центра. 
Краснодарский аэропорт в настоящее время – стратегически важный объект, так как является крупнейшим южным узловым аэропортом. Обслуживает население 3-го по величине субъекта Российской Федерации — Краснодарского края (исключая территории курортов Анапы, Геленджика, Ейска, Сочи и городов Новороссийска и Туапсе). Территория обслуживания включает также ряд соседних территорий, в том числе республику Адыгею. 
* Сеть аэропорта включает 56 внутренних и зарубежных направления. 
* В 2015 году аэропорт обслужил более 3,1 млн человек. 
* Пропускная способность аэропорта 1 700 пассажиров в час. 
Сегодня в аэропорту Краснодар осуществляют перевозки около 40 авиакомпаний по 56 направлениям (из которых 30 - международные). 
Техническое оснащение аэропорта позволяет принимать самолеты современных типов: Боинг-737-300, А-319, 320. Пропускная способность — 1000 пассажиров в час на внутренних авиалиниях, и 700 — на международных. 
На период проектирования и строительства нового аэропорта Краснодара действующий терминал расширен на 8200 кв.м. В результате пропускная способность действующего аэропорта увеличилась до 1700 пассажиров в час.  
По итогам работы за 2015 год Международный аэропорт Краснодар во второй раз удостоен премии «Воздушные ворота России» в номинации «Лучший региональный аэропорт с пассажиропотоком до 4 миллионов человек».  
Также в 2015 году Международный аэропорт Краснодар получил четыре звезды во втором комплексном исследовании качества терминальной инфраструктуры и пассажирских сервисов аэропортов, агентства «АвиаПорт».  
Аэропорт включает в себя несколько зданий: в одном из них располагается аэровокзал для внутренних авиалиний, схему которого можно видеть на рисунке 1. 
 
Рисунок 1 – Аэровокзал внутренних авиалиний, 1-й этаж 
В другом здании располагается аэровокзал международных авиалиний, схему которого можно видеть на рисунке 2. 
 
Рисунок 2 – Аэровокзал международных авиалиний 
Данные схемы доступны для просмотра на официальном сайте аэропорта: http://basel.aero/krasnodar/about-airport/shem-aeroport/. 
 
1.3.  Основные понятия имитационного моделирования 
Система массового обслуживания (СМО) – абстрактный математический объект, содержащий один или несколько приборов (каналов), обслуживающий заявки, которые поступают в систему, и накопитель, в котором находятся заявки, образующие очередь и ожидающие обслуживания. 
Заявка (требование, запрос, вызов, клиент) – объект, поступающий в СМО и требующий обслуживания в обслуживающем приборе. 
Поток заявок представляет собой совокупность распределенных во времени заявок. 
Обслуживающий прибор или просто прибор (устройство, канал, линия) – элемент СМО, функцией которого является обслуживание заявок. 
В каждый момент времени в приборе на обслуживании может находиться только одна заявка. 
Обслуживание – задержка заявки на некоторое время в обслуживающем приборе. 
Длительность обслуживания – время задержки (обслуживания) заявки в приборе.  
Накопитель (буфер) – совокупность мест для ожидания заявок перед обслуживающим прибором. Количество мест для ожидания определяет емкость накопителя. 
Заявка, поступившая на вход СМО, может находиться в двух состояниях: 
а) в состоянии обслуживания (в приборе); 
б) в состоянии ожидания (в накопителе), если все приборы заняты 
обслуживанием других заявок. 
Заявки, находящиеся в накопителе и ожидающие обслуживания, образуют очередь заявок. Количество заявок, ожидающих обслуживания в накопителе, определяет длину очереди. 
Дисциплина буферизации – правило занесения поступающих заявок в накопитель (буфер). 
Дисциплина обслуживания – Закон, по которому из очереди заявок выбирается очередная заявка, называется дисциплиной обслуживания. 
Иногда заявки одного класса имеют преимущество перед заявками другого класса при выборе из очереди заявок для обслуживания или при занесении в накопитель. Такое явление называется приоритетом.  
СМО бывают разного вида, в зависимости от структурной или функциональной организации. 
Сеть массового обслуживания (СеМО) – совокупность взаимосвязанных СМО, в среде которых циркулируют заявки. 
Основными элементами СеМО являются узлы и источники заявок. 
Узел сети представляет собой систему массового обслуживания. 
Источник – генератор заявок, поступающих в сеть и требующих определенных этапов обслуживания в узлах сети. 
Поток заявок – это совокупность появлений в системе заявок, распределенных во времени по своему возникновению. 
Основной характеристикой потока заявок является его интенсивность λ – среднее число заявок, проходящих через некоторую границу за единицу времени. Величина а  определяет средний интервал времени между двумя последовательными заявками. 
Поток, в котором интервалы времени  между соседними заявками принимают определенные заранее известные значения, называется детерминированным. Поток с одинаковыми интервалами называется регулярным. Поток, в котором интервалы времени  между соседними заявками представляют собой случайные величины, называется случайным.  
Интервалы времени между заявками в простейшем потоке распределены по экспоненциальному закону с функцией распределения, где  λ > 0 – параметр распределения, представляющий собой интенсивность потока заявок. 
Длительность обслуживания – время нахождения заявки в приборе. В общем случае величина случайная и описывается функцией B(t) или плотностью b(t) = B'(t) распределения. В случае неоднородной нагрузки длительности обслуживания заявок разных классов могут различаться законами распределений или только средними значениями. При этом обычно предполагается независимость длительностей обслуживания заявок каждого класса. 
 
2. Описание процесса моделирования и анализа 
В данном разделе описан процесс работы над проектом, описана разработанная программа, проведенные с ее помощью эксперименты и анализ их результатов.  
2.1.  Создание модели 
Для облегчения разработки алгоритма было решено составить модели, отображающие процессы, происходящие во время работы аэропорта. Язык Унифицированный язык моделирования (Unified Modeling Language, UML) предназначен как раз для этой цели. В рамках UML-модели информация о системе представляется в виде особых графических конструкций, называемых диаграммами. Диаграммы были созданы с помощью программы Edraw UML Diagram 5.1.  
Для аэровокзала внутренних авиалиний диаграмма изображена на рисунке 3. 
 
Рисунок 3 – Диаграмма обслуживания клиентов на аэровокзале внутренних авиалиний 
Данная диаграмма принадлежит к классу диаграмм деятельности, также называемых диаграммами активностей (activity diagrams). Этот вид диаграмм представляет алгоритмы неких процессов (действий, активностей), которые происходят в исследуемой системе. Как можно видеть на диаграмме на рисунке 3, при входе в аэровокзал посетители проходят проверку, проходя через арочные металлодетекторы. Далее встречающие проходят в другой зал, а пассажиры проходят на регистрацию. Для бизнес-класса предназначен отдельный поток, в который входит отдельный регистрационный пункт и пункт досмотра багажа. Через этот же поток проходят члены экипажа. Остальные пассажиры могут пройти либо к другим пунктам регистрации, либо воспользоваться установленными киосками самостоятельной регистрации. Далее пассажиры попадают в пункт досмотра багажа. После прохождения всех необходимых процедур пассажиры попадают в зал ожидания – так называемую чистую зону.  
Диаграмму, описывающую процессы, происходящие в аэровокзале международных авиалиний, можно видеть на рисунке 4. 
 
Рисунок 4 – Диаграмма обслуживания клиентов на аэровокзале международных авиалиний 
Данная диаграмма также является диаграммой деятельности. Здесь при входе в аэровокзал пассажиры также проходят проверку арочными металлодетекторами. Затем они должны пройти таможенный осмотр. В аэровокзале два таможенных пункта: один из них расположен в  «красном коридоре», другой – в «зеленом коридоре». Если у пассажира есть товар, подлежащий декларированию, ему следует пройти по «красному коридору». Остальные пассажиры может пройти по «зеленому коридору», где процесс досмотра занимает меньше времени. Структура дальнейших процессов линейна. После таможенного досмотра пассажиры проходят на регистрацию и сдачу багажа. За регистрацией следует прохождение паспортного контроля. Затем, пройдя досмотр и контроль безопасности, пассажиры через арочные металлодетекторы попадают в «чистую зону» для ожидания рейса.  
 
2.2.  Разработка программы в GPSS и ее описание 
Система GPSS World прежде всего служит для расширения возможностей пользователя. Вынося примитивы моделирования на поверхность пользовательского интерфейса, она упрощает визуализацию процессов и управление моделированием. В результате ускоряется разработка и улучшается понимание моделей. Чтобы задачу можно было смоделировать, необходимо, чтобы ее можно было описать с помощью средств теории систем массового обслуживания. То есть в эту категорию попадают объекты, «процесс функционирования которых можно представить в виде состояний и правил перехода из одного состояния в другое, определяемых в дискретной пространственно–временной области». 
Предназначение системы GPSS World – имитационное моделирование сложных дискретных и непрерывных систем. 
Система может применяться при разработке и решении задач в системах массового обслуживания, конечных и вероятностных автоматах, сетях Петри, в экономике – для прогнозирования инвестиционных рисков. 
Объекты системы GPSS создаются в среде GPSS World и могут быть сохранены в файлах формата gps.  
Модель состоит из описания в виде последовательности операторов, также в нее входит множество настроек, закладок в тексте программы, сообщений об ошибках и т. д. В результате трансляции модели создается эксперимент. После успешного завершения эксперимента создается отчет, содержащий статистику по модели или ее отдельным блокам. 
Основными объектами являются: 
1)  операторы (блоки и команды) – основные объекты GPSS-модели, определяющие совокупность действий, которая должна быть выполнена в модели в соответствии с заданными в операторе параметрами, называемыми операндами; 
2)  транзакты – динамические объекты, движущиеся в GPSS-модели от одного оператора (блока) к другому в заданной последовательности. 
Основными объектами оборудования являются: 
1)  приборы (одноканальные устройства) – объекты, которые могут находиться в одном из двух состояний: свободном или занятом; при моделировании систем массового обслуживания используются для имитации процессов занятия и освобождения прибора, то есть для моделирования одноканальных СМО; занятие и освобождение прибора транзактом выполняется в GPSS-модели с помощью операторов SEIZE и RELEASE; 
2)  памяти или хранилища (многоканальные устройства) – объекты, состоящие из множества элементов, которые занимаются и освобождаются транзактами, при этом один транзакт может занять один или несколько элементов памяти, но не более чем ее емкость; при моделировании систем массового обслуживания «память» используется для имитации процессов занятия и освобождения приборов многоканальных СМО; емкость памяти задается в области описания GPSS-модели с помощью оператора STORAGE, а занятие и освобождение элементов «памяти» транзактом – с помощью операторов ENTER и LEAVE; 
3)  очереди – объекты, используемые для накапливания транзактов, находящихся в состоянии ожидания какого-то события, например освобождения прибора или памяти; при моделировании систем массового обслуживания «очередь» используется для имитации процессов ожидания перед обслуживающими приборами; однако понятие «очередь» относительное, так как в действительности транзакты, ожидающие освобождения прибора или памяти, заносятся в «список задержки» соответствующего прибора или памяти, при этом  формирование  списков задержки, то есть занесение в очередь и удаление из очереди, происходит автоматически, независимо от наличия операторов QUEUE и DEPART; последние используются с целью сбора статистики по очередям путем фиксирования моментов поступления транзакта в очередь и удаления его из очереди. 
С помощью созданных диаграмм деятельности и средств GPSS были созданы следующие программы. 
2.2.1. Описание программы для внутренних авиалиний 
а) Общее описание 
Программа описывает процесс прохождения клиентами контрольных пунктов в аэровокзале внутренних авиалиний. Программа состоит из сорока семи блоков, в ней используются три устройства и четыре хранилища. 
б) Структура программы 
GENERATE (exponential(1,0,420)) ;поступление заявок, то есть приход клиентов 
Блок GENERATE здесь задает поток заявок с помощью exponential – стандартной функции экспоненциального распределения, где 420 – среднее время между приходом заявок.  
;проверка на входе 
QUEUE mq3 
ENTER doors 
DEPART mq3 
ADVANCE (exponential(1,0,40)) ;секунды 
LEAVE doors 
Данная часть описывает проверку на входе с помощью металлодетектора. Заявка заходит в очередь mq3, затем попадает в хранилище размерности 3, описанное как doors STORAGE 3, покидает очередь. Время обслуживания заявки 	экспоненциально 	и 	описывается 	встроенной 	функцией exponential(1,0,40), где 40 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе.  
;отделяем пассажиров и встречающих 
TRANSFER .3,pas1,meet 
;бизнес-класс и экипаж идут отдельно pas1 TRANSFER .1,,bsn 
;разделяем регистрацию и саморегистрацию 
TRANSFER .02,pas2,pass 
В программе также используются метки и оператор TRANSFER, который в данном случае обеспечивает вероятностные переходы на нужные в данный момент части программы. 
;саморегистрация pass QUEUE mq0 ENTER selfreg 
DEPART mq0 
ADVANCE (exponential(1,0,30)) 
LEAVE selfreg 
TRANSFER ,next 
Данная часть описывает процесс самостоятельной регистрации пассажиров. Заявка заходит в очередь mq0, затем попадает в хранилище размерности 3, описанное как selfreg STORAGE 3, покидает очередь. Время обслуживания заявки 	экспоненциально 	и 	описывается 	встроенной 	функцией exponential(1,0,30), где 30 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
;регистрация pas2 QUEUE mq ENTER registr 
DEPART mq 
ADVANCE (exponential(1,0,65)) 
LEAVE registr 
TRANSFER ,next 
Данная часть описывает процесс регистрации пассажиров. Заявка заходит в очередь mq, затем попадает в хранилище размерности 15, описанное как registr STORAGE 15, покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0,65), где 65 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
;досмотр багажа next QUEUE mq1 ENTER bagage 
DEPART mq1 
ADVANCE (exponential(1,0,250)) 
LEAVE bagage 
TRANSFER ,clearz 
Данная часть описывает процесс досмотра багажа пассажиров. Заявка заходит в очередь mq1, затем попадает в хранилище размерности 4, описанное как bagage STORAGE 4, покидает очередь. Время обслуживания заявки 	экспоненциально 	и 	описывается 	встроенной 	функцией exponential(1,0,250), где 250 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
;бизнес-класс и экипаж bsn QUEUE mqb1 SEIZE bnsclass 
DEPART mqb1 
ADVANCE (exponential(1,0,50)) 
RELEASE bnsclass 
TRANSFER ,bsncont 
Данная часть описывает процесс регистрации пассажиров бизнес-класса. Заявка заходит в очередь mqb1, затем занимает устройство bnsclass и покидает 	очередь. 	Время 	обслуживания 	заявки 	экспоненциально 	и описывается встроенной функцией exponential(1,0,50), где 50 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает устройство и переходит далее по программе. 
;досмотр багажа бизнес-класса bsncont QUEUE mqb2  
SEIZE bsnbag 
DEPART mqb2 
ADVANCE (exponential(1,0,250)) 
RELEASE bsnbag 
TRANSFER ,clearz 
Данная часть описывает процесс досмотра багажа пассажиров бизнес-класса. Заявка заходит в очередь mqb2, затем занимает устройство bsnbag и покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0,250), где 250 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает устройство и переходит далее по программе. 
;чистая зона clearz QUEUE mqw 
ENTER waiting 
DEPART mqw 
ADVANCE (exponential(1,0,1800)) 
RELEASE waiting 
Данная часть описывает процесс досмотра багажа пассажиров. Заявка заходит в очередь mqw, затем попадает в хранилище размерности 1000, описанное как waiting STORAGE 1000, покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0,1800), где 1800 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
в) Входные и выходные данные 
Входными данными являются введенные данные о времени работы системы, которую должна смоделировать программа, и количестве заявок, которые посетят систему в течение этого времени. 
Входные данные для программы, описывающей работу авиавокзала внутренних авиалиний, можно увидеть в таблице 1. 
Таблица 1 – Входные данные для первой программы 
Данные 
Внутренние линии 

Лето 
Зима 
Полгода 
Год 

Сутки 
Месяц 
Сутки 
Месяц 


Время (с.) 
86400 
2419200 
86400 
2419200 
14515200 
29030400 
Кол-во заявок (макс.) 
50400 
1411200 
35280 
987840 
7197120 
14394240 
Кол-во заявок (ср.) 
40800 
1142400 
28560 
799680 
5826240 
11652480 
Кол-во заявок (мин.) 
24000 
672000 
16800 
470400 
3427200 
6854400 
Количество заявок рассчитывалось через среднее поступление заявок в час (з/ч). Для внутренних авиалиний летом оно составляет: 2100 з/ч – максимальное, 1700 з/ч – среднее, 1000 з/ч – минимальное. Зимой поступление заявок снижается на тридцать процентов, и значения будут соответственно: 1470 з/ч – максимальное, 1190 з/ч – среднее, 700 з/ч – 
минимальное. 
г) Вызов и загрузка 
Программа представляет собой стандартный gps файл, запускающий  с помощью GPSS. 
2.2.2. Описание программы для международных авиалиний 
а) Общее описание 
Программа описывает процесс прохождения клиентами контрольных пунктов в аэровокзале внутренних авиалиний. Программа состоит из сорока семи блоков, в ней используются три устройства и четыре хранилища. 
б) Структура программы 
GENERATE (exponential(1,0,420)) ;поступление заявок, то есть приход клиентов 
Блок GENERATE здесь задает поток заявок с помощью exponential – стандартной функции экспоненциального распределения, где 420 – среднее время между приходом заявок.  
;проверка на входе 
QUEUE mq0 
ENTER doors 
DEPART mq0 
ADVANCE (exponential(1,0,40)) ;секунды 
LEAVE doors 
Данная часть описывает проверку на входе с помощью металлодетектора. Заявка заходит в очередь mq0, затем попадает в хранилище размерности 2, описанное как doors STORAGE 2, покидает очередь. Время обслуживания заявки 	экспоненциально 	и 	описывается 	встроенной 	функцией exponential(1,0,40), где 40 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе.  
;разделение зеленую зону и красную зону 
TRANSFER .1,grn,rd 
В программе также используются метки и оператор TRANSFER, который в данном случае обеспечивает вероятностные переходы на нужные в данный момент части программы, а именно разделение потоков заявок на красный коридор и зеленый коридор в пункте таможенного контроля. 
;таможенный досмотр, зеленая зона grn QUEUE gmq1 
SEIZE gtamognya 
DEPART gmq1 
ADVANCE (exponential(1,0,40)) 
RELEASE gtamognya 
TRANSFER ,toregist 
Данная часть описывает процесс прохождения пассажирами таможенного досмотра в зеленом коридоре. Заявка заходит в очередь gmq1, затем занимает устройство gtamognya и покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией 
exponential(1,0,40), где 40 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает устройство и переходит далее по программе. 
;таможенный досмотр, красная зона rd QUEUE mq1 
SEIZE rtamognya 
DEPART mq1 
ADVANCE (exponential(1,0,135)) 
RELEASE rtamognya 
TRANSFER ,toregist 
Данная часть описывает процесс прохождения пассажирами таможенного досмотра в красном коридоре. Заявка заходит в очередь mq1, затем занимает устройство rtamognya и покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией 
exponential(1,0,135), где 135 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает устройство и переходит далее по программе. 
;регистрация toregist QUEUE mq2 
ENTER registr 
DEPART mq2 
ADVANCE (exponential(1,0,65)) 
LEAVE registr 
Данная часть описывает регистрацию пассажиров. Заявка заходит в очередь mq2, затем попадает в хранилище размерности 8, описанное как registr STORAGE 8, покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией 
exponential(1,0,65), где 65 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
;паспортный контроль 
QUEUE mq3 
ENTER passcont 
DEPART mq3 
ADVANCE (exponential(1,0,200))  
LEAVE passcont 
Данная часть описывает прохождение пассажирами паспортного контроля. Заявка заходит в очередь mq3, затем попадает в хранилище размерности 10, описанное 	как passcont STORAGE 10, покидает 	очередь. 	Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0,200), где 200 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
;контроль безопасности 
QUEUE mq4 
ENTER doors2 
DEPART mq4 
ADVANCE (exponential(1,0,40)) 
LEAVE doors2 
Данная часть описывает повторное прохождение пассажирами проверки с помощью металлодетектора. Заявка заходит в очередь mq4, затем попадает в хранилище размерности 4, описанное как doors2 STORAGE 4, покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0,40), где 40 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
;чистая зона 
QUEUE mqw 
ENTER waiting 
DEPART mqw 
ADVANCE (exponential(1,0,1800)) 
LEAVE waiting 
Данная часть описывает процесс досмотра багажа пассажиров. Заявка заходит в очередь mqw, затем попадает в хранилище размерности 1000, описанное как waiting STORAGE 1000, покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0,1800), где 1800 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
в) Входные и выходные данные 
Входными данными являются введенные данные о времени работы системы, которую должна смоделировать программа, и количестве заявок, которые посетят систему в течение этого времени. 
Входные данные для программы, описывающей работу авиавокзала международных авиалиний, можно увидеть в таблице 2. 
Таблица 2 – Входные данные для второй программы 
Данные 
Международные линии 

Лето 
Зима 
Полгода 
Год 

Сутки 
Месяц 
Сутки 
Месяц 


Время (с.) 
86400 
2419200 
86400 
2419200 
14515200 
29030400 
Кол-во заявок (макс.) 
16800 
470400 
11760 
329280 
2399040 
4798080 
Кол-во заявок (ср.) 
12000 
336000 
8400 
235200 
1713600 
3427200 
Кол-во заявок (мин.) 
72000 
201600 
5040 
141120 
1028160 
2056320 
Количество заявок рассчитывалось через среднее поступление заявок в час (з/ч). Для международных авиалиний летом оно составляет: 700 з/ч – максимальное, 500 з/ч – среднее, 490 з/ч – минимальное. Зимой поступление заявок снижается на тридцать процентов, и значения будут соответственно: 
490 з/ч – максимальное, 350 з/ч – среднее, 210 з/ч – минимальное. 
г) Вызов и загрузка 
Программа представляет собой стандартный gps файл, запускающий  с помощью GPSS. 
Полный текст программ можно увидеть в приложении А. 
  
2.3.  Проведение экспериментов и анализ результатов 
С 	помощью 	созданной 	программы 	и 	средств 	GPSS 	World 	была 
смоделирована работа аэропорта в течение суток, месяца, полугода и года для максимального, среднего и минимального пассажиропотоков. Так как пассажиропоток в аэропорту в летнее время выше, чем в зимнее, при моделировании работы в течение суток и месяца были проведены отдельные эксперименты для летнего и зимнего периодов.  
На рисунке 5 можно видеть первую часть отчета, полученного после запуска программы с данными для работы в летнее время в течение суток при максимальном пассажиропотоке для внутренних авиалиний. 
 
Рисунок 5 – Первая часть отчета (внутренние линии, лето, сутки, макс. поток) 
На рисунке 6 показана вторая часть данного отчета. 
 
Рисунок 6 – Вторая часть отчета (внутренние линии, лето, сутки, макс. поток) 
Данная часть показывает, каким образом транзакты перенаправлялись в программные блоки согласно операторам вероятностного перехода. 
На рисунке 7 можно видеть третью часть данного отчета. 
 
Рисунок 7 – Вторая часть отчета (внутренние линии, лето, сутки, макс. поток) Как показывают значения AVE.TIME и AVE.(-0) – среднее время пребывания заявки в очереди и среднее время пребывания заявки в очереди без нулевых входов – очереди не появляются лишь в пунктах регистрации, саморегистрации и чистой зоны.  
Все отчеты, созданные программами, можно увидеть в приложении Б. 
 
2.4 Вычисления 
Из полученных отчетов видно, что в системе образуются очереди. Чтобы понять, в каких местах они возникают, то есть найти, так называемые узкие места, и найти способы, с помощью которых можно разгрузить найденные проблемные места, нужно подробно исследовать характеристики системы. 
Как было сказано ранее, данная система представляет собой СеМО, то есть сеть объединенных между собой СМО. Модели массового обслуживания делятся на несколько видов в зависимости от числа мест в накопителях, числа обслуживающих приборов, количества классов поступающих в систему заявок. В данном случае имеется сеть из СМО с накопителями неограниченной емкости, то есть заявка не покидает систему необслуженной. Также имеются СМО как одноканальные, так и многоканальные, поскольку в программе используются и устройства, и хранилища. Поток поступающих в систему заявок однороден, то есть все заявки принадлежат к одному классу, обладают одним приоритетом и время обслуживания для всех заявок одинаковое.  
Сетевые модели, то есть СеМО, также делятся на несколько классов. Так как приход людей в аэропорт неравномерный, данная модель по характеру процессов поступления и обслуживания заявок будет стохастической, то есть интервалы между поступлениями в систему заявок будут измеряться случайными величинами.  
По виду зависимостей, связывающих интенсивности потоков заявок в разных узлах, данная СеМО будет линейной, поскольку, в виду того, что в ней используются накопители неограниченной емкости, отсутствует потеря заявок и размножение заявок. В таком случае интенсивности потока заявок в каждом узле можно выразить формулой: 
𝜆𝑗 = 𝛼𝑗 ∗ 𝜆0, 
где 𝜆0 – интенсивность поступающего из источника потока заявок, 𝜆𝑗 – 
интенсивность потока заявок в узле j, 𝛼𝑗 – коэффициент пропорциональности, показывающий, во сколько раз отличается интенсивности потока заявок в узле j от интенсивности источника заявок, данный коэффициент называется коэффициентом передачи.  
Заявки поступают в систему из независимого внешнего источника, генерирующего заявки независимо от количества заявок в сети, и в СеМО в любой момент времени может находиться любое количество заявок. Такая система называется разомкнутой или открытой и обозначается как РСеМО.  
При работе с РСеМО предполагается, что по окончанию обслуживания в одном узле заявка мгновенно переходит в следующий узел. Все приборы многоканального устройства являются идентичными, поэтому заявка может быть обслужена любым случайным свободным прибором. Длительности обслуживания заявок в узлах измеряются случайными величинами, распределенными по экспоненциальному закону. Обслуживающий прибор в узле не простаивает, если в нем обслуживается хотя бы одна заявка. Заявки для обслуживания выбираются по принципу FIFO – First In First Out или «первым пришел – первым обслужен». 
На рисунке 8 показана схема для первой сети, описывающей работу аэровокзала для внутренних авиалиний.  
 
Рисунок 8 – Схема для внутренних авиалиний 
Каждый узел представляет собой отдельную независимую экспоненциальную СМО типа M/M/N (простейший поток заявок, длительность обслуживания распределена по экспоненциальному закону, N обслуживающих приборов). Совокупность характеристик этих СМО представляет собой узловые характеристики СеМО. Исходя из этого, рассчитаем характеристики данной системы.  
Количество узлов N = 7. Связь между узлами описывается матрицей вероятностных переходов, показанной на таблице 3. 
Таблица 3 – Матрица вероятностных переходов в первой СеМО 
 
0 	1 
2 	3 	4 	5 
6 
7 
0 
0 	1 
0 	0 	0 	0 
0 
0 
1 
0.3 0 
0.07 0.6174 0.0126 0 
0 
0 
2 
0 	0 
0 	0 	0 	1 
0 
0 
3 
0 	0 
0 	0 	0 	0 
0 
1 
4 
0 	0 
0 	0 	0 	0 
0 
1 
5 
0 	0 
0 	0 	0 	0 
1 
0 
6 
1 	0 
0 	0 	0 	0 
0 
0 
7 
0 	0 
0 	0 	0 	0 
1 
0 
Постоянный поток заявок, поступающих в систему, 𝜆0 = 0,472. Узлы 1, 3, 4, 6 и 7 – многоканальные, узлы 2 и 5 – одноканальные. Соответственно, число обслуживающих приборов в каждом узле будет равняться: 𝐾1 = 3, 𝐾2 = 1, 𝐾3 = 15, 𝐾4 = 3, 𝐾5 = 1, 𝐾6 = 1000, 𝐾7 = 4. Средние длительности обслуживания в узлах соответственно равны: 𝑏1 = 40 c, 𝑏2 = 50 c, 𝑏3 = 65 c, 𝑏4 = 30 c, 𝑏5 = 250 c, 𝑏6 = 1800 c, 𝑏7 = 250 c.  
Система линейных алгебраических уравнений для расчета интенсивностей потоков заявок в узлах СеМО, согласно, имеет вид: 
	  	 	(1) 
При решении системы (1) получаются следующие значения интенсивностей: 

.  Тогда коэффициенты передач 
будут соответственно равны: ,
.   
Требуется определить предельную интенсивность поступления заявок в разомкнутую СеМО, чтобы проверить, присутствуют ли в сети перегрузки. Условие, которое определяет отсутствие в сети перегрузок, выражается неравенством: 
 	 (2) 
Как видно из неравенства (2), в данной сети присутствуют перегрузки, так 
как неравенство не выполняется: . Необходимо выявить проблемные места в сети. Для этого воспользуемся расчетами характеристик отдельных узлов, являющихся отдельными СМО. 
С помощью фундаментальных зависимостей, справедливых для большинства классов массового обслуживания, рассчитаем нагрузку и загрузку в узлах. 
Нагрузка показывает среднее число заявок, находящихся на обслуживании. Загрузку можно трактовать как среднее число заявок, находящихся на обслуживании в приборе.  
В таблице 4 представлены математические зависимости и полученные на  их основе значения сетевых характеристик, рассчитанные с учетом найденных значений узловых характеристик.  
Таблица 4 – Расчет узловых характеристик для первой СеМО 
Узловые характеристики 
Расчетные формулы 
Узел 
1 
Узел 
2 
Узел 
3 
Узел 
4 
Узел 
5 
Узел 
6 
Узел 
7 
Нагрузка 
𝑦𝑗 = 𝜆𝑗 ∗ 𝑏𝑗 
18,88 
1,65 
18,915 
0,18 
8,25 
594 
74,25 
Загрузка 
 
1 
1 
1 
0,06 
1 
0,594 
1 
Как видно из таблицы 4, почти во всех узлах значение загрузки равняется единице, эти узлы и называют «узкими местами», означающими, что система не справляется, и образуются очереди, длина которых постепенно увеличивается. В данном случае проблемными оказались узлы 1, 2, 3, 5 и 7, которые соответственно представляют следующие пункты: проверка на входе, регистрация пассажиров бизнес-класса, регистрация, досмотр багажа пассажиров бизнес-класса, досмотр багажа.  
Для разгрузки системы используется два способа: можно либо увеличить число обслуживающих приборов в узле, либо увеличить скорость работы имеющихся приборов, то есть их быстродействие. 
После рассмотрения различных вариантов были выбраны следующие преобразования, представленные в таблице 5. 
Таблица 5 – Преобразования для разгрузки узлов первой СеМО 
Изменения 
Узел 1 
Узел 2 
Узел 3 
Узел 4 
Узел 5 
Узел 6 
Узел 7 
Число приборов 
(до) 
3 
1 
15 
3 
1 
1000 
4 
Продолжение таблицы 5
Изменения 
Узел 1 
Узел 2 
Узел 3 
Узел 4 
Узел 5 
Узел 6 
Узел 7 
Число приборов 
(после) 
21 
2 
21 
3 
10 
1000 
90 
Время обслуживания 
(до) 
40 
50 
65 
30 
250 
1800 
250 
Время обслуживания 
(после) 
30 
40 
50 
30 
200 
1800 
200 
Проверим, удовлетворяет ли измененная сеть неравенству (2): 
 
Выполнение неравенства подтверждает, что произведенные изменения помогли разгрузить узкие места. После принятых изменений можно снова рассчитать характеристики системы. Результаты расчетов приведены в таблице 6. 
Таблица 6 – Новый расчет узловых характеристик для первой СеМО 
Узловые характеритики 
Расчетные формулы 
Узел 
1 
Узел 2 
Узел 3 
Узел 4 
Узел 5 
Узел 6 
Узел 7 
Нагрузка 
𝑦𝑗 = 𝜆𝑗 ∗ 𝑏𝑗 
14,16 
1,32 
14,55 
0,18 
6,6 
594 
59,4 
Загрузка 
 
0,674 
0,66 
0,693 
0,06 
0,66 
0,594 
0,66 
Коэф-т простоя 
𝜋𝑗 = 1 − 𝜌𝑗 
0,326 
0,34 
0,307 
0,94 
0,34 
0,406 
0,34 
Продолжение таблицы 6
Узловые характеритики 
Расчетные формулы 
Узел 1 
Узел 2 
Узел 3 
Узел 4 
Узел 5 
Узел 6 
Узел 7 
Время ожидания 
𝑤
𝑗
=
 
𝜌
𝑗
∗
𝑏
𝑗
(
1
−
 
𝜌
𝑗
)
 
62,025 
77,647 
112,866 
1,915 
388,235 
2633,498 
388,235 
Время пребывания 
𝑢𝑗 = 𝑤𝑗 + 𝑏𝑗 
92,025 
117,647 
162,866 
31,915 
588,235 
4433,498 
588,235 
Длина очереди 
𝑙𝑗 = 𝜆𝑗 ∗ 𝑤𝑗 
29,276 
2,562 
32,844 
0,012 
12,812 
869,054 
115,306 
Число заявок в узле 
𝑚𝑗 = 𝜆𝑗 ∗ 𝑢𝑗 
43,436 
3,882 
47,394 
0,192 
19,412 
1463,054 
174,706 
Теперь, на основании узловых характеристик, можно рассчитать сетевые характеристики. Результаты расчетов приведены в таблице 7. Таблица 7 – Расчет сетевых характеристик для первой СеМО 
Сетевые характеристики 
Расчетные формулы 
Значения 
Время ожидания в сети 
𝑁
W = ∑ 𝛼𝑗 ∗ 𝑤𝑗 
𝑗=1
2252,382 
Время пребывания в сети 
𝑁
U = ∑ 𝛼𝑗 ∗ 𝑢𝑗 
𝑗=1
3716,43 
Число заявок в состоянии ожидания 
𝑁
L = ∑ 𝑙𝑗 
𝑗=1
1061,866 
Продолжение таблицы 7
Сетевые характеристики 
Расчетные формулы 
Значения 
Число заявок в сети 

1752,076 
В результате были найдены и устранены узкие места и рассчитаны характеристики сети для первой СеМО. 
Рассмотрим теперь вторую СеМО аналогичным образом. 
На рисунке 9 показана схема для второй сети, описывающей работу аэровокзала для международных авиалиний. 
 
Рисунок 9 – Схема для международных авиалиний 
Количество узлов N = 7. Связь между узлами описывается матрицей вероятностных переходов, показанной на таблице 8. 
Таблица 8 – Матрица вероятностных переходов в первой СеМО 
 
0 
1 
2’ 
2’’ 
3 
4 
5 
6 
0 
0 
1 
0 
0 
0 
0 
0 
0 
1 
0 
0 
0,9 
0,1 
0 
0 
0 
0 
2’ 
0 
0 
0 
0 
1 
0 
0 
0 
2’’ 
0 
0 
0 
0 
1 
0 
0 
0 
3  0 	0 	0 	0 	0 	1 	0 	0 
4  0 	0 	0 	0 	0 	0 	1 	0 
5  0 	0 	0 	0 	0 	0 	0 	1 
6  1 	0 	0 	0 	0 	0 	0 	0 
Постоянный поток заявок, поступающих в систему,  = 0,139. Узлы 1, 3, 4, 5 и 6 – многоканальные, узлы 2’ и 2’’ – одноканальные. Соответственно, число 
обслуживающих приборов в каждом узле будет равняться: ,
. 	Средние 	длительности 
обслуживания в узлах соответственно равны: 
. 
Система линейных алгебраических уравнений для расчета интенсивностей потоков заявок в узлах СеМО, согласно, имеет вид: 
	 	 	(3) 
При решении системы (3) получаются следующие значения интенсивностей: 

.  Тогда коэффициенты передач 
будут соответственно равны: ,
.   
Требуется определить предельную интенсивность поступления заявок в разомкнутую СеМО, чтобы проверить, присутствуют ли в сети перегрузки. Условие, которое определяет отсутствие в сети перегрузок, выражается неравенством: 
 
Как видно из неравенства (4), в данной сети присутствуют перегрузки, так как неравенство не выполняется: 𝜆0 = 0,139 < 0,028. Выявим проблемные места в сети, воспользовавшись расчетами характеристик отдельных узлов, являющихся отдельными СМО.  
В таблице 9 представлены математические зависимости и полученные на  их  основе значения сетевых характеристик, рассчитанные с учетом найденных значений узловых характеристик.  
Таблица 9 – Расчет узловых характеристик для второй СеМО 
Узловые характеристики 
Расчетные формулы 
Узел 
1 
Узел 
2’ 
Узел 
2’’ 
Узел 
3 
Узел 
4 
Узел 
5 
Узел 
6 
Нагрузка 
𝑦𝑗 = 𝜆𝑗 ∗ 𝑏𝑗 
5,56 
5,004 
1,8765 
9,035 
27,8 
5,56 
250,2 
Загрузка 
 
1 
1 
1 
1 
1 
1 
0,250
2 
Как видно из таблицы 9, почти во всех узлах значение загрузки равняется единице, то есть почти все узлы являются узкими местами. В данном случае проблемными оказались узлы 1, 2’, 2’’, 3, 4 и 5, которые соответственно представляют следующие пункты: проверка на входе, таможенный досмотр в зеленой зоне, таможенный досмотр в красной зоне, регистрация, паспортный контроль, контроль безопасности. 
Для разгрузки системы воспользуемся двумя способами: увеличением числа обслуживающих приборов в узле и увеличением скорости работы имеющихся приборов, то есть их быстродействия. 
После рассмотрения различных вариантов были выбраны следующие преобразования, представленные в таблице 10. 
Таблица 10 – Преобразования для разгрузки узлов второй СеМО 
Изменения 
Узел 1 
Узел 2’ 
Узел 2’’ 
Узел 3 
Узел 4 
Узел 5 
Узел 6 
Число приборов (до) 
2 
1 
1 
8 
10 
4 
1000 
Число приборов 
(после) 
6 
6 
3 
10 
30 
6 
1000 
Время обслуживания 
(до) 
40 
40 
135 
65 
200 
40 
1800 
Время обслуживания 
(после) 
30 
30 
125 
50 
150 
30 
1800 
Проверим, удовлетворяет ли измененная сеть неравенству (4): 
 
Выполнение неравенства подтверждает, что произведенные изменения помогли разгрузить узкие места. После принятых изменений можно снова рассчитать характеристики системы. Результаты расчетов приведены в таблице 11. 
Таблица 11 – Новый расчет узловых характеристик для второй СеМО 
Узловые характеритики 
Расчетные формулы 
Узел 
1 
Узел 
2’ 
Узел 
2’’ 
Узел 3 
Узел 4 
Узел 5 
Узел 6 
Нагрузка 
𝑦𝑗 = 𝜆𝑗 ∗ 𝑏𝑗 
4,17 
3,753 
1,7375 
6,95 
20,85 
4,17 
250,2 
Загрузка 
 
0,695 
0,6255 
0,579 
0,695 
0,695 
0,695 
0,2502 
Продолжение таблицы 11 
Узловые характеритики 
Расчетные формулы 
Узел 
1 
Узел 
2’ 
Узел 
2’’ 
Узел 3 
Узел 4 
Узел 5 
Узел 6 
Коэф-т простоя 
𝜋𝑗 = 1 − 𝜌𝑗 
0,305 
0,3745 
0,421 
0,305 
0,305 
0,305 
0,7498 
Время ожидания 
𝑤
𝑗
=
 
𝜌
𝑗
∗
𝑏
𝑗
(
1
−
 
𝜌
𝑗
)
 
68,361 
50,107 
171,912 
113,934 
341,803 
68,361 
600,64 
Время пребывания 
𝑢𝑗 = 𝑤𝑗 + 𝑏𝑗 
98,361 
80,107 
296,912 
163,934 
491,803 
98,361 
2400,64 
Длина очереди 
𝑙𝑗 = 𝜆𝑗 ∗ 𝑤𝑗 
9,502 
6,268 
2,39 
15,837 
47,511 
9,502 
83,489 
Число заявок в узле 
𝑚𝑗 = 𝜆𝑗 ∗ 𝑢𝑗 
13,672 
10,021 
4,127 
22,787 
68,361 
13,672 
333,689 
Теперь, на основании узловых характеристик, можно рассчитать сетевые характеристики. Результаты расчетов приведены в таблице 12. Таблица 12 – Расчет сетевых характеристик для второй СеМО 
Сетевые характеристики 
Расчетные формулы 
Значения 
Время ожидания в сети 
𝑁
W = ∑ 𝛼𝑗 ∗ 𝑤𝑗 
𝑗=1
1255,3865 
Время пребывания в сети 
𝑁
U = ∑ 𝛼𝑗 ∗ 𝑢𝑗 
𝑗=1
3354,8865 
Число заявок в состоянии ожидания 
𝑁
L = ∑ 𝑙𝑗 
𝑗=1
174,499 
Продолжение таблицы 12 
Сетевые характеристики 
Расчетные формулы 
Значения 
Число заявок в сети 

466,329 
В результате были найдены и устранены узкие места и рассчитаны характеристики сети для второй СеМО. 
 
2.5 Исправленный вариант программы 
Новые программы были разработаны с учетом изменений, внесенных во время анализа характеристик системы. 
2.5.1 Описание программы для внутренних авиалиний 
а) Общее описание 
Программа описывает процесс прохождения клиентами контрольных пунктов в аэровокзале внутренних авиалиний. Программа состоит из сорока семи блоков, в ней используются одно устройство и семь хранилищ. 
б) Структура программы 
GENERATE (exponential(1,0,420)) ;поступление заявок, то есть приход клиентов 
Блок GENERATE здесь задает поток заявок с помощью exponential – стандартной функции экспоненциального распределения, где 420 – среднее время между приходом заявок.  
;проверка на входе 
QUEUE mq3 
ENTER doors 
DEPART mq3 
ADVANCE (exponential(1,0,30)) ;секунды 
LEAVE doors 
Данная часть описывает проверку на входе с помощью металлодетектора. Заявка заходит в очередь mq3, затем попадает в хранилище размерности 21, описанное как doors STORAGE 21, покидает очередь. Время обслуживания заявки 	экспоненциально 	и 	описывается 	встроенной 	функцией exponential(1,0,30), где 30 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе.  
;отделяем пассажиров и встречающих 
TRANSFER .3,pas1,meet 
;бизнес-класс и экипаж идут отдельно pas1 TRANSFER .1,,bsn 
;разделяем регистрацию и саморегистрацию 
TRANSFER .02,pas2,pass 
В программе также используются метки и оператор TRANSFER, который в данном случае обеспечивает вероятностные переходы на нужные в данный момент части программы. 
;саморегистрация pass QUEUE mq0 ENTER selfreg 
DEPART mq0 
ADVANCE (exponential(1,0,30)) 
LEAVE selfreg 
TRANSFER ,next 
Данная часть описывает процесс самостоятельной регистрации пассажиров. Заявка заходит в очередь mq0, затем попадает в хранилище размерности 3, описанное как selfreg STORAGE 3, покидает очередь. Время обслуживания заявки 	экспоненциально 	и 	описывается 	встроенной 	функцией exponential(1,0,30), где 30 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
;регистрация pas2 QUEUE mq ENTER registr 
DEPART mq 
ADVANCE (exponential(1,0,50)) 
LEAVE registr 
TRANSFER ,next 
Данная часть описывает процесс регистрации пассажиров. Заявка заходит в очередь mq, затем попадает в хранилище размерности 21, описанное как registr STORAGE 21, покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0, 50), где 50 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
;досмотр багажа next QUEUE mq1 ENTER bagage 
DEPART mq1 
ADVANCE (exponential(1,0,200)) 
LEAVE bagage 
TRANSFER ,clearz 
Данная часть описывает процесс досмотра багажа пассажиров. Заявка заходит в очередь mq1, затем попадает в хранилище размерности 90, описанное 	как 	 bagage STORAGE 90, покидает 	очередь. 	Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0,200), где 200 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
;бизнес-класс и экипаж bsn QUEUE mqb1 ENTER bnsclass 
DEPART mqb1 
ADVANCE (exponential(1,0,40)) 
LEAVE bnsclass 
TRANSFER ,bsncont 
Данная часть описывает процесс регистрации пассажиров бизнес-класса. Заявка заходит в очередь mqb1, затем занимает хранилище размерности 2, описанное 	как bnsclass STORAGE 2, покидает 	очередь. 	Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0,40), где 40 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает устройство и переходит далее по программе. 
;досмотр багажа бизнес-класса bsncont QUEUE mqb2  
ENTER bsnbag 
DEPART mqb2 
ADVANCE (exponential(1,0,200)) 
LEAVE bsnbag 
TRANSFER ,clearz 
Данная часть описывает процесс досмотра багажа пассажиров бизнес-класса. Заявка заходит в очередь mqb2, затем занимает хранилище размерности 10, описанное как bsnbag STORAGE 10, покидает очередь. Время обслуживания заявки 	экспоненциально 	и 	описывается 	встроенной 	функцией exponential(1,0,200), где 200 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает устройство и переходит далее по программе. 
;чистая зона clearz QUEUE mqw 
ENTER waiting 
DEPART mqw 
ADVANCE (exponential(1,0,1800)) 
LEAVE waiting 
Данная часть описывает процесс досмотра багажа пассажиров. Заявка заходит в очередь mqw, затем попадает в хранилище размерности 1000, описанное как waiting STORAGE 1000, покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0,1800), где 1800 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
в) Входные и выходные данные 
Входными данными являются введенные данные о времени работы системы, которую должна смоделировать программа, и количестве заявок, которые посетят систему в течение этого времени. 
Входные данные для программы, описывающей работу авиавокзала внутренних авиалиний, можно увидеть в таблице 13. 
Таблица 13 – Входные данные для первой скорректированной программы 
Данные 
Внутренние линии 

Лето 
Зима 
Полгода 
Год 

Сутки 
Месяц 
Сутки 
Месяц 


Время (с.) 
86400 
2419200 
86400 
2419200 
14515200 
29030400 
Кол-во заявок (макс.) 
50400 
1411200 
35280 
987840 
7197120 
14394240 
Кол-во заявок (ср.) 
40800 
1142400 
28560 
799680 
5826240 
11652480 
Кол-во заявок (мин.) 
24000 
672000 
16800 
470400 
3427200 
6854400 
Количество заявок рассчитывалось через среднее поступление заявок в час (з/ч). Для внутренних авиалиний летом оно составляет: 2100 з/ч – максимальное, 1700 з/ч – среднее, 1000 з/ч – минимальное. Зимой поступление заявок снижается на тридцать процентов, и значения будут соответственно: 1470 з/ч – максимальное, 1190 з/ч – среднее, 700 з/ч – 
минимальное. 
г) Вызов и загрузка 
Программа представляет собой стандартный gps файл, запускающий  с помощью GPSS. 
2.5.2 Описание программы для международных авиалиний 
а) Общее описание 
Программа описывает процесс прохождения клиентами контрольных пунктов в аэровокзале внутренних авиалиний. Программа состоит из сорока семи блоков, в ней используются семь хранилищ. 
б) Структура программы 
GENERATE (exponential(1,0,420)) ;поступление заявок, то есть приход клиентов 
Блок GENERATE здесь задает поток заявок с помощью exponential – стандартной функции экспоненциального распределения, где 420 – среднее время между приходом заявок. 
;проверка на входе 
QUEUE mq0 
ENTER doors 
DEPART mq0 
ADVANCE (exponential(1,0,30)) ;секунды 
LEAVE doors 
Данная часть описывает проверку на входе с помощью металлодетектора. Заявка заходит в очередь mq0, затем попадает в хранилище размерности 6, описанное как doors STORAGE 6, покидает очередь. Время обслуживания заявки 	экспоненциально 	и 	описывается 	встроенной 	функцией exponential(1,0,30), где 30 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе.  
;разделение зеленую зону и красную зону 
TRANSFER .1,grn,rd 
В программе также используются метки и оператор TRANSFER, который в данном случае обеспечивает вероятностные переходы на нужные в данный момент части программы, а именно разделение потоков заявок на красный коридор и зеленый коридор в пункте таможенного контроля. 
;таможенный досмотр, зеленая зона grn QUEUE gmq1 
ENTER gtamognya 
DEPART gmq1 
ADVANCE (exponential(1,0,30)) 
LEAVE gtamognya 
TRANSFER ,toregist 
Данная часть описывает процесс прохождения пассажирами таможенного досмотра в зеленом коридоре. Заявка заходит в очередь gmq1, затем попадает в хранилище размерности 6, описанное как  gtamognya STORAGE 6, покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0,30), где 30 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает устройство и переходит далее по программе. 
;таможенный досмотр, красная зона rd QUEUE mq1 
ENTER rtamognya 
DEPART mq1 
ADVANCE (exponential(1,0,125)) 
LEAVE rtamognya 
TRANSFER ,toregist 
Данная часть описывает процесс прохождения пассажирами таможенного досмотра в красном коридоре. Заявка заходит в очередь mq1, затем попадает в хранилище размерности 3, описанное как  rtamognya STORAGE 3, покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0,125), где 125 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает устройство и переходит далее по программе. 
;регистрация toregist QUEUE mq2 
ENTER registr 
DEPART mq2 
ADVANCE (exponential(1,0, 50)) 
LEAVE registr 
Данная часть описывает регистрацию пассажиров. Заявка заходит в очередь mq2, затем попадает в хранилище размерности 10, описанное как registr STORAGE 10, покидает очередь. Время обслуживания заявки экспоненциально и описывается встроенной функцией 
exponential(1,0,50), где 50 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
;паспортный контроль 
QUEUE mq3 
ENTER passcont 
DEPART mq3 
ADVANCE (exponential(1,0,150))  
LEAVE passcont 
Данная часть описывает прохождение пассажирами паспортного контроля. 
Заявка заходит в очередь mq3, затем попадает в хранилище размерности 30, описанное 	как passcont STORAGE 30, покидает 	очередь. 	Время обслуживания заявки экспоненциально и описывается встроенной функцией exponential(1,0,150), где 150 – средняя длительность обслуживания в секундах. По завершению обслуживания заявка покидает хранилище и переходит далее по программе. 
