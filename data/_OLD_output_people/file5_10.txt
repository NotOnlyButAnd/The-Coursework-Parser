396
ИНТЕЛЛЕКТУАЛЬНЫЙ АНАЛИЗ ПОТОКОВЫХ ДАННЫХ В БЕСПРОВОДНЫХ СЕНСОРНЫХ СЕТЯХ С ПОМОЩЬЮ ДЕРЕВЬЕВ РЕШЕНИЙ 
3 Алгоритм VFDT для потоковых данных 
3.1 Алгоритм VFDT на основе метода Хеффдинга 
----------
Псевдокод индукционного алгоритма VFDT на основе статистического метода Хеффдинга и, так называемых, границ Хеффдинга, которые помогают ограничить количество примеров достаточных для обучения в каждом узле:
1.  пусть HT – дерево с одним листом (корень);
2.  for all training examples do (для всех тренировочных примеров делать);
3.   sort example into leaf l using HT (сортировать пример в листе l, используя  HT);
4.   update sufficient statistics in l (обновить достаточную статистику
в листе l);
5.   increment ni, the number of examples seen at l  (увеличить число примеров (случаев ni), выдимих в листе  l);
6.   if ni mod nmin=0 and examples seen at l not all of same class then (если ni mod nmin=0 и не все случаи, видимые из l, принадлежат одинаковому классу, тогда):
7.   compute Gl(Xi) for each attribute (для каждого атрибута
вычисляем l(Xi));
8.   let Xa be attribute with highest Gl (найти Xа, свойство с наибольшим l);
9.   let Xb be attribute with second-highest Gl (найти Xb, свойство со вторым по счету наибольшим l);
10.  compute Hoeffding bound  (вычислить границы Хеффдинга);
11.   if  Xа != XØ  and (Gl(Xa) - Gl(Xb) >  ϵ  or  <  T) then  (Если Xа != XØ и (l( Xа) -  l( Xb)) > ε or ε < τ) тогда):
12.  replace l with an internal node that splits on Xa (заменить лист l разделенным узлом на основе Xа);
13.  for all branches of the split do (для всех ветвей разделения сделать):
14.   add a new leaf with initialized sufficient statistics (добавить новый лист с полученной достаточной статистикой от разделенного узла);
15.  end for;
16.  end if;
17.  end if;
18.  end for.
Рисунок 2 - Иллюстарция алгортима VFDT с использованием границ Хеффдинга.
Рассматирваемый алгоритм очень быстрого дерева решений VFDT не имеет условия завершения, так как это потоковый алгоритм. Дерево может расти бесконечно, что противоречит одному из требований к алгоритму потоковой настройки (требует ограниченного объема памяти). Чтобы удовлетворить требованиям ограниченного использования памяти,  в алгоритме VFDT вводят метод ограничения узлов. Этот метод вычисляет "предположение" для каждого оучающегося листа l. "Предположение"  для активного обучающегося листа в VFDT определяется, как взвешенная верхняя граница уменьшения ошибок, достигаемая за счет сохранения активности листа. Основанный на "предложении" алгоритм может деактивировать листья с низким значением ошибки когда дерево достигнет предела доступной памяти. Однако, VFDT все еще контролирует "предложения" для каждого неактивного листа и может активировать неактивные листья, когда их "предложения"  выше, чем "предложения", вычисленные для активных в настоящий момент листьев.