200
Моделирование трехмерных сцен на основе оптимизированных октодеревьев 
2 Методы оптимизации алгоритмов на октодеревьях 
2.3 Упаковка октодерева в одномерный массив 
----------
Для отправки дерева по сети, или сохранения октодерева в ПЗУ используются алгоритмы упаковки, упаковывающие дерево в одномерный массив. Такое представление позволяет как экономить память, так и представить октодерево в виде, удобном для обработки на видеопроцессоре. На старых моделях видеопроцессоров такое представление является единственным доступным для обработки. Рассмотрим пример алгоритма, упаковывающего воксельное дерево для отправки его в GPU. Такие деревья называют Sparse Voxel Octree (SVO, Разреженное воксельное октодерево). Каждый воксель можно описать структурой, представленной на рисунке 6, сохраняющей позицию, цвет, нормаль и смещение:
struct Voxel
{
uint position;
uint color;
uint normal;
uint pad; // aligment
};
Рисунок 6 − представление вокселя в формате структуры (язык HLSL)
Каждый листовой узел октодерева имеет ссылку на объект данной структуры. Таким образом, данные октодерева ссылаются на внешнюю коллекцию вокселей, содержащее их описание.
Вышеописанная структура данных может быть легко представлена в плоском виде и сохранена в 2D-текстуре формата R32_UINT. На рисунке 7 проиллюстрирована схематическая структура полученной текстуры:
Рисунок 7  Представление октодерева в формате 2D-текстуры
В листьях SVO на последнем уровне будут храниться индексы соответствующих вокселей из этого массива. При таком сжатии структуры хранятся исключительно воксели, которые хранят в себе полезную информацию. Пустых узлов не остается.
Конечно, имеется возможность построить октодерево обратно, исходя из массива вокселей.