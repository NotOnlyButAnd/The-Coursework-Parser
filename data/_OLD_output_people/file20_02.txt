663
ТЕХНОЛОГИИ РАЗРАБОТКИ WEB-ПРИЛОЖЕНИЙ 
1 Технологии разработки Web-приложений 
1.1 Клиентские Web-технологии 
----------
Рассмотрим следующие основные клиентские Web-технологии[1].
- HTML (HyperText Markup Language) – язык разметки, предназначенный для создания Web-приложений. Был изобретен и стандартизирован корпорацией W3C в 1996 году. HTML описывает структуру документа, определяя, например, блоки, текст, изображения, формы ввода данных, таблицы, но он не задает конкретных и точных атрибутов форматирования документа, этим занимается браузер. Не является языком программирования, но Web-приложения могут включать в себя встроенные программы-скрипты на других языках программирования, например на JavaScript и PHP.
- CSS (Cascading Style Sheets) – язык таблиц стилей, определяющий оформление и макет элементов HTML. Описывает правила форматирования элементов с помощью свойств и допустимых значений этих свойств. Для каждого элемента можно использовать ограниченный набор свойств. Если HTML можно назвать скелетом, то CSS – одеждой Web-приложения. Стили могут применяться непосредственно к элементу HTML, отдельно определяться на той же странице в контейнере <head>, используя специальный тег <style>, либо определяться в отдельном файле, ссылка на который также будет задаваться в контейнере <head>, используя <link>.
- JavaScript – динамически интерпретируемый язык программирования. При работе с ним в Web-приложении обычно требуется выполнять такие задачи, как:
а) обращение к любому HTML-элементу и проведение манипуляций с ним, таких как удаление, обновление, добавление и другие;
б) запуск код в соответствии с определенными событиями, например, нажатием на кнопку или любой другой элемент html;
в) запрос данных или отправка команды в Web-API.
Вышеперечисленные задачи также можно выполнять при помощи готовых библиотек, позволяющих значительно упростить это. Одной из самых первых и популярных таких библиотек является jQuery, которая по-прежнему используется разработчиками при работе с Web-приложениями.
Возможности JavaScript значительно расширяются при использовании так называемых API.
API – готовые наборы блоков кода, которые позволяют реализовывать программы, которые в противном случае было бы трудно или невозможно реализовать[2]. Обычно API делятся на 2 группы:
1)  API браузера встроены в браузер и способны осуществлять сложные действия с различного вида данными, например:
а) API-интерфейс DOM позволяет манипулировать HTML и CSS, то есть создавать, удалять, изменять элементы HTML, динамически изменять стили каких-либо элементов, создавать всплывающие окна;
б) API геолокации извлекает географическую информацию;
в) API Canvas и WebGL позволяют создавать анимированные 2D и 3D-графики;
г) Аудио и видео API, такие как HTMLMediaElement и WebRTC, позволяют делать действительно интересные вещи с мультимедиа, такие как проигрывание аудио и видео прямо на веб-странице.
2)	Сторонние API – устанавливаются отдельно и обладают собственным уникальным функционалом. Например, Google Maps API позволяет встраивать пользовательские карты на Web-сайте.
На этом возможности JavaScript не заканчиваются. На сегодняшний день данный язык очень популярен и стремительно развивается. Помимо написания клиентского кода, JavaScript используется также при написании серверного кода, о чем будет говориться дальше.
- Ajax (Asynchronous JavaScript and XML) – технология обращения к серверу без перезагрузки страницы, благодаря чему Web-приложение становится быстрее и удобнее. Другими словами, при использовании технологии Ajax скрипт вносит изменения только в ту часть документа, из которой пришел до этого запрос. Можно выделить 3 основных возможности данной технологии:
1) полезен при заполнении форм, например, при авторизации или нажатии на кнопку подписки, добавления в корзину и прочее,
2) динамическая подгрузка данных,
3) живой поиск, например, при вбивании слова в поиск в Google.
Удобно использовать в паре с вышеназванной библиотекой jQuery.
- Angular.JS – относительно новый JavaScript фреймворк с открытым исходным кодом, впервые представленный в 2009 году. Предназначен для разработки одностраничных приложений. Его цель – расширение браузерных приложений на основе MVC-шаблона, а также упрощение тестирования и разработки.
Одной из ключевых возможностей Angular.JS являются директивы, позволяющие разработчику описать поведение отдельных элементов и расширить синтаксис HTML. Помимо этого, Angular позволяет декларативно описывать как должен меняться UI в зависимости от изменения состояния приложения, что дает возможность не заниматься утомительной программной манипуляцией DOM, удалять шаблонный код (например, колбеки) без каких-либо потерь и сохранять только такой код, который описывает общий поток данных в Web-приложении.
Исходя из возможностей Angular.JS можно сказать, что данный фреймворк позволяет сделать из рутинных задач тривиальные, а из сложных – возможные. Кроме этого, порог входа в Angular.JS достаточно низок, а значит, что научиться работать с ним достаточно просто.
Помимо приведенных выше клиентских Web-технологий стоит также отметить такие популярные технологии, как React, Vue, Laravel и другие, предоставляющие нескромные возможности по разработке Web-приложений.