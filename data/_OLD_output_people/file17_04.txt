185
Изучение организации многопоточности в Java и Python 
2. Средства реализации многопоточности в Python 
----------
Организации многопоточности в Python без внешних библиотек можно добиться с помощью модуля threading. Однако многопоточности в её привычном понимании в CPython (одна из самых популярных реализаций Python) нет.
Всё дело в так называемом глобальном шлюзе - Global Interpreter Lock (GIL). Этот шлюз ограничивает поведение потоков на уровне интерпретатора. Цель данной технологии – синхронизация потоков, то есть защита от одновременного обращения разных потоков к одному и тому же участку памяти. Благодаря GIL однопоточные приложения работают быстро, а потоки в многопоточных приложениях не конфликтуют. Ценой этому является замедление многопоточных программ.
В один момент времени всегда выполняется только один поток. GIL постоянно (через некоторые промежутки времени – зависит от версии) переключает потоки.
Рисунок 3 – Схема работы GIL
Однако такую работу шлюза можно обойти. Существуют специальные библиотеки, которые помогают ускорять многопоточные программ: NumPy (для математических расчётов), Numba (графические вычисления), SciPy и другие.
Рисунок 4 – Сравнение времени работы программы с подключением NumPy и без
Таким образом следует понимать, когда стоит использовать многопоточность в Python (когда количество её достоинств будет перекрывать недостатки).
* Для операций ввода-вывода.
* Когда вычисления занимают более миллисекунды.
* Число потоков не превышает количество ядер.