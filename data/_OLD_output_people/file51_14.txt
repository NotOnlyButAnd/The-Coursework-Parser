508
ИССЛЕДОВАНИЯ АЛГОРИТМОВ КОЛЛАБОРАТИВНОЙ ФИЛЬТРАЦИИ И РАЗРАБОТКА РАСШИРЯЕМОЙ РЕКОМЕНДАТЕЛЬНОЙ СИСТЕМЫ 
3 Практическая реализация рекомендательной системы с неявной обратной связью через матричную факторизацию 
3.1 Обрабатываемые данные 
----------
В качестве входных данных рассмотрим взаимодействие пользователей и товаров в интернет магазине. На рисунке 4 изображена структура файл данных.
Рисунок 4 – Файл с транзакциями пользователей
Рассмотрим все сделки для каждого клиента и представить их в формате, который будет пригоден для ALS. Это означает, что нам необходимо представить данные в виде матрицы так, чтобы все ID клиентов были заголовками в строках матрицы, а все ID элементов были заголовками в столбцах матрицы. Такая матрица заполняется   количеством покупок товаров каждым из клиентов.
Перед написанием кода, загрузим некоторые библиотеки, которые помогут нам с предварительной обработкой:
а) pandas;
б) scipy;
в) numpy
Набор данных включает в себя номер счета-фактуры для различных покупок, наряду с StockCode (или ID товара), описание товара, количество покупок, дата покупки, цена товара, идентификатор заказчика, и страна происхождения для заказчика. Чтобы избежать ошибок, необходимо проверить все ли поля, которые планируется использовать, заполнены.
Большинство колонн не имеют пропущенных значений, но ID клиента отсутствует в нескольких строках. Если ID клиента отсутствует, мы неизвестно, кто купил товар. Необходимо отбросить такие строки из данных. Будем использовать использовать функцию pandas.isnull, чтобы проверить строки с недостающими данными и оставить только те строки, которые имеют идентификатор клиента.
Прежде чем сделать какую-либо матрицу оценок, было бы неплохо иметь таблицу, в которой хранятся ID товара и его описание. Это позволит составить соответствие между StockCode и его описанием. Затем выполним следующие действия, которые подготовят данные к использованию:
а) сгруппировать количество закупок вместе по StockCode и ID товара;
б) менять любые суммы, которые равны нулю на один (это может произойти, если товары были возвращены, так будет обозначено, что пользователь фактически приобретал товар, чтобы отличать отсутствие взаимодействия между пользователем и товаром с
возвратом товара);
в) создать наш рейтинг разреженные матрицы.
Этот последний шаг является особенно важным, так как позволит бороться с возможными проблемами  памятью компьютера. Очевидно, что в этом случае, матрица будет содержать тысячи товаров и тысячи пользователей с рейтингами для этих товаров. Это большая матрица, поэтому мы можем сэкономить много памяти на хранении разреженной матрицы, если будем хранить только значения элементов, которые не равны нулю.
Код ниже (рисунок 5) выполнит финальные шаги предварительной обработки, необходимой для получения матрицы подходящего вида.
Рисунок 5 – Предварительная обработка
Вид результирующей матрицы сгруппированных покупок (рисунок 6).
Рисунок 6 – Полученные отфильтрованные данные
Вместо того, чтобы представлять явный рейтинг (например, оценку от 1 до 5), количеством закупок товара можно представлять «уверенность» в плане того, как сильно этот товар подходит данного пользователю. Предметы с большим числом покупок клиентом могут иметь большой вес в матрице рейтингов покупок.
Так как матрица сильно разряженная, то стоит позаботится о ее структуре, чтобы не расходовать память в пустую. Создание разреженной матрицы рейтингов пользователей и элементов, используя код ниже (рисунок 7).
Рисунок 7 - Создание разряженной матрицы
В итоге получилось получилась 4338 клиентов и 3664 товаров. При взаимодействии между пользователями и товарами, пользователями всего было куплено 266723 товаров. В условиях разреженности матрицы взаимодействия равной 98.3% мы можем применить коллаборативную фильтрацию. Для работы алгоритмов коллаборативной фильтрации необходимо, чтобы разреженность была менее 99,5% иначе можно не получить хороших результатов. В данном случае разряженность далека до этого, поэтому использование коллаборативной фильтрации должно вернуть достойные результаты.