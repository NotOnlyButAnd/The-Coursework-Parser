412
ИССЛЕДОВАНИЯ АЛГОРИТМОВ КОЛЛАБОРАТИВНОЙ ФИЛЬТРАЦИИ И РАЗРАБОТКА РАСШИРЯЕМОЙ РЕКОМЕНДАТЕЛЬНОЙ СИСТЕМЫ 
3 Практическая реализация рекомендательной системы с неявной обратной связью через матричную факторизацию 
3.2 Создание обучающего и тестового множеств для РС.
----------
Как правило, в приложениях машинного обучения, производится проверка того, что является ли модель, которая уже считается натренированной на обучающей выборке, хорошо работающей на новых данных, которые она еще не видела на этапе обучения. Это можно сделать путем создания тестового набора полностью отделенного от обучающего набора. Обычно это довольно просто сделать: достаточно взять случайную выборку обучающих примеров из нашей матрицы и отделить ее от обучающего набора (рисунок 9). Это обычно выглядит так:
Рисунок 9 – Показательное разбиение данных на 2 выборки
С коллаборативной фильтрацией, это не будет работать, потому что в ней нужны все взаимодействия пользователей и элементов, чтобы найти правильную факторизации матрицы.  Лучший способ скрыть определенный процент взаимодействий пользователей и предметов в модели на этапе тренировки. Стоит отметить, что выбирать скрываемые взаимодействия можно случайно. Затем, проводится проверка на стадии тестирования, выясняется какие из многих товаров, которые были рекомендованы пользователю, на самом деле в конечном итоге были куплены. Также можно проверить рекомендательную систему с использованием данных из временных рядов, где все данные до определенного момента времени используется для тренировок, а затем после определенного периода времени используется для тестирования. Как можно разбить исходные данные на две обучающие выборки данных проиллюстрируем на рисунке 10:
Рисунок 10 – Визуализация наложения маски
В данном случае тестовый набор - это точная копия исходных данных. Обучающий набор, однако, будет маскировать случайный процент взаимодействий пользователей с объектами, и действовать, как если бы пользователь не купил эти товары (то есть значение матрицы относительно этих определенных пользователей и объектов будет равно нулю). После обучения модели, проверим её на тестовом наборе данных, и выясним, действительно ли товары, которые были рекомендованы пользователю оказались им куплены. Если пользователи в конечном итоге часто приобретали товары, которые им рекомендовала система, то можно сделать вывод: система, кажется, работоспособной.
В качестве дополнительной проверки рекомендательной системы, можно сравнить получившуюся систему с наиболее популярными товарами. Этот метод тестирования не обязательно дает достоверный результат, потому что это зависит от того, как будет использоваться реализуемая система рекомендаций. Однако, это практический способ тестирования производительности, поэтому также будем использовать его для данного примера.
Определившись с способом выделения тренировочной выборки и тестовой выборки, создадим функцию, которая выполнит это (рисунок 10).
Рисунок 11 – Функция генерации тренировочной выборки
Эта функция вернет обучающий набор, набор тестов, который был бинаризован, 0/1 за купленные/не купленные, и список пользователей, которые взаимодействовали по крайней мере с  одним скрытым товаром. Тестирование производительности рекомендательной системы будет произведено именно на этих пользователях. В данном случае было замаскировано 20% взаимодействий пользователей с товарами.
Приведя исходные данные к нужному виду перейдем к реализации алгоритма чередующихся наименьших квадратов.