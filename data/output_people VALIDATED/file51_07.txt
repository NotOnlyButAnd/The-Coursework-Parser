277
ИССЛЕДОВАНИЯ АЛГОРИТМОВ КОЛЛАБОРАТИВНОЙ ФИЛЬТРАЦИИ И РАЗРАБОТКА РАСШИРЯЕМОЙ РЕКОМЕНДАТЕЛЬНОЙ СИСТЕМЫ
1 Моделирование предпочтения в рекомендательных системах 
1.4 Модель предпочтения SVD 
----------
Одна из наиболее известных моделей предпочтения — SVD, определяется следующим образом:
puTqi,    θ = ({pu} u ∈ U,{qi} i ∈ I),                                 (4)
где pu ∈ — вектор скрытых (латентных) предпочтений пользователя, qi ∈ ℝR — аналогичный вектор для объекта, R — размерность латентных векторов, будем называть ее рангом модели SVD. В формуле (4) представлена формула предсказания для рейтингов. Модель SVD обучается путем оптимизации квадратичных потерь , с квадратичной регуляризацией: Ω(θ) =
2 + 	2. Название модели SVD не следует путать с сингулярным
разложением (Singular Value Decomposition). Такое название модели вошло в оборот в сообществе исследователей рекомендательных систем с момента публикации Саймоном Фанком статьи, описывающей его решение Netflix Prize. Идея подобной модели была быстро подхвачена и распространена исследователями в различных модификациях (см. обзор в статье), т.к. имела достаточно хорошую обобщающую способность (как следствие — результат в конкурсе) по сравнению с memory-based методами, популярными на тот момент. Как будет показано далее, данная модель имеет мало общего с сингулярным разложением. В своей статье, Саймон Фанк оптимизировал модель SVD методом стохастического градиентного спуска. Несколько позже был предложен более эффективный и допускающий распараллеливание по пользователям и объектам алгоритм ALS (Alternating Least Squares). Его идея заключается в том, что при фиксированных латентных векторах объектов {qi} i ∈ I, оптимизация (3) только по латентным векторам пользователей {pu} u ∈ U разбивается на независимые регуляризованные задачи наименьших квадратов по пользователям:
puTqi 	rᵤᵤ)2 +	2 	.                           (5)
Для каждого пользователя u ∈ U, оптимальный латентный вектор p*u вычисляется как решение СЛАУ с матрицей размера R×R:
P*u	qTi	-1  ∙ (	) .                                                                            (6)
При фиксированных латентных векторах пользователей, оптимальные латентные вектора объектов вычисляются аналогичным образом. Алгоритм ALS заключается в циклическом пересчете латентных векторов пользователей и объектов.