159
Изучение организации многопоточности в Java и Python
2. Средства реализации многопоточности в Python 
2.2. Синхронизация 
----------
* Атомарные операции: простейший способ синхронизации с общими переменными или другими ресурсами. Атомарная операция – это операция, которая осуществляет только один этап выполнения задачи. Примеры атомарных операций:
* модификация списка на месте (добавление объекта при помощи append);
* выборка объекта в словаре;
* модификация словаря на месте (добавление объекта или вызов метода clear)
* Lock: блокировка, имеет два метода acquire() – осуществляет (захватывает) блокировку, release() – снимает блокировку.
* RLock: блокировка с возможностью повторного захвата, то есть если поток пытается захватить блокировку, которой он уже владеет, то выполнение программы производится в обычном режиме.
* Условные переменные (condition/conditional variable): изменение статуса состояния в приложении (этот статус могут ожидать другие потоки) или оповещение других потоков о наступлении данного состояния.
* Semaphore: механизм синхронизации, который содержит счётчик потоков, которые в данный момент выполняют данный участок кода, если значение счётчика будет 0 (при входе каждого потока в этот участок счётчик декрементируется, при выходе инкрементируется), то поток, который пытается получить доступ будет заблокирован.
*