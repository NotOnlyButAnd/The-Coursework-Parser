315
РЕАЛИЗАЦИЯ И СРАВНИТЕЛЬНЫЙ АНАЛИЗ МЕТОДОВ МАШИННОГО ОБУЧЕНИЯ ДЛЯ КЛАССИФИКАЦИИ МУЗЫКАЛЬНЫХ КОМПОЗИЦИЙ ПО ЖАНРАМ
3 Алгоритм классификации 
3.3 Описание алгоритма классификации 
----------
В ходе данной курсовой работы был реализован классификатор музыкальных композиций по жанрам на основе метода логистической регрессии. Этот алгоритм хорошо работает на небольшом количестве признаков обучающей выборки и удобно реализуется в языке программирования Python. Как и во многих случаях решения задач машинного обучения, большинство времени ушло на обработку данных, предназначенных для обучающей выборки.
На вход классификатору планировалось подать массив из 13 мел-частотных коэффициентов для каждого из 4135 кадров музыкального произведения. Но такой объём данных слишком велик для линейного алгоритма, если учитывать то, что в обучающей выборке более 500 файлов. Вместо этого коэффициенты усредняются по всем кадрам. Также предполагается, что несколько первых и последних секунд звучания в меньшей степени определяют жанр, чем середина, поэтому 10% звучания можно проигнорировать. Это нужно для более корректной работы классификатора. В итоге массив признаков для аудиофайла содержит небольшое число коэффициентов, равное числу коэффициентов, извлекаемых из каждого кадра.
Обучающие данные для классификатора подготовлены вручную и имеют структуру небольшого каталога: для каждого жанра создаётся папка с его именем в качестве названия, содержащая аудиофайлы в формате «.wav». Затем эти папки помещаются в родительскую папку. Причём в ней должны быть только подпапки-жанры.
В общем случае, алгоритм классификации работает следующим образом. Для каждой композиции в папке считаются мел-кепстральные коэффициенты, усредняются по всем кадрам и заносятся в массив, а название папки – жанра – заносится в массив признаков в качестве метки для данного файла. Коэффициенты для каждого произведения сохраняются в папке с помощью функции np.save() в файле с названием аудиофайла и разрешением «.npy». Это необходимо, чтобы не считать их каждый раз и избежать переобучения классификатора. Далее создается матрица признаков, содержащая массивы MFCC для композиций всех жанров и вместе с массивом меток подаётся алгоритму логистической регрессии для обучения.
Для тестовых композиций MFCC извлекаются и усредняются по аналогичной схеме и заносятся в матрицу признаков, а затем вызывается функция predict(X_test, Y_test), которая для каждого произведения рассчитывает вероятность принадлежности его к каждому классу. На выходе получаем массив меток – распознанные жанры.