425
РАЗРАБОТКА РАСПРЕДЕЛЕННОЙ СИСТЕМЫ ИСПОЛЬЗОВАНИЯ УДАЛЕННЫХ ВЫЧИСЛИТЕЛЬНЫХ РЕСУРСОВ
2 Разработка распределенной вычислительной системы . 
2.2 Функциональное назначение . 
----------
Данная программа представляет собой систему, которая осуществляет связь между компьютерами и с помощью библиотек, входящих в её состав, предлагает пользователю на высоком уровне абстракции распределить свою задачу, а затем получить результат.
В состав программы входят классы ComputeEngine и CRDSController, которые доступны пользователю и содержаться в файле CRDS.jar.
Для установки программы на компьютер достаточно скопировать файл CRDS.jar, папку с библиотеками lib и файлы crds_policy, client_policy, server_policy.
Класс ComputeEngine представляет собой реализацию абстрактного вычислителя, который на вход принимает задачу, а на выходе выдает результат. Задача определяется пользователем через класс, реализующий интерфейс Task, в качестве результата выполнения задачи, класс ComputeEngine возвращает пользователю объект класса реализации Task, таким образом пользователь сам решает какую структуру будет иметь его задача и как будет представлен результат, который он может получить определенным методом. Класс ComputeEngine при получении задачи взаимодействует с запущенной программой CRDS, которая осуществляет поиск компьютера с установленной системой CRDS, куда и отправляется поставленная задача. Компьютеры могут находится как в локальной, так и в глобальной сети. Таким образом использование класса ComputeEngine и системы CRDS обеспечивать прозрачность взаимодействия пользователя с удаленными вычислительными машинами.
Класс CRDSController обеспечивает пользователю контроль над системой CRDS, а именно возможность изменять максимальное количество отправляемых задач, принимаемых задач, настройка количества используемой памяти и другие. В добавок присутствуют методы контроля состояний задач, отправляемых и выполняемых системой, которые представлены в виде классов перечислений (enum) ServerStatus и TaskStatus. Также при применении связи с устройствами в глобальной сети используются веб сервера, состав которых может быть изменен пользователем через класс CRDSController.
Стоит отметить, что пользователь сам реализует распределенный алгоритм с помощью класса ComputeEngine, система CRDS выступает в роли распределителя как поступающих, так и отправленных задач между устройствами сети.
Также система CRDS ориентирована на пользователей, обладающих базовыми навыками программирования на языке Java.
Помимо решения дорогостоящих, по требуемым вычислительным ресурсам, задач, данная система позволяет решать и другие проблемы, в рамках которых требуется вычисления на других устройствах.
Для запуска системы требуется установленная на компьютере среда выполнения программ Java – это JVM. Также требуется разрешить доступ приложению к сети, путем подтверждения всплывающего сообщения при первом запуске программы или вручную добавить в исключения брандмауэра. Также при использовании для подключения к сети через роутер, применяемый NAT, следует перенаправить данные программы в настройках роутера.
В противном случае система, находящаяся за NAT или блокированная брандмауэром, не сможет обеспечить пользователю полный набор функций, а именно – работа компьютера в качестве узла для других устройств сети.
Таким образом для выделения сервера со стороны системы, чтобы обеспечить доступ через интернет требуется белый IPv4 адресс[5] и правильно настроенный брандмауэр, а также роутер (если используется). Однако, в отсутствии предъявленных требований, программа может функционировать только в пределах компьютера пользователя.