608
ИНТЕЛЛЕКТУАЛЬНЫЙ АНАЛИЗ ПОТОКОВЫХ ДАННЫХ В БЕСПРОВОДНЫХ СЕНСОРНЫХ СЕТЯХ С ПОМОЩЬЮ ДЕРЕВЬЕВ РЕШЕНИЙ
4. Реализация и тестирование алгоритмов 
4.2. Тестирование и оценка результатов 
----------
Предположим, что нас интересует, какую зарплату в среднем получает человек в определенном возрасте, проживающий в определенном городе. Для этого необходимо узнать несколько параметров, таких как:
-город проживания;
- возраст;
-пол;
-образование;
-накопления за год;
-траты в месяц;
-семейное положения;
-сколько дней длится отпуск;
Зная, эти факторы попробуем составит дерево принятия решений. Подготовим данные, стандартом является формат ARFF, фактически это CSV с некоторыми методанными. Далее добавляем поля методанных в начало файла. На отдельных строчках добавляется следующая информация:
- название зависимости @relation имя;
- описание атрибутов @attribute: имя, тип;
- @data перед началом самих данных.
Различают следующие типы данных:
- численные (numeric,real,integer),
-перечислимые(nominal) ,
-строковые (string),
-дата (date[date format]),
-составной тип (relation).
Полученный файл необходимо поместить в систему  с помощью Open File вкладки Preprocess. Теперь мы можем редактировать файл уже в системе, изменения могут осуществляться как вручную, так и наложением на данные фильтра для их очищения или трансформации.
Фильтры делятся на два типа:
1.  применение, которых может вызвать отклонение (фактически эти фильтры требуют уже наличия каких-то знаний, полученных от примененного какого-то алгоритма обучения);
2.  которые можно применять к еще необработанными данными.
Далее в ходе работы будем использовать фильтры unsupervised.
RemoveType, Remove – для удаления определенных атрибутов, в том числе и по типу – необходимо, так как не все типы могут быть использованы в различных алгоритмах;
Disctretize – для перевода числового атрибута в перечислимый;
RemoveUseless – для удаления атрибута, значение которого варьируется слишком сильно;
ReplaceMissing Values – для замещения отсутствующих значений средними по атрибуту;
На данной вкладке можно выбрать зависимую переменную и увидеть в графическом виде ее зависимость от текущего выбранного атрибута. При помощи Visualize All представить зависимость этой переменной от всех атрибутов в графическом виде.
Для лучшего понимания работы программы рассмотрим небольшой пример.
1.  Описание данных, создание файла с расширением arff:
2.  Загрузка файла в программу Weka:
Рисунок 4 -  Пример использование программы Weka
3.  Для выполнения классификации переходим на вкладку Classify. Там мы увидим окно Test Options. Выбираем Use Training Set, чтобы использовать модель, которую WEKA создаст на основе наших данных из *.arff – файла. Далее необходимо выбрать метод классификации:
Рисунок 5 - Вкладка Тest opinion
4.  Жмем кнопку старт и получаем результат.
Из полученного результата можно увидеть, что:
* в блоке Classifier model строится дерево с указанием количества его уровня;
* в блоке Confusion Matrix строится матрица ответов на поставленный вопрос;
* в блоке Summary описывается время исполнения программы, вероятность неточного ответа.
Реализуем алгоритм С4.5 на выборке из 100,200,300,400,500 опрошенных людях, на основе этого составим сравнительную таблицу работы алгоритма.
Реализуем алгоритм VFDT на выборке из 100,200,300,400,500 опрошенных людях, на основе этого составим сравнительную таблицу работы алгоритма.
Для того, чтобы проанализировать и сравнить результаты работ алгоритмов составим графики.
Рисунок 6 - График времени работы алгоритмов C4.5 и VFDT
Рисунок 7 - График точности классификации алгоритмов C4.5 и VFDT
Из рисунков 5 и 6 можно сделать вывод, что коэффициент точности у алгоритмов растет с увеличением получаемой информации, причем коэффициенты близки к равным. А вот время работы алгоритмов значительно различается с приростом информации, алгоритм С4.5 значительно поднимается в верх, а вот VFDT изменяется незначительно.
Для более точного анализа, рассмотрим еще одну статистику, для частоты эксперимента возьмем такую же выборку из 100,200,300,400,500 опрошенных людей.
Узнаем, какова вероятность одобрения заявки на кредит, для этого необходимо уточнить несколько параметров, таких как:
-город проживания;
- возраст;
-пол;
-кредитная история;
-стабилен ли доход;
-траты в месяц;
-семейное положения;
-история работы;
После обоработки информации алгоритмами, получим данные о работе программы:
Для более наглядного анализа построим графики времени работы алгоритмов и их точности.
Рисунок 8 - График времени работы алгоритмов C4.5 и VFDT для данных о кредитовании
Рисунок 9 - График точности классификации алгоритмов C4.5 и VFDT для данных о кредитовании
Из рисунков 8 и 9 получили идентичные значения, что и в предыдущем примере.