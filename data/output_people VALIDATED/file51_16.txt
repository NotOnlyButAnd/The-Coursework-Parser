321
ИССЛЕДОВАНИЯ АЛГОРИТМОВ КОЛЛАБОРАТИВНОЙ ФИЛЬТРАЦИИ И РАЗРАБОТКА РАСШИРЯЕМОЙ РЕКОМЕНДАТЕЛЬНОЙ СИСТЕМЫ
3 Практическая реализация рекомендательной системы с неявной обратной связью через матричную факторизацию 
3.3 Реализация ALS для рекомендательной системы с неявной обратной связью на языке Python 
----------
Имея тренировочные и тестовые наборы данных, можно переходить к реализации алгоритма.
Вспомним, что имеем матрицу оценок, которая сильно разрежена. Получим из нее матрицу уверенности. То есть тем самым в случае соответствующих действий пользователя закрепляем его уверенность относительно некоторых объектов.
,                                                                                  (10)
где  – это уверенность в том, что пользователю u подходит предмет i. Переменная α представляет собой линейное масштабирование рейтинга предпочтений (в нашем случае количество покупок) и переменная rui является значением из нашей оригинальной матрицы закупок. Формула (10) описывает получение матрицы уверенности для всех пар клиент – предмет.
После взятия производной из уравнения 3 в статье [1], мы можем минимизировать получившуюся функцию для пользователей U:
,                                                            (11)
Авторы из статьи [1] утверждают, что можно увеличить производительность этого вычисления, если его немного изменить с помощью линейной алгебры:
,                     (12)
Стоит Обратить внимание, что теперь можно предварительно рассчитать часть YTY для того, чтобы не вычислять его заново для каждого пользователя u.
Также аналогичное уравнение можно получить и для предметов:
(13)
Эти два уравнения необходимо чередовать до тех пор, пока они не сойдутся. Также в этой модели есть коэффициент регуляризации λ, который может помочь предотвратить переобучение на этапе обучения, а также, также здесь есть матрица предпочтений p, которая заполнена нулями и единицами, причем единица стоит лишь в том случае, если между пользователем и предметом было взаимодействие.
Теперь представим эту концепцию в виде кода (рисунок 12).
Рисунок 12 – Реализация ALS
Попробуем просто запустить одну итерацию кода, чтобы увидеть, как это работает (это довольно медленно прямо сейчас!). Выберем 20 скрытых факторов вместе с альфой 15 и регуляризацией 0.1. Это заняло около 70 секунд.
Теперь после исполнения кода можно исследовать рейтинги для конкретного пользователя, используя скалярное произведение между пользовательским вектором из матрицы U   и векторов товаров матрицы V.
При данной реализации была выполнена только одна итерация алгоритма ALS, так как он работает слишком медленно. Конечно, следовало выполнить как минимум десять итераций, так чтобы U и V сходились. Так как эта реализация слишком ресурсно-затратна, следует двигаться дальше.