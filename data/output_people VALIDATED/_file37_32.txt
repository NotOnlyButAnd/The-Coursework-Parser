659
ОРГАНИЗАЦИЯ БАЗЫ ЗНАНИЙ О СВОЙСТВАХ СТОХАСТИЧЕСКИХ МОДЕЛЕЙ БЕСПРОВОДНЫХ КОМПЬЮТЕРНЫХ AD HOC СЕТЕЙ 
3 Реализация . 
3.9 Класс, описывающий логику взаимодействия с окном программы 
----------
Один из самых основных классов в приложении с пользовательским интерфейсом, так как именно он ведет обработку действий пользователя, контролирует его деятельность, сообщает об ошибках и связывает программные объекты с данными, которые поступают от пользователя.
Поля:
* Random _random – экземпляр класса рандом для генерации случайных чисел;
* string _operationCode – представляет собой последовательность из трёх чисел от 0 до 1: каждое из этих чисел означает, включен ли определенный набор параметров поиска (параметры области, параметры проведения эксперимента, параметры результатов эксперимента) в условия. Так, например, при значении operationCode = “001” при поиске будут учитываться только параметры результатов проведения экспериментов;
* Experiment _lastExperiment – хранит последний проведенный за запуск приложения эксперимент. Необходим для формирования и просмотра свежих отчётов по экспериментам;
* Selection _lastSelection - хранит последнюю проведенную за запуск
приложения выборку экспериментов. Необходим для формирования и просмотра свежих отчётов по выборке
экспериментов;
* int _areaShape – поле предназначено для хранения формы области;  float _areaHeight – поле предназначено для хранения высоты области;
float _areaWidth – поле предназначено для хранения ширины области;
float _radius – поле предназначено для хранения радиуса действия вершины;
int _nodesCount – поле предназначено для хранения количества вершин в графе;
int _graphsCount – поле предназначено для хранения количества формируемых в эксперименте графов;
45
float _areaHeightFrom – поле предназначено для хранения минимального значения высоты области;
float _areaHeightTo – поле предназначено для хранения максимального значения высоты области;
float _areaWidthFrom – поле предназначено для хранения минимального значения ширины области;
float _areaWidthTo – поле предназначено для хранения максимального значения ширины области;
float _radiusFrom – поле предназначено для хранения минимального значения радиуса действия вершины;
float _radiusTo – поле предназначено для хранения максимального значения радиуса действия вершины;
int _nodesCountFrom – поле предназначено для хранения минимального значения количества вершин в графах;
int _nodesCountTo – поле предназначено для хранения максимального значения количества вершин в графах;
int _graphsCountFrom – поле предназначено для хранения минимального значения количества графов в эксперименте;
int _graphsCountTo – поле предназначено для хранения максимального значения количества графов в эксперименте;
float _connectionPossibilityFrom– поле предназначено для хранения минимального значения вероятности связности;
* float _connectionPossibilityTo – поле предназначено для хранения максимального значения вероятности связности;
* float _degreeExpectationFrom – поле предназначено для хранения минимального значения математического ожидания степени вершины;
float _degreeExpectationTo – поле предназначено для хранения максимального значения математического ожидания степени вершины;
* float _arcsExpectationFrom– поле предназначено для хранения минимального значения математического ожидания количества рёбер;
* float _arcsExpectationTo – поле предназначено для хранения максимального значения математического ожидания количества рёбер.
Примечание: Все значения полей, кроме _lastExperiment и _lastSelection
«тянутся» из соответствующих элементов управления TextBox на вкладках проведения и поиска экспериментов.
Методы:
* MainWindow () – конструктор, который инициализирует все элементы, определения которых находятся в MainWidow.xaml;
bool ReadAndValidateDataFromMakeForm () – считывает и проверяет корректность значений из элементов управления TextBox на вкладке проведения экспериментов. Возвращает значение true, если все данные введены пользователем корректно;
bool ReadAndValidateDataFromSearchForm () – считывает и проверяет корректность значений из элементов управления TextBox на вкладке поиска экспериментов. Возвращает значение true, если все данные введены пользователем корректно;
void MakeExperiment_Click (object sender, RoutedEventArgs e) – обработчик кнопки «Провести эксперимент», внутри генерируется объект Experiment и помещается в _lastExperiment;
* void SeachExperiment_Click (object sender, RoutedEventArgs e) – обработчик кнопки «Найти эксперимент», внутри генерируется
объект Selection и помещается в _lastSelection;
void	CheckBoxSearchParametrs_Click(object 	sender,
RoutedEventArgs e) – обрабатывает отметки элементов управления CheckBox, затемняя или осветляя область используемых или не используемых параметров;
* void RememberProperties () – метод вызывается при закрытии окна и помещает содержимое каждого из элементов управления TextBox в параметры проекта, чтобы введенные при закрытии окна данные были воспроизведены при открытии окна;
void SetProperties () – метод, который при инициализации окна собирает все переменные из свойства проекта и «забивает» ими содержимое элементов управления TextBox;
void ShowResults () – выводит на экран результат поиска экспериментов, то есть выборку _lastSelection;
void Window_Closing(object sender, EventArgs e) – обработчик закрытия окна, вызывает метод RememberProperties ();
void MakeReport_Click (object sender, RoutedEventArgs e) – обработчик кнопки «Создать отчёт», запускает формирование отчёта от объекта _lastExperiment или _lastSelection;
void ViewReport_Click (object sender, RoutedEventArgs e) – обработчик кнопки «Просмотреть отчёт», запускает последний сформированный PDF-отчёт.
51