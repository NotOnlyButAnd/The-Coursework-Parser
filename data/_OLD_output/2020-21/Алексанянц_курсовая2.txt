Evaluation Warning: The document was created with Spire.Doc for Python.
МИНИСТЕРСТВО НАУКИ И ВЫСШЕГО ОБРАЗОВАНИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ
Федеральное государственное бюджетное образовательное учреждение 
высшего образования 
«КУБАНСКИЙ ГОСУДАРСТВЕННЫЙ УНИВЕРСИТЕТ»
(ФГБОУ ВО «КубГУ»)
Факультет компьютерных технологий и прикладной математики
Кафедра вычислительных технологий

КУРСОВАЯ РАБОТА

WEB СЕРВИС ДЛЯ РАЗВИТИЯ МАЛОГО БИЗНЕСА



Работу выполнил ___________________________________ Л.Т. Алексанянц 
(подпись, дата)
Направление подготовки 02.03.02 «Фундаментальная информатика и информационные технологии» курс 3
Направленность (профиль) «Вычислительные технологии»

Научный руководитель
канд. техн. наук доц.________________________________  Т.А.Приходько                   						(подпись)

Нормоконкролер
ассистент  ____________________________________________А.А. Климец              			                       		(подпись)




Краснодар 2020

СОДЕРЖАНИЕ
ВВЕДЕНИЕ	3
1	SMM продвижение	4
1.1	Достоинства SMM продвижения	4
1.2	Недостатки SMM продвижения	5
1.3	Основные задачи продвижения в социальных сетях	5
2	Проектирование инструмента для автоматизации продвижения в социальных сетях	7
2.1	Выбор социальной сети	7
2.2	Определение круга проблем	8
2.3	Определение базового функционала	11
3	Стек технологий для разработки и внедрения программы для автоматизации продвижения в социальных сетях	12
3.1	Язык программирования	12
3.2	Структура классов в программе	13
3.3	Работа с VK API	14
3.5	Автоматическое разгадывание капчи. Сервис RuCaptcha	17
4	Обзор программы	18
4.1	Вкладка «Аккаунты»	20
4.2	Вкладка «Задания»	22
4.3	Вкладка «Настройки»	23
4.4	Вкладка «Прокси»	24
ЗАКЛЮЧЕНИЕ	25
СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ	26


ВВЕДЕНИЕ

В современное время социальные сети играют огромную роль в жизни каждого человека. Вместо простого формата сайта для общения и знакомств по интересам, многие площадки стремительно расширяются, стараясь захватить всё больше привычных сфер деятельности человека. Они проводят огромные мероприятия в реальной жизни на десятки тысяч человек, в которых принимают участие даже крупные звёзды. Некоторые социальные сети даже имеют свою платёжную систему, используя которую можно получать льготы, например, в такси или в ресторанах быстрого питания. Такое многообразие возможностей социальных сетей позволяет людям проводить в них всё больше и больше времени. Это и есть главное задача всех подобных сайтов – захват человеческого времени. Объясняется это тем, что большую часть этого времени человек потратит на свои нужды, общение, прослушивание музыки, просмотр фотографий, но даже не заметит, как вместе с этим просмотрит огромное количество где-то скрытой, а где-то вполне прямолинейной рекламы. Многие современные бренды, малый бизнес и просто обычные люди, предлагающие свои услуги, участвуют в «ожесточенной» борьбе за клиента. Это соревнование приводит к стремительному росту цен на рекламу в социальных сетях. Крупные бренды могут себе позволить размещать рекламу на баннерах и в огромных по количеству участников сообществах, в то время как начинающим предпринимателям трудно себе позволить такую «роскошь».  В условиях экономических трудностей актуально предложить доступный инструмент для развития малого бизнеса.

1  SMM продвижение

Под термином SMM продвижение принято считать привлечение трафика маркетологами через социальные сети. При этом они участвуют в дискуссиях, общаются на форуме, размещают публикации, рекомендуют для друзей интересные события, статьи и планируемые мероприятия.
В последнее время SMM-продвижение в социальных сетях — одна из самых актуальных тем отечественного бизнеса. Такую тенденцию можно легко объяснить — аудитория социальных сетей стремительно растет, вытесняя радио, телевидение и печатные СМИ. Всё чаще для поиска информации люди посещают интернет и соцсети. Именно поэтому сегодня SMM-продвижение — один из самых актуальных и востребованных способов коммерческого успеха.

1.1  Достоинства SMM продвижения

Почему продвижение в социальных сетях так быстро обретает популярность? На самом деле SMM продвижение в наше время имеет ряд преимуществ перед другими способами продвижения:
1)  Невысокая стоимость входа в нишу бизнеса. Для набора друзей, создания группы, мероприятия, освещения планируемого события не требуются значительные инвестиции. Главная затрата — время для создания информации.
2)  Высокая вирусоемкость. Возможность получения тысяч посетителей на сайт за относительно небольшое время — за счет вирусного распространения информации. Даже если публикация позволит привлечь внимание 10 человек, то они обязательно поделятся новостью со знакомыми и так далее.
3)  Хорошие перспективы развития. Социальные сети развиваются с колоссальной скоростью.
4)  Невысокая конкуренция. Пока компании еще недостаточно оценили возможности социальных сетей, поэтому можно добиться серьезной отдачи при небольших расходах.
1.2  Недостатки SMM продвижения

К сожалению, существуют и недостатки такого продвижения:
1)  Неразвитая аналитика. Непросто анализировать действия посетителей — откуда приходят, что именно их привело на страницу.
2)  Контроль со стороны модераторов сетей. Чрезмерная активность может привести к неприятным последствиям. В частности, возникает риск блокировки либо ограничения деятельности. Во всех социальных сетях это происходит по-разному, необходимо ориентироваться на сложившиеся правила и традиции.
3)  Потребность в администрировании. Требуется серьезные временные затраты для поддержания активности социальной группы. Часто требуется привлекать человека для администрирования группы.
4)  Неудобно принимать оплату.

Подведя итоги, можно прийти к выводу, что SMM продвижение – отличный способ получения прибыли для любого бизнеса и маркетолога. 

1.3  Основные задачи продвижения в социальных сетях

Для обеспечения наилучшего результата необходима ежедневная качественная работа по ведению бизнеса в интернете. У каждого маркетолога имеется собственный подход, и никто не захочет делиться тем, что приносит прибыль. Несмотря на это можно выделить несколько ключевых задач для продвижения в социальных сетях:
1)  Создание тематической группы с информацией о своей компании, товарах или услугах;
2)  Ведение группы, публикация новых записей, необходимо учитывать время активности клиентов. Нужно понимать, что чем чаще мы публикуем записи о нашем товаре или услуге в группе – тем чаще мы будем отображаться в ленте новостей клиента. Но и злоупотребление размещением так же может повлечь за собой раздражение, а в последствии и отписки клиентов. Необходимо «поймать» золотую середину.
3)  Привлечение новых подписчиков в группу.
4)  Взаимодействие с клиентами. Нужно быть готовым мгновенно ответить клиенту, ведь если он будет долго ждать – его уже заинтересует конкурент. Время – деньги.
5)  Поиск целевой аудитории в других сообществах. Можно так же стать тем самым конкурентом – и выманить множество ожидающих или находящихся в поисках именно вашего товара либо услуги клиентов. Необходимо брать клиентов «горячими» пока желание получить то, что они хотят превышает здравый смысл.

Все эти действия либо требуют огромного времени, либо отдельного человека, получающего за такую работу зарплату. Поэтому основной задачей данной курсовой работы ставится проектирование и разработка инструмента, автоматизирующего большую часть рутинной работы по продвижению в социальных сетях.

2  Проектирование инструмента для автоматизации продвижения в социальных сетях

Проектирование – самый сложный этап для каждого продукта. Именно на нем определяется курс разработки, с которого потом будет очень сложно свернуть. К счастью, социальные сети довольно однотипны в подходе к ним. Основные положения, такие как UI – дизайн или многопоточность – будут одинаковыми для любой социальной сети. На этапе проектирования необходимо ответить на три основных вопроса:
1)  На основе какой социальной сети строить этот инструмент.
2)  Определить проблемы, которые могут возникнуть в процессе разработки.
3)  Выбор базового функционала инструмента.
Стоит понимать, что эти вопросы актуальны только для MVP стадии продукта. Ведь в итоге необходимо получить максимально расширяемую программу, чтобы в любой момент можно было добавить необходимый функционал, поскольку с развитием социальных сетей увеличивается и количество способов для продвижения. Нужно всегда следить за трендами и держать функционал софта в актуальном и работоспособном состоянии.

2.1  Выбор социальной сети

Первым делом необходимо определиться с социальной сетью, на основе которой будет реализован инструмент. Анализируя рынок, можно прийти к выводу, что нишу самой популярной и пригодной для продвижения социальной сети в России занимают 3 крупные социальные сети: ВКонтакте, Инстаграм и Твиттер, логотипы которых изображены на рисунке 1.

Рисунок1 – логотипы Инстаграм, Твиттер и ВКонтакте
Они сильно отличаются по способу ведения бизнес-аккаунта:
1)  В Инстаграм маркетологу необходимо красиво оформлять страницу, ежедневно выкладывать красивые фотографии с не менее красивым описанием, заниматься взаимным пиаром с крупными инстаграм-блогерами, а также проводить розыгрыши на различную тематику. Это придаёт аккаунту оживленность и позволяет получить естественный прирост заинтересованных подписчиков. 
2)  В Твиттер самое главное для успешного продвижения – придумать свою уникальную фишку. Так как эта социальная сеть направлена на высказывание своего мнения в виде так называемых «твиттов». Существует множество примеров как никому неизвестные аккаунты «выстреливали» и за несколько недель набирали десятки тысяч новых пользователей, потому что они уникальны, а людям нравится стоять у истоков новых интернет-движений.
3)  И наконец самый оптимальный вариант – это ВКонтакте. Это социальная сеть в классическом понимании. Все перечисленные в пункте 1.3 задачи легко выполняются в рамках этого сайта. 
Изучив все три социальные сети, можно прийти к выводу, что самый низкий порог вхождения имеет ВКонтакте, а значит для начала разработки стоит выбрать именно эту сеть.

2.2  Определение круга проблем

Так как инструмент в основном рассчитан на маркетологов – необходимо понимать, что в их распоряжении может быть не один, и даже не десяток аккаунтов, которые он продвигает. В связи с этим первая проблема – обеспечение мультизадачности, изображенной на рисунке 2.


Рисунок 2 – обеспечение мультизадачности в программе

Следующая проблема, которая может возникнуть в процессе использования программы – это появление капчи. Капча – это картинка с набором букв и цифр, которая появляется в результате чрезмерной активности пользователя на странице. Пользователь должен ввести текст с изображения в специальное поле, и после этого может продолжить работу. Данная процедура выполняется для предотвращения автоматизации выполнения действий на странице. Очень сложно программно подобрать текст с картинки, поэтому программа обойти это не сможет. Пример капчи изображен на рисунке 3.

Рисунок 3 – капча Вконтакте
И, наконец, третьей по счету, но не по важности проблемой является подмена IP адреса, или использование так называемого Proxy сервера. Множество аккаунтов в распоряжении маркетологов – предполагает большую ответственность. Клиенты доверили ему свои аккаунты, и не хотелось бы, чтоб по вине социальной сети они все одновременно были подвержены блокировке.  Если более 10 аккаунтов одновременно зайдут с одного IP адреса – то алгоритмы ВКонтакте моментально заподозрят подозрительную попытку входа, или если один аккаунт будет заблокирован за нарушение правил социальной сети (а использование сторонних программ для автоматизации – это нарушение) – то остальные аккаунты, зашедшие с того же IP адреса будут в подозрении на нарушение. Практика показывает, что использование Proxy помогает свести вероятность блокировки почти к нулю и обеспечить высокую безопасность для аккаунтов клиента. Пример работы прокси сервера изображен на рисунке 4. 


Рисунок 4 – пример работы Proxy сервера

Все приведенные выше проблемы необходимо сразу учитывать при разработке инструмента, потому что если их не решить – то программа сразу же становится бесполезной, ибо кроме вреда она ничего не принесет. А запоздалое решение проблем может занять много времени и повлечь за собой массу ошибок.

2.3  Определение базового функционала

С учетом выбранной социальной сети и поставленных проблем можно выделить основной функционал программы для автоматизации продвижения в социальных сетях:
1)  Многопоточность (одновременная работа любого количества аккаунтов).
2)  Поддержка автоматического решения капчи.
3)  Поддержка Proxy серверов 2-х типов (HTTPs и Socks v5).
4)  Автоматизация рутинных задач из пункта 1.3 курсовой работы.
5)  Ведение подробного лога по каждому аккаунту.
6)  Автоматическое сохранение и загрузка настроек при старте и завершении программы.

Данный функционал представляет основные принципы для продвижения в социальных сетях. Это ключевые моменты, без которых ни одна программа не будет приносить пользу. Поэтому при проектировании и разработки на начальных этапах необходимо сразу сделать упор на эти задачи, чтобы в будущем можно было просто расширять функционал, не думая о возможных проблемах использования. Эти надстройки всегда будут работоспособны в программе независимо от состояния социальной сети, так же можно говорить и о их стабильности, ведь то, как они будут работать зависит только от разработчика. Исключением можно назвать разве что Proxy. Совсем недавно вышла новая версия Proxy сервера – так называемые «Мобильные прокси». Их преимущество в том, что они обновляются раз в 1 или 2 минуты. Следовательно, мы всегда имеем разный IP адрес, что помогает «запутать» алгоритмы социальной сети, не давая им нанести какой либо ущерб нашему профилю. И с выходом этих «мобильных прокси» разработчикам пришлось переписывать функционал своих программ, потому что при обновлении IP адреса, данные в Cookies об авторизации становились неактуальными, и необходимо было обновить данные Cookies перейдя по специальной ссылке. В остальном конечно же этот функционал останется неизменным на всё время существования программы.  

3  Стек технологий для разработки и внедрения программы для автоматизации продвижения в социальных сетях

3.1  Язык программирования

Для разработки собственного продукта принято решение использовать C++ в совокупности с фреймворком Qt 5.14.1. Несмотря на то, что C++ - это язык, где работа с сетью реализуется далеко не самым удобным образом, взять например Python, где это делать в разы быстрее, выбор пал именно на него так как он имеет ряд весомых преимуществ:
1)  Скорость работы. Приложения на языке C++ ощутимо быстрее работают и пользователю будет комфортней работать в программе.
2)  Многопоточность. Удобно реализуемая многопоточность с использованием класса QThread позволяет сразу решить одну из ключевых задач софта.
3)  Механизм сигналов и слотов. Этот мощный механизм во фреймворке Qt позволяет удобно и очень быстро наладить связь между GUI, потоками и пользователем.
4)  Удобный графический редактор с возможностью задания QSS стилей позволяет сделать красивое приложение с удобным дизайном.
5)  Кроссплатформенность. Фреймворк Qt позволяет компилировать исходный код на любую операционную систему.
6)  Удобная документация. Во фреймворке Qt есть очень удобная и подробная документация с примерами, пользуясь которой можно даже и не выходить в сеть по многим вопросам. 
Во всяком случае эстетическая красота типизированного языка не может не радовать.
3.2	Структура классов в программе

Для решения поставленных задач необходимо реализовать несколько классов:
1)  Класс WorkThread – необходим для выполнения прописанных алгоритмов. В нём строится вся логика работы программы со следующим классом VK и Algorithm.
2)  VK – класс, связывающий множество других классов, таких как Method/Auth, Method/Friends и так далее, в единое целое. Что позволяет работать со всеми методами через один класс. Он представляет собой реализацию методов из VK API для удобного обращения к ним.
3)  Adapter – класс, являющийся моделью данных в программе. Хранит абсолютно все данные. Хранит настройки программы и аккаунтов. Имеет методы save() и load() для сохранения и загрузки сессии соответственно.
4)  Algorithm – класс, являющийся моделью данных для заданий в программе. Так как задания являются уникальными и составными, необходимо где то хранить всю логику, а так же логику взаимодействия отдельных блоков задания между собой.
5)  MainWindow – класс, являющийся контроллером и обеспечивающий взаимодействие модели данных с GUI (предствалением).

Вышеперечисленные классы – это некий костяк, на котором держится вся программа. На самом же деле для обеспечения расширяемости программы принято решение использовать эти классы как родительские, а для отдельных функций программы наследовать новые классы от них добавляя свой функционал. Такое решение отлично сработало. Схематично структура изображена на рисунке 5.


Рисунок5 – MVC архитектура разрабатываемой программы


3.3  Работа с VK API

1)  Для того, чтобы разобраться с VK API, необходимо усвоить некоторые понятия: 
2)  GET запрос – это обычный HTTP или HTTP/s запрос на URL ссылку с «Открытыми» параметрами, то есть все параметры (если они есть) запроса передаются в самой ссылке. Такие запросы используются для получения данных, которые может увидеть любой пользователь, и которые не обязательно скрывать.
3)  POST запрос – это HTTP или HTTP/s запрос на URL ссылку с «Закрытыми» параметрами, то есть все параметры запроса передаются в теле запроса в скрытом виде.  Такие запросы используются для авторизации на сайте, осуществления каких-либо действий на сайте, которые требуют дополнительных параметров. Например, «Поиск» требует наличия ключевых слов, так же на некоторых сайтах неавторизированным пользователям поиск запрещен, авторизация проверяется исходя из заголовка и тела нашего запроса. «Отправка комментария» требует нескольких параметров, зачастую это наличие авторизации, текст комментария, заголовок, время и так далее. Пожалуй, самый важный пример использования POST запроса – это авторизация. Существует огромное количество сайтов, на которых для того, чтобы получить доступ ко многим данным необходимо авторизоваться.
4)  JSON – это формат, который хранит структурированную информацию и в основном используется для передачи данных между сервером и клиентом.
5)  API (Application Programming Interface) представляет собой совокупность различных инструментов, функций, реализованных в виде интерфейса для создания новых приложений, благодаря которому одна программа будет взаимодействовать с другой.

Используя эти понятия можно дать определение следующему. VK API – это набор методов ВКонтакте, позволяющих разработчику работать с социальной сетью Вконтакте и писать собственные клиенты социальной сети. Для получения доступа к методам необходимо зарегистрировать приложение на сайте https://vk.com/editapp?act=create , далее использовать выданный специальный CLIENT_SECRET и CLIENT_ID при авторизации аккаунта. После чего сервер вернёт ACCESS_TOKEN – который сообщает об успешной авторизации и позволяет использовать методы VK API. Для того, чтобы воспользоваться методом необходимо отправить POST запрос с параметрами, среди которых обязательно должны указываться ACCESS_TOKEN, выданный при авторизации, а также V (версию API) и LANG (язык). Ответ приходит в формате JSON, в котором содержится информация об успешности запроса, об ошибках, а также о том, появилась ли капча. Как уже сообщалось ранее, для работы с VK API в программе реализован класс VK. 
3.4	Работа с сетью и отправка запросов в Qt

Для осуществления отправки запросов в классе VK реализован объект Request, в котором и находятся необходимые методы GET и POST. Сами методы реализованы с использованием классов QNetworkAccessManager, QNetworkReply, QNetworkRequest, QNetworkProxy, QEventLoop, QTimer и QMap для передачи параметров POST запроса.
QNetworkAccessManager – инициализируется в конструкторе класса: QNetworkAccessManager *http = new QNetworkAccessManager(this);
Краткая реализация метода POST без приведения обработки ошибок и редиректов: 
public QString post(QString url, QMap postData) {
	QNetworkRequest request;
	request.setUrl(QUrl(url));
	QStringList postDataList;
	for (auto key: postData.keys()) {
	postDataList.append(QString(“%1=%2”).arg(key,postData.value(key)));
	}
	QEventLoop eloop;
	QNetworkReply *reply = http->post(request, postDataList.join(“&”));
	connect(reply,&QNetworkReply::finished,&eloop,&QEventLoop:quit);
	QTimer::singleShot(3000,&QEventLoop::quit,&eloop);
	eloop.exec();
	QString result = reply->readAll();
	reply->deleteLater();
	return result;
}
Реализация метода GET достигается подобным образом, за исключением отсутствия postDataList, а так же метод http->post(…) заменяется на http->get(…). Так же в этом классе реализована работа с Proxy сервером с помощью класса QNetworkProxy. Метод public setProxyRow(QString row) получает на вход строку, содержащую данные о сервере, записанные через разделитель, разбивает эти данные и создает объект: 
QNetworkProxy proxy;
proxy->setType(QNetworkProxy::httpOnly); //Или другой тип в зависимости от строки row
proxy->setHost(ip);
proxy->setPort(port);
proxy->setUsername(login);
proxy->setPassword(pass);
Далее этот объект устанавливается в заранее проинициализированный объект http методом setProxy(QNetworkProxy proxy).

3.5	Автоматическое разгадывание капчи. Сервис RuCaptcha

Сервис RuCaptcha.com так же имеет собственный API для взаимодействия с ним. Для работы с данными API было принято решение реализовать отдельный класс CRuCaptcha. В данном классе по ключу пользователя (который выдается каждому пользователю при регистрации на сервисе) можно проверить баланс на сервисе, а так же есть метод public recognize(QString &result, QByteArray image). Данный метод используя всё те же запросы отправляет POST запрос с Content-Type: Multipart/Form-Data с изображением капчи в теле запроса на специальный адрес сервиса. В ответе приходит специальная ссылка для проверки состояния решения капчи. В это время на другой стороне люди решают эти капчи вручную, как только капча была решена – сервер возвращает ответ ОК|TEXT, где вместо TEXT искомый результат. Опять Хакерские штучки? – лучше убрать.
Таким образом решились практически все ключевые проблемы, а именно: многопоточность, Proxy сервер, разгадывание капчи. Это позволяет заниматься разработкой программы думая лишь о новом функционале, который никак не будет влиять на основное взаимодействие пользователя с программой.
4  Обзор программы

Было принято решение назвать программу VKSpider. VK – означает социальную сеть, в которой она работает, а Spider – обозначает, что программа как паук «лазает» в паутине социальной сети и эффективно заманивает клиентов в «паучьи сети». Скриншот главного окна программы изображен на рисунке 6.



Рисунок 6 – скриншот главного окна программы.

Основная цель программы VKSpider заключается в помощи людям в продвижении их бизнеса. Те, кто не могут оплатить автоматизированную рекламу в социальной сети ВКонтакте, вынуждены тратить огромное количество времени на ручное продвижение своих товаров и услуг. 

VKSpider помогает автоматизировать всё, о чем описано выше и делает это максимально гибко:
1)  Создание группы.  Пусть это достаточно индивидуальный процесс, но если групп нужно создать 100 или 200? VKSpider займется этим, и создаст указанное количество групп по заготовленному шаблону. Останется их только отредактировать под конкретную деятельность.
2)  Ведение группы. Простое задание для VKSpider. Функции отложенной публикации постов с гибким интервалом позволяют забыть о необходимости каждый день подготавливать и выкладывать посты. Нужно просто один раз заполнить настройки и публикуемый контент. 
3)  Привлечение новых подписчиков в группу. Этот метод продвижения делится на несколько типов в зависимости от способа привлечения. Это может быть «Рассылка в тематические группы», «Рассылка людям в личные сообщения», «Ответы на истории пользователей» и многие другие. Методов много, но все они расположены таким образом, что пользователь сможет быстро разобраться в работе программы. Работает всё, что позволяет хоть ненадолго обратить внимание пользователя на вас. В VKSpider реализованы почти все существующие на данный момент методы привлечения клиентов. А функционал программы позволяет выполнять их в многопоточном режиме увеличивая результативность. 
4)  Взаимодействие с клиентами. В VKSpider есть «Автоответчик» позволяющий автоматически отвечать новым написавшим пользователям. Программа анализирует входящий текст, и на основе него отправляет ответное сообщение исходя из заготовленного шаблона. Функционал программы позволяет унифицировать сообщения, например, упоминание имени собеседника придаёт диалогу «живости», а рандомизация позволяет комбинировать синонимы в сообщении, добиваясь более уникальных текстов.
5)  Поиск целевой аудитории. Искать можно в разных местах: в «тематических группах», «поиске ВКонтакте», «через друзей», «через друзей друзей», можно предложить еще множество способов, все они реализованы в программе VKSpider.



4.1  Вкладка «Аккаунты»

Вкладка «Аккаунты», изображенная на рисунке 6, содержит таблицу с аккаунтами. Слева находится список групп, в которые можно сгруппировать аккаунты. Добавить группу можно введя название в соответствующее поле и нажав на кнопку «+» пример изображен на рисунке 7.



Рисунок 7 – добавление новой группы
Добавить аккаунт можно тремя способами. Первый – нажать на кнопку «Добавить аккаунт» расположенную над таблицей с аккаунтами. Второй – нажать на кнопку «Добавить список аккаунтов», расположенную там же, а также специальной командой из контекстного меню по нажатию правой кнопкой мыши на пустое пространство в таблице. При добавлении аккаунта необходимо ввести логин, пароль, а также при необходимости дополнительные параметры. Пример добавления изображен на рисунке 8.
Но только, Леон, пароли нельзя хранить в таком виде!


Рисунок 8 – добавление нового аккаунта

Все действия с аккаунтами, включая добавление их в задания, редактирование и авторизацию можно выполнить из контекстного меню, которое вызывается по правому щелчку мыши на любом из аккаунтов или нескольких выделенных аккаунтов. Пример изображен на рисунке 9.


Рисунок 9 – дополнительные действия с аккаунтами


4.2  Вкладка «Задания»

Вкладка «Задания» содержит список заданий, расположенный слева. Вкладка «Все задания» содержит таблицу со всеми заданиями и информацией об их состоянии. Пример изображен на рисунке 10.



Рисунок 10 – вкладка «Все задания» со списком текущих заданий

Добавить задание можно по аналогии с добавлением аккаунта. Каждое задание содержит вкладку «Аккаунты» для отображения списка аккаунтов, работающих в конкретном задании, а также вкладку «Настройки» в которой находится конструктор алгоритмов для составления алгоритма работы. Пример на рисунке 11.
Конструктор алгоритмов представляет собой набор действий, а также условия и циклы. Действия располагаются в центральном списке и будут выполнены в том порядке, в котором были выстроены пользователем. Остальные вкладки на вкладке «Задания» пока неработоспособны.
Рисунок 11 – конструктор алгоритмов в задании

Планируется добавить расписание заданий, а также возможность выбора задания по заранее заготовленном шаблону, который представляет собой уже спроектированный алгоритм работы.

4.3  Вкладка «Настройки»

Вкладка «Настройки» содержит общие настройки программы. Они применяются сразу ко всем заданиям и аккаунтам. В неё входят такие настройки как «Задание ключа RuCaptcha» или возможность установить собственные User-Agents. Пример изображен на рисунке 12.

Рисунок 12 – общие настройки программы

4.4  Вкладка «Прокси»

Вкладка «Прокси» отвечает за контроль и работу Proxy серверов в программе. Через эту вкладку можно проверить работоспособность прокси сервера, а также назначить прокси сервер конкретному аккаунту или группе аккаунтов. Также есть возможность разбивать список прокси на группы. Пример изображен на рисунке 13.

Рисунок13 – вкладка «Прокси»

Данный софт находится на ранней стадии разработки. Но проект уже разросся до невероятных масштабов. На данном этапе практически завершена работа над логикой алгоритмов. Осталось сделать так, чтобы программа смогла распознавать эти алгоритмы, связать программу с VK API (библиотека уже есть, нужно только подключить и добавить туда необходимые методы). Так же в будущем планируется реализация этих методов без использования API. Полностью имитируя поведение человека.

ЗАКЛЮЧЕНИЕ

В ходе выполнения курсовой работы был спроектирован и начал разрабатываться многофункциональный софт, позволяющий значительно облегчить ведение бизнеса начинающим предпринимателям или людям, чья профессия связана с продвижением. Были изучены методы SMM продвижения, основные положения при работе с VK API, принцип работы с сервисом RuCapthca, а также получен огромный опыт в разработке многопоточных приложений, использующих подключение к сети, на языке C++ используя фреймворк Qt. 

СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ

1  Кондукова Е. Qt 5.3 Профессиональное программирование на C++// Издательство: BHV, 2017 – 928с
2  А.А. Дубаков СЕТЕВОЕ ПРОГРАММИРОВАНИЕ// Издательство: НИУ ИТМО, 2013 - 248 с
3  Статья на русском языке. [Электронный ресурс] Статья, URL: https://wiki.merionet.ru/servernye-resheniya/24/chto-takoe-api-prostaya-statya-dlya-vashej-babushki/ (Дата обращения: 10 мая 2020)
4  Документация на русском языке. [Электронный ресурс] Документация, URL: https://vk.com/dev/methods (Дата обращения: 13 мая 2020)
5  Многопоточность. [Электронный ресурс] Статья, URL: https://www.opennet.ru/docs/RUS/qt3_prog (Дата обращения: 15 мая 2020)
6  SMM-продвижение. [Электронный ресурс] Статья, URL: https://medium.com/@tsockol/smm (Дата обращения: 20 мая 2020)



